(self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([[888], {
    41396: function(m, R) {
        !function(m) {
            "use strict";
            var R, extendStatics = function(m, R) {
                return (extendStatics = Object.setPrototypeOf || ({
                    __proto__: []
                })instanceof Array && function(m, R) {
                    m.__proto__ = R
                }
                || function(m, R) {
                    for (var C in R)
                        Object.prototype.hasOwnProperty.call(R, C) && (m[C] = R[C])
                }
                )(m, R)
            };
            function __extends(m, R) {
                if ("function" != typeof R && null !== R)
                    throw TypeError("Class extends value " + String(R) + " is not a constructor or null");
                function __() {
                    this.constructor = m
                }
                extendStatics(m, R),
                m.prototype = null === R ? Object.create(R) : (__.prototype = R.prototype,
                new __)
            }
            function __decorate(m, R, C, T) {
                var L, U = arguments.length, B = U < 3 ? R : null === T ? T = Object.getOwnPropertyDescriptor(R, C) : T;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
                    B = Reflect.decorate(m, R, C, T);
                else
                    for (var $ = m.length - 1; $ >= 0; $--)
                        (L = m[$]) && (B = (U < 3 ? L(B) : U > 3 ? L(R, C, B) : L(R, C)) || B);
                return U > 3 && B && Object.defineProperty(R, C, B),
                B
            }
            function __spreadArray(m, R, C) {
                if (C || 2 == arguments.length)
                    for (var T, L = 0, U = R.length; L < U; L++)
                        !T && L in R || (T || (T = Array.prototype.slice.call(R, 0, L)),
                        T[L] = R[L]);
                return m.concat(T || Array.prototype.slice.call(R))
            }
            m.OPERATION = void 0,
            (R = m.OPERATION || (m.OPERATION = {}))[R.ADD = 128] = "ADD",
            R[R.REPLACE = 0] = "REPLACE",
            R[R.DELETE = 64] = "DELETE",
            R[R.DELETE_AND_ADD = 192] = "DELETE_AND_ADD",
            R[R.TOUCH = 1] = "TOUCH",
            R[R.CLEAR = 10] = "CLEAR";
            var C = function() {
                function ChangeTree(m, R, C) {
                    this.changed = !1,
                    this.changes = new Map,
                    this.allChanges = new Set,
                    this.caches = {},
                    this.currentCustomOperation = 0,
                    this.ref = m,
                    this.setParent(R, C)
                }
                return ChangeTree.prototype.setParent = function(m, R, C) {
                    var T = this;
                    if (this.indexes || (this.indexes = this.ref instanceof en ? this.ref._definition.indexes : {}),
                    this.parent = m,
                    this.parentIndex = C,
                    R) {
                        if (this.root = R,
                        this.ref instanceof en) {
                            var L = this.ref._definition;
                            for (var U in L.schema) {
                                var B = this.ref[U];
                                if (B && B.$changes) {
                                    var $ = L.indexes[U];
                                    B.$changes.setParent(this.ref, R, $)
                                }
                            }
                        } else
                            "object" == typeof this.ref && this.ref.forEach(function(m, R) {
                                if (m instanceof en) {
                                    var C = m.$changes
                                      , L = T.ref.$changes.indexes[R];
                                    C.setParent(T.ref, T.root, L)
                                }
                            })
                    }
                }
                ,
                ChangeTree.prototype.operation = function(m) {
                    this.changes.set(--this.currentCustomOperation, m)
                }
                ,
                ChangeTree.prototype.change = function(R, C) {
                    void 0 === C && (C = m.OPERATION.ADD);
                    var T = "number" == typeof R ? R : this.indexes[R];
                    this.assertValidIndex(T, R);
                    var L = this.changes.get(T);
                    L && L.op !== m.OPERATION.DELETE && L.op !== m.OPERATION.TOUCH || this.changes.set(T, {
                        op: L && L.op === m.OPERATION.DELETE ? m.OPERATION.DELETE_AND_ADD : C,
                        index: T
                    }),
                    this.allChanges.add(T),
                    this.changed = !0,
                    this.touchParents()
                }
                ,
                ChangeTree.prototype.touch = function(R) {
                    var C = "number" == typeof R ? R : this.indexes[R];
                    this.assertValidIndex(C, R),
                    this.changes.has(C) || this.changes.set(C, {
                        op: m.OPERATION.TOUCH,
                        index: C
                    }),
                    this.allChanges.add(C),
                    this.touchParents()
                }
                ,
                ChangeTree.prototype.touchParents = function() {
                    this.parent && this.parent.$changes.touch(this.parentIndex)
                }
                ,
                ChangeTree.prototype.getType = function(m) {
                    if (this.ref._definition) {
                        var R = this.ref._definition;
                        return R.schema[R.fieldsByIndex[m]]
                    }
                    var R = this.parent._definition;
                    return Object.values(R.schema[R.fieldsByIndex[this.parentIndex]])[0]
                }
                ,
                ChangeTree.prototype.getChildrenFilter = function() {
                    var m = this.parent._definition.childFilters;
                    return m && m[this.parentIndex]
                }
                ,
                ChangeTree.prototype.getValue = function(m) {
                    return this.ref.getByIndex(m)
                }
                ,
                ChangeTree.prototype.delete = function(R) {
                    var C = "number" == typeof R ? R : this.indexes[R];
                    if (void 0 === C) {
                        console.warn("@colyseus/schema ".concat(this.ref.constructor.name, ": trying to delete non-existing index: ").concat(R, " (").concat(C, ")"));
                        return
                    }
                    var T = this.getValue(C);
                    this.changes.set(C, {
                        op: m.OPERATION.DELETE,
                        index: C
                    }),
                    this.allChanges.delete(C),
                    delete this.caches[C],
                    T && T.$changes && (T.$changes.parent = void 0),
                    this.changed = !0,
                    this.touchParents()
                }
                ,
                ChangeTree.prototype.discard = function(R, C) {
                    var T = this;
                    void 0 === R && (R = !1),
                    void 0 === C && (C = !1),
                    this.ref instanceof en || this.changes.forEach(function(R) {
                        if (R.op === m.OPERATION.DELETE) {
                            var C = T.ref.getIndex(R.index);
                            delete T.indexes[C]
                        }
                    }),
                    this.changes.clear(),
                    this.changed = R,
                    C && this.allChanges.clear(),
                    this.currentCustomOperation = 0
                }
                ,
                ChangeTree.prototype.discardAll = function() {
                    var m = this;
                    this.changes.forEach(function(R) {
                        var C = m.getValue(R.index);
                        C && C.$changes && C.$changes.discardAll()
                    }),
                    this.discard()
                }
                ,
                ChangeTree.prototype.cache = function(m, R) {
                    this.caches[m] = R
                }
                ,
                ChangeTree.prototype.clone = function() {
                    return new ChangeTree(this.ref,this.parent,this.root)
                }
                ,
                ChangeTree.prototype.ensureRefId = function() {
                    void 0 === this.refId && (this.refId = this.root.getNextUniqueId())
                }
                ,
                ChangeTree.prototype.assertValidIndex = function(m, R) {
                    if (void 0 === m)
                        throw Error('ChangeTree: missing index for field "'.concat(R, '"'))
                }
                ,
                ChangeTree
            }();
            function addCallback(m, R, C, T) {
                return m[R] || (m[R] = []),
                m[R].push(C),
                null == T || T.forEach(function(m, R) {
                    return C(m, R)
                }),
                function() {
                    return spliceOne(m[R], m[R].indexOf(C))
                }
            }
            function removeChildRefs(R) {
                var C = this
                  , T = "string" != typeof this.$changes.getType();
                this.$items.forEach(function(L, U) {
                    R.push({
                        refId: C.$changes.refId,
                        op: m.OPERATION.DELETE,
                        field: U,
                        value: void 0,
                        previousValue: L
                    }),
                    T && C.$changes.root.removeRef(L.$changes.refId)
                })
            }
            function spliceOne(m, R) {
                if (-1 === R || R >= m.length)
                    return !1;
                for (var C = m.length - 1, T = R; T < C; T++)
                    m[T] = m[T + 1];
                return m.length = C,
                !0
            }
            var DEFAULT_SORT = function(m, R) {
                var C = m.toString()
                  , T = R.toString();
                return C < T ? -1 : C > T ? 1 : 0
            }
              , T = function() {
                function ArraySchema() {
                    for (var m = [], R = 0; R < arguments.length; R++)
                        m[R] = arguments[R];
                    this.$changes = new C(this),
                    this.$items = new Map,
                    this.$indexes = new Map,
                    this.$refId = 0,
                    this.push.apply(this, m)
                }
                return ArraySchema.prototype.onAdd = function(R, C) {
                    return void 0 === C && (C = !0),
                    addCallback(this.$callbacks || (this.$callbacks = []), m.OPERATION.ADD, R, C ? this.$items : void 0)
                }
                ,
                ArraySchema.prototype.onRemove = function(R) {
                    return addCallback(this.$callbacks || (this.$callbacks = []), m.OPERATION.DELETE, R)
                }
                ,
                ArraySchema.prototype.onChange = function(R) {
                    return addCallback(this.$callbacks || (this.$callbacks = []), m.OPERATION.REPLACE, R)
                }
                ,
                ArraySchema.is = function(m) {
                    return Array.isArray(m) || void 0 !== m.array
                }
                ,
                Object.defineProperty(ArraySchema.prototype, "length", {
                    get: function() {
                        return this.$items.size
                    },
                    set: function(m) {
                        0 === m ? this.clear() : this.splice(m, this.length - m)
                    },
                    enumerable: !1,
                    configurable: !0
                }),
                ArraySchema.prototype.push = function() {
                    for (var m, R = this, C = [], T = 0; T < arguments.length; T++)
                        C[T] = arguments[T];
                    return C.forEach(function(C) {
                        m = R.$refId++,
                        R.setAt(m, C)
                    }),
                    m
                }
                ,
                ArraySchema.prototype.pop = function() {
                    var m = Array.from(this.$indexes.values()).pop();
                    if (void 0 !== m) {
                        this.$changes.delete(m),
                        this.$indexes.delete(m);
                        var R = this.$items.get(m);
                        return this.$items.delete(m),
                        R
                    }
                }
                ,
                ArraySchema.prototype.at = function(m) {
                    var R = Array.from(this.$items.keys())[m];
                    return this.$items.get(R)
                }
                ,
                ArraySchema.prototype.setAt = function(R, C) {
                    void 0 !== C.$changes && C.$changes.setParent(this, this.$changes.root, R);
                    var T, L, U = null !== (L = null === (T = this.$changes.indexes[R]) || void 0 === T ? void 0 : T.op) && void 0 !== L ? L : m.OPERATION.ADD;
                    this.$changes.indexes[R] = R,
                    this.$indexes.set(R, R),
                    this.$items.set(R, C),
                    this.$changes.change(R, U)
                }
                ,
                ArraySchema.prototype.deleteAt = function(m) {
                    var R = Array.from(this.$items.keys())[m];
                    return void 0 !== R && this.$deleteAt(R)
                }
                ,
                ArraySchema.prototype.$deleteAt = function(m) {
                    return this.$changes.delete(m),
                    this.$indexes.delete(m),
                    this.$items.delete(m)
                }
                ,
                ArraySchema.prototype.clear = function(R) {
                    this.$changes.discard(!0, !0),
                    this.$changes.indexes = {},
                    this.$indexes.clear(),
                    R && removeChildRefs.call(this, R),
                    this.$items.clear(),
                    this.$changes.operation({
                        index: 0,
                        op: m.OPERATION.CLEAR
                    }),
                    this.$changes.touchParents()
                }
                ,
                ArraySchema.prototype.concat = function() {
                    for (var m, R = [], C = 0; C < arguments.length; C++)
                        R[C] = arguments[C];
                    return new (ArraySchema.bind.apply(ArraySchema, __spreadArray([void 0], (m = Array.from(this.$items.values())).concat.apply(m, R), !1)))
                }
                ,
                ArraySchema.prototype.join = function(m) {
                    return Array.from(this.$items.values()).join(m)
                }
                ,
                ArraySchema.prototype.reverse = function() {
                    var m = this
                      , R = Array.from(this.$items.keys());
                    return Array.from(this.$items.values()).reverse().forEach(function(C, T) {
                        m.setAt(R[T], C)
                    }),
                    this
                }
                ,
                ArraySchema.prototype.shift = function() {
                    var m = Array.from(this.$items.keys()).shift();
                    if (void 0 !== m) {
                        var R = this.$items.get(m);
                        return this.$deleteAt(m),
                        R
                    }
                }
                ,
                ArraySchema.prototype.slice = function(m, R) {
                    var C = new ArraySchema;
                    return C.push.apply(C, Array.from(this.$items.values()).slice(m, R)),
                    C
                }
                ,
                ArraySchema.prototype.sort = function(m) {
                    var R = this;
                    void 0 === m && (m = DEFAULT_SORT);
                    var C = Array.from(this.$items.keys());
                    return Array.from(this.$items.values()).sort(m).forEach(function(m, T) {
                        R.setAt(C[T], m)
                    }),
                    this
                }
                ,
                ArraySchema.prototype.splice = function(m, R) {
                    void 0 === R && (R = this.length - m);
                    for (var C = Array.from(this.$items.keys()), T = [], L = m; L < m + R; L++)
                        T.push(this.$items.get(C[L])),
                        this.$deleteAt(C[L]);
                    return T
                }
                ,
                ArraySchema.prototype.unshift = function() {
                    for (var m = this, R = [], C = 0; C < arguments.length; C++)
                        R[C] = arguments[C];
                    var T = this.length
                      , L = R.length
                      , U = Array.from(this.$items.values());
                    return R.forEach(function(R, C) {
                        m.setAt(C, R)
                    }),
                    U.forEach(function(R, C) {
                        m.setAt(L + C, R)
                    }),
                    T + L
                }
                ,
                ArraySchema.prototype.indexOf = function(m, R) {
                    return Array.from(this.$items.values()).indexOf(m, R)
                }
                ,
                ArraySchema.prototype.lastIndexOf = function(m, R) {
                    return void 0 === R && (R = this.length - 1),
                    Array.from(this.$items.values()).lastIndexOf(m, R)
                }
                ,
                ArraySchema.prototype.every = function(m, R) {
                    return Array.from(this.$items.values()).every(m, R)
                }
                ,
                ArraySchema.prototype.some = function(m, R) {
                    return Array.from(this.$items.values()).some(m, R)
                }
                ,
                ArraySchema.prototype.forEach = function(m, R) {
                    Array.from(this.$items.values()).forEach(m, R)
                }
                ,
                ArraySchema.prototype.map = function(m, R) {
                    return Array.from(this.$items.values()).map(m, R)
                }
                ,
                ArraySchema.prototype.filter = function(m, R) {
                    return Array.from(this.$items.values()).filter(m, R)
                }
                ,
                ArraySchema.prototype.reduce = function(m, R) {
                    return Array.prototype.reduce.apply(Array.from(this.$items.values()), arguments)
                }
                ,
                ArraySchema.prototype.reduceRight = function(m, R) {
                    return Array.prototype.reduceRight.apply(Array.from(this.$items.values()), arguments)
                }
                ,
                ArraySchema.prototype.find = function(m, R) {
                    return Array.from(this.$items.values()).find(m, R)
                }
                ,
                ArraySchema.prototype.findIndex = function(m, R) {
                    return Array.from(this.$items.values()).findIndex(m, R)
                }
                ,
                ArraySchema.prototype.fill = function(m, R, C) {
                    throw Error("ArraySchema#fill() not implemented")
                }
                ,
                ArraySchema.prototype.copyWithin = function(m, R, C) {
                    throw Error("ArraySchema#copyWithin() not implemented")
                }
                ,
                ArraySchema.prototype.toString = function() {
                    return this.$items.toString()
                }
                ,
                ArraySchema.prototype.toLocaleString = function() {
                    return this.$items.toLocaleString()
                }
                ,
                ArraySchema.prototype[Symbol.iterator] = function() {
                    return Array.from(this.$items.values())[Symbol.iterator]()
                }
                ,
                ArraySchema.prototype.entries = function() {
                    return this.$items.entries()
                }
                ,
                ArraySchema.prototype.keys = function() {
                    return this.$items.keys()
                }
                ,
                ArraySchema.prototype.values = function() {
                    return this.$items.values()
                }
                ,
                ArraySchema.prototype.includes = function(m, R) {
                    return Array.from(this.$items.values()).includes(m, R)
                }
                ,
                ArraySchema.prototype.flatMap = function(m, R) {
                    throw Error("ArraySchema#flatMap() is not supported.")
                }
                ,
                ArraySchema.prototype.flat = function(m) {
                    throw Error("ArraySchema#flat() is not supported.")
                }
                ,
                ArraySchema.prototype.findLast = function() {
                    var m = Array.from(this.$items.values());
                    return m.findLast.apply(m, arguments)
                }
                ,
                ArraySchema.prototype.findLastIndex = function() {
                    var m = Array.from(this.$items.values());
                    return m.findLastIndex.apply(m, arguments)
                }
                ,
                ArraySchema.prototype.setIndex = function(m, R) {
                    this.$indexes.set(m, R)
                }
                ,
                ArraySchema.prototype.getIndex = function(m) {
                    return this.$indexes.get(m)
                }
                ,
                ArraySchema.prototype.getByIndex = function(m) {
                    return this.$items.get(this.$indexes.get(m))
                }
                ,
                ArraySchema.prototype.deleteByIndex = function(m) {
                    var R = this.$indexes.get(m);
                    this.$items.delete(R),
                    this.$indexes.delete(m)
                }
                ,
                ArraySchema.prototype.toArray = function() {
                    return Array.from(this.$items.values())
                }
                ,
                ArraySchema.prototype.toJSON = function() {
                    return this.toArray().map(function(m) {
                        return "function" == typeof m.toJSON ? m.toJSON() : m
                    })
                }
                ,
                ArraySchema.prototype.clone = function(m) {
                    return m ? new (ArraySchema.bind.apply(ArraySchema, __spreadArray([void 0], Array.from(this.$items.values()), !1))) : new (ArraySchema.bind.apply(ArraySchema, __spreadArray([void 0], this.map(function(m) {
                        return m.$changes ? m.clone() : m
                    }), !1)))
                }
                ,
                ArraySchema
            }()
              , L = function() {
                function MapSchema(m) {
                    var R = this;
                    if (this.$changes = new C(this),
                    this.$items = new Map,
                    this.$indexes = new Map,
                    this.$refId = 0,
                    m) {
                        if (m instanceof Map || m instanceof MapSchema)
                            m.forEach(function(m, C) {
                                return R.set(C, m)
                            });
                        else
                            for (var T in m)
                                this.set(T, m[T])
                    }
                }
                return MapSchema.prototype.onAdd = function(R, C) {
                    return void 0 === C && (C = !0),
                    addCallback(this.$callbacks || (this.$callbacks = []), m.OPERATION.ADD, R, C ? this.$items : void 0)
                }
                ,
                MapSchema.prototype.onRemove = function(R) {
                    return addCallback(this.$callbacks || (this.$callbacks = []), m.OPERATION.DELETE, R)
                }
                ,
                MapSchema.prototype.onChange = function(R) {
                    return addCallback(this.$callbacks || (this.$callbacks = []), m.OPERATION.REPLACE, R)
                }
                ,
                MapSchema.is = function(m) {
                    return void 0 !== m.map
                }
                ,
                MapSchema.prototype[Symbol.iterator] = function() {
                    return this.$items[Symbol.iterator]()
                }
                ,
                Object.defineProperty(MapSchema.prototype, Symbol.toStringTag, {
                    get: function() {
                        return this.$items[Symbol.toStringTag]
                    },
                    enumerable: !1,
                    configurable: !0
                }),
                MapSchema.prototype.set = function(R, C) {
                    if (null == C)
                        throw Error("MapSchema#set('".concat(R, "', ").concat(C, "): trying to set ").concat(C, " value on '").concat(R, "'."));
                    var T = void 0 !== this.$changes.indexes[R]
                      , L = T ? this.$changes.indexes[R] : this.$refId++
                      , U = T ? m.OPERATION.REPLACE : m.OPERATION.ADD
                      , B = void 0 !== C.$changes;
                    return B && C.$changes.setParent(this, this.$changes.root, L),
                    T ? B && this.$items.get(R) !== C && (U = m.OPERATION.ADD) : (this.$changes.indexes[R] = L,
                    this.$indexes.set(L, R)),
                    this.$items.set(R, C),
                    this.$changes.change(R, U),
                    this
                }
                ,
                MapSchema.prototype.get = function(m) {
                    return this.$items.get(m)
                }
                ,
                MapSchema.prototype.delete = function(m) {
                    return this.$changes.delete(m),
                    this.$items.delete(m)
                }
                ,
                MapSchema.prototype.clear = function(R) {
                    this.$changes.discard(!0, !0),
                    this.$changes.indexes = {},
                    this.$indexes.clear(),
                    R && removeChildRefs.call(this, R),
                    this.$items.clear(),
                    this.$changes.operation({
                        index: 0,
                        op: m.OPERATION.CLEAR
                    }),
                    this.$changes.touchParents()
                }
                ,
                MapSchema.prototype.has = function(m) {
                    return this.$items.has(m)
                }
                ,
                MapSchema.prototype.forEach = function(m) {
                    this.$items.forEach(m)
                }
                ,
                MapSchema.prototype.entries = function() {
                    return this.$items.entries()
                }
                ,
                MapSchema.prototype.keys = function() {
                    return this.$items.keys()
                }
                ,
                MapSchema.prototype.values = function() {
                    return this.$items.values()
                }
                ,
                Object.defineProperty(MapSchema.prototype, "size", {
                    get: function() {
                        return this.$items.size
                    },
                    enumerable: !1,
                    configurable: !0
                }),
                MapSchema.prototype.setIndex = function(m, R) {
                    this.$indexes.set(m, R)
                }
                ,
                MapSchema.prototype.getIndex = function(m) {
                    return this.$indexes.get(m)
                }
                ,
                MapSchema.prototype.getByIndex = function(m) {
                    return this.$items.get(this.$indexes.get(m))
                }
                ,
                MapSchema.prototype.deleteByIndex = function(m) {
                    var R = this.$indexes.get(m);
                    this.$items.delete(R),
                    this.$indexes.delete(m)
                }
                ,
                MapSchema.prototype.toJSON = function() {
                    var m = {};
                    return this.forEach(function(R, C) {
                        m[C] = "function" == typeof R.toJSON ? R.toJSON() : R
                    }),
                    m
                }
                ,
                MapSchema.prototype.clone = function(m) {
                    var R;
                    return m ? R = Object.assign(new MapSchema, this) : (R = new MapSchema,
                    this.forEach(function(m, C) {
                        m.$changes ? R.set(C, m.clone()) : R.set(C, m)
                    })),
                    R
                }
                ,
                MapSchema
            }()
              , U = {}
              , B = function() {
                function SchemaDefinition() {
                    this.indexes = {},
                    this.fieldsByIndex = {},
                    this.deprecated = {},
                    this.descriptors = {}
                }
                return SchemaDefinition.create = function(m) {
                    var R = new SchemaDefinition;
                    return R.schema = Object.assign({}, m && m.schema || {}),
                    R.indexes = Object.assign({}, m && m.indexes || {}),
                    R.fieldsByIndex = Object.assign({}, m && m.fieldsByIndex || {}),
                    R.descriptors = Object.assign({}, m && m.descriptors || {}),
                    R.deprecated = Object.assign({}, m && m.deprecated || {}),
                    R
                }
                ,
                SchemaDefinition.prototype.addField = function(m, R) {
                    var C = this.getNextFieldIndex();
                    this.fieldsByIndex[C] = m,
                    this.indexes[m] = C,
                    this.schema[m] = Array.isArray(R) ? {
                        array: R[0]
                    } : R
                }
                ,
                SchemaDefinition.prototype.hasField = function(m) {
                    return void 0 !== this.indexes[m]
                }
                ,
                SchemaDefinition.prototype.addFilter = function(m, R) {
                    return this.filters || (this.filters = {},
                    this.indexesWithFilters = []),
                    this.filters[this.indexes[m]] = R,
                    this.indexesWithFilters.push(this.indexes[m]),
                    !0
                }
                ,
                SchemaDefinition.prototype.addChildrenFilter = function(m, R) {
                    var C = this.indexes[m];
                    if (U[Object.keys(this.schema[m])[0]])
                        return this.childFilters || (this.childFilters = {}),
                        this.childFilters[C] = R,
                        !0;
                    console.warn("@filterChildren: field '".concat(m, "' can't have children. Ignoring filter."))
                }
                ,
                SchemaDefinition.prototype.getChildrenFilter = function(m) {
                    return this.childFilters && this.childFilters[this.indexes[m]]
                }
                ,
                SchemaDefinition.prototype.getNextFieldIndex = function() {
                    return Object.keys(this.schema || {}).length
                }
                ,
                SchemaDefinition
            }()
              , $ = function() {
                function Context() {
                    this.types = {},
                    this.schemas = new Map,
                    this.useFilters = !1
                }
                return Context.prototype.has = function(m) {
                    return this.schemas.has(m)
                }
                ,
                Context.prototype.get = function(m) {
                    return this.types[m]
                }
                ,
                Context.prototype.add = function(m, R) {
                    void 0 === R && (R = this.schemas.size),
                    m._definition = B.create(m._definition),
                    m._typeid = R,
                    this.types[R] = m,
                    this.schemas.set(m, R)
                }
                ,
                Context.create = function(m) {
                    return void 0 === m && (m = {}),
                    function(R) {
                        return m.context || (m.context = new Context),
                        type(R, m)
                    }
                }
                ,
                Context
            }()
              , V = new $;
            function type(m, R) {
                return void 0 === R && (R = {}),
                function(C, U) {
                    var B = R.context || V
                      , $ = C.constructor;
                    if ($._context = B,
                    !m)
                        throw Error("".concat($.name, ': @type() reference provided for "').concat(U, "\" is undefined. Make sure you don't have any circular dependencies."));
                    B.has($) || B.add($);
                    var H = $._definition;
                    if (H.addField(U, m),
                    H.descriptors[U]) {
                        if (H.deprecated[U])
                            return;
                        try {
                            throw Error("@colyseus/schema: Duplicate '".concat(U, "' definition on '").concat($.name, "'.\nCheck @type() annotation"))
                        } catch (m) {
                            var W = m.stack.split("\n")[4].trim();
                            throw Error("".concat(m.message, " ").concat(W))
                        }
                    }
                    var q = T.is(m)
                      , G = !q && L.is(m);
                    if ("string" != typeof m && !en.is(m)) {
                        var Z = Object.values(m)[0];
                        "string" == typeof Z || B.has(Z) || B.add(Z)
                    }
                    if (R.manual) {
                        H.descriptors[U] = {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        };
                        return
                    }
                    var Y = "_".concat(U);
                    H.descriptors[Y] = {
                        enumerable: !1,
                        configurable: !1,
                        writable: !0
                    },
                    H.descriptors[U] = {
                        get: function() {
                            return this[Y]
                        },
                        set: function(m) {
                            if (m !== this[Y]) {
                                if (null != m) {
                                    if (!q || m instanceof T || (m = new (T.bind.apply(T, __spreadArray([void 0], m, !1)))),
                                    !G || m instanceof L || (m = new L(m)),
                                    void 0 === m.$proxy) {
                                        var R, C;
                                        G ? ((R = m).$proxy = !0,
                                        m = R = new Proxy(R,{
                                            get: function(m, R) {
                                                return "symbol" != typeof R && void 0 === m[R] ? m.get(R) : m[R]
                                            },
                                            set: function(m, R, C) {
                                                return "symbol" != typeof R && -1 === R.indexOf("$") && "onAdd" !== R && "onRemove" !== R && "onChange" !== R ? m.set(R, C) : m[R] = C,
                                                !0
                                            },
                                            deleteProperty: function(m, R) {
                                                return m.delete(R),
                                                !0
                                            }
                                        })) : q && ((C = m).$proxy = !0,
                                        m = C = new Proxy(C,{
                                            get: function(m, R) {
                                                return "symbol" == typeof R || isNaN(R) ? m[R] : m.at(R)
                                            },
                                            set: function(m, R, C) {
                                                if ("symbol" == typeof R || isNaN(R))
                                                    m[R] = C;
                                                else {
                                                    var T = parseInt(Array.from(m.$items.keys())[R] || R);
                                                    null == C ? m.deleteAt(T) : m.setAt(T, C)
                                                }
                                                return !0
                                            },
                                            deleteProperty: function(m, R) {
                                                return "number" == typeof R ? m.deleteAt(R) : delete m[R],
                                                !0
                                            }
                                        }))
                                    }
                                    this.$changes.change(U),
                                    m.$changes && m.$changes.setParent(this, this.$changes.root, this._definition.indexes[U])
                                } else
                                    this[Y] && this.$changes.delete(U);
                                this[Y] = m
                            }
                        },
                        enumerable: !0,
                        configurable: !0
                    }
                }
            }
            function utf8Write(m, R, C) {
                for (var T = 0, L = 0, U = C.length; L < U; L++)
                    (T = C.charCodeAt(L)) < 128 ? m[R++] = T : (T < 2048 ? m[R++] = 192 | T >> 6 : (T < 55296 || T >= 57344 ? m[R++] = 224 | T >> 12 : (L++,
                    T = 65536 + ((1023 & T) << 10 | 1023 & C.charCodeAt(L)),
                    m[R++] = 240 | T >> 18,
                    m[R++] = 128 | T >> 12 & 63),
                    m[R++] = 128 | T >> 6 & 63),
                    m[R++] = 128 | 63 & T)
            }
            function int8$1(m, R) {
                m.push(255 & R)
            }
            function uint8$1(m, R) {
                m.push(255 & R)
            }
            function int16$1(m, R) {
                m.push(255 & R),
                m.push(R >> 8 & 255)
            }
            function uint16$1(m, R) {
                m.push(255 & R),
                m.push(R >> 8 & 255)
            }
            function int32$1(m, R) {
                m.push(255 & R),
                m.push(R >> 8 & 255),
                m.push(R >> 16 & 255),
                m.push(R >> 24 & 255)
            }
            function uint32$1(m, R) {
                var C = R >> 24
                  , T = R >> 16
                  , L = R >> 8;
                m.push(255 & R),
                m.push(255 & L),
                m.push(255 & T),
                m.push(255 & C)
            }
            function int64$1(m, R) {
                uint32$1(m, R >>> 0),
                uint32$1(m, Math.floor(R / 4294967296))
            }
            function uint64$1(m, R) {
                uint32$1(m, R >>> 0),
                uint32$1(m, R / 4294967296 >> 0)
            }
            var H = new Int32Array(2)
              , W = new Float32Array(H.buffer)
              , q = new Float64Array(H.buffer);
            function writeFloat32(m, R) {
                W[0] = R,
                int32$1(m, H[0])
            }
            function writeFloat64(m, R) {
                q[0] = R,
                int32$1(m, H[0]),
                int32$1(m, H[1])
            }
            function string$1(m, R) {
                R || (R = "");
                var C = function(m) {
                    for (var R = 0, C = 0, T = 0, L = m.length; T < L; T++)
                        (R = m.charCodeAt(T)) < 128 ? C += 1 : R < 2048 ? C += 2 : R < 55296 || R >= 57344 ? C += 3 : (T++,
                        C += 4);
                    return C
                }(R)
                  , T = 0;
                if (C < 32)
                    m.push(160 | C),
                    T = 1;
                else if (C < 256)
                    m.push(217),
                    uint8$1(m, C),
                    T = 2;
                else if (C < 65536)
                    m.push(218),
                    uint16$1(m, C),
                    T = 3;
                else if (C < 4294967296)
                    m.push(219),
                    uint32$1(m, C),
                    T = 5;
                else
                    throw Error("String too long");
                return utf8Write(m, m.length, R),
                T + C
            }
            function number$1(m, R) {
                return isNaN(R) ? number$1(m, 0) : isFinite(R) ? R !== (0 | R) ? (m.push(203),
                writeFloat64(m, R),
                9) : R >= 0 ? R < 128 ? (uint8$1(m, R),
                1) : R < 256 ? (m.push(204),
                uint8$1(m, R),
                2) : R < 65536 ? (m.push(205),
                uint16$1(m, R),
                3) : R < 4294967296 ? (m.push(206),
                uint32$1(m, R),
                5) : (m.push(207),
                uint64$1(m, R),
                9) : R >= -32 ? (m.push(224 | R + 32),
                1) : R >= -128 ? (m.push(208),
                int8$1(m, R),
                2) : R >= -32768 ? (m.push(209),
                int16$1(m, R),
                3) : R >= -2147483648 ? (m.push(210),
                int32$1(m, R),
                5) : (m.push(211),
                int64$1(m, R),
                9) : number$1(m, R > 0 ? Number.MAX_SAFE_INTEGER : -Number.MAX_SAFE_INTEGER)
            }
            var G = Object.freeze({
                __proto__: null,
                utf8Write: utf8Write,
                int8: int8$1,
                uint8: uint8$1,
                int16: int16$1,
                uint16: uint16$1,
                int32: int32$1,
                uint32: uint32$1,
                int64: int64$1,
                uint64: uint64$1,
                float32: function(m, R) {
                    writeFloat32(m, R)
                },
                float64: function(m, R) {
                    writeFloat64(m, R)
                },
                writeFloat32: writeFloat32,
                writeFloat64: writeFloat64,
                boolean: function(m, R) {
                    return uint8$1(m, R ? 1 : 0)
                },
                string: string$1,
                number: number$1
            });
            function int8(m, R) {
                return uint8(m, R) << 24 >> 24
            }
            function uint8(m, R) {
                return m[R.offset++]
            }
            function int16(m, R) {
                return uint16(m, R) << 16 >> 16
            }
            function uint16(m, R) {
                return m[R.offset++] | m[R.offset++] << 8
            }
            function int32(m, R) {
                return m[R.offset++] | m[R.offset++] << 8 | m[R.offset++] << 16 | m[R.offset++] << 24
            }
            function uint32(m, R) {
                return int32(m, R) >>> 0
            }
            function int64(m, R) {
                var C = uint32(m, R);
                return 4294967296 * int32(m, R) + C
            }
            function uint64(m, R) {
                var C = uint32(m, R);
                return 4294967296 * uint32(m, R) + C
            }
            var Z = new Int32Array(2)
              , Y = new Float32Array(Z.buffer)
              , K = new Float64Array(Z.buffer);
            function readFloat32(m, R) {
                return Z[0] = int32(m, R),
                Y[0]
            }
            function readFloat64(m, R) {
                return Z[0] = int32(m, R),
                Z[1] = int32(m, R),
                K[0]
            }
            function string(m, R) {
                var C, T = m[R.offset++];
                T < 192 ? C = 31 & T : 217 === T ? C = uint8(m, R) : 218 === T ? C = uint16(m, R) : 219 === T && (C = uint32(m, R));
                var L = function(m, R, C) {
                    for (var T = "", L = 0, U = R, B = R + C; U < B; U++) {
                        var $ = m[U];
                        if ((128 & $) == 0) {
                            T += String.fromCharCode($);
                            continue
                        }
                        if ((224 & $) == 192) {
                            T += String.fromCharCode((31 & $) << 6 | 63 & m[++U]);
                            continue
                        }
                        if ((240 & $) == 224) {
                            T += String.fromCharCode((15 & $) << 12 | (63 & m[++U]) << 6 | (63 & m[++U]) << 0);
                            continue
                        }
                        if ((248 & $) == 240) {
                            (L = (7 & $) << 18 | (63 & m[++U]) << 12 | (63 & m[++U]) << 6 | (63 & m[++U]) << 0) >= 65536 ? (L -= 65536,
                            T += String.fromCharCode((L >>> 10) + 55296, (1023 & L) + 56320)) : T += String.fromCharCode(L);
                            continue
                        }
                        console.error("Invalid byte " + $.toString(16))
                    }
                    return T
                }(m, R.offset, C);
                return R.offset += C,
                L
            }
            function number(m, R) {
                var C = m[R.offset++];
                if (C < 128)
                    return C;
                if (202 === C)
                    return readFloat32(m, R);
                if (203 === C)
                    return readFloat64(m, R);
                if (204 === C)
                    return uint8(m, R);
                if (205 === C)
                    return uint16(m, R);
                if (206 === C)
                    return uint32(m, R);
                if (207 === C)
                    return uint64(m, R);
                else if (208 === C)
                    return int8(m, R);
                else if (209 === C)
                    return int16(m, R);
                else if (210 === C)
                    return int32(m, R);
                else if (211 === C)
                    return int64(m, R);
                else if (C > 223)
                    return -((255 - C + 1) * 1)
            }
            function switchStructureCheck(m, R) {
                return 255 === m[R.offset - 1] && (m[R.offset] < 128 || m[R.offset] >= 202 && m[R.offset] <= 211)
            }
            var J = Object.freeze({
                __proto__: null,
                int8: int8,
                uint8: uint8,
                int16: int16,
                uint16: uint16,
                int32: int32,
                uint32: uint32,
                float32: function(m, R) {
                    return readFloat32(m, R)
                },
                float64: function(m, R) {
                    return readFloat64(m, R)
                },
                int64: int64,
                uint64: uint64,
                readFloat32: readFloat32,
                readFloat64: readFloat64,
                boolean: function(m, R) {
                    return uint8(m, R) > 0
                },
                string: string,
                stringCheck: function(m, R) {
                    var C = m[R.offset];
                    return C < 192 && C > 160 || 217 === C || 218 === C || 219 === C
                },
                number: number,
                numberCheck: function(m, R) {
                    var C = m[R.offset];
                    return C < 128 || C >= 202 && C <= 211
                },
                arrayCheck: function(m, R) {
                    return m[R.offset] < 160
                },
                switchStructureCheck: switchStructureCheck
            })
              , X = function() {
                function CollectionSchema(m) {
                    var R = this;
                    this.$changes = new C(this),
                    this.$items = new Map,
                    this.$indexes = new Map,
                    this.$refId = 0,
                    m && m.forEach(function(m) {
                        return R.add(m)
                    })
                }
                return CollectionSchema.prototype.onAdd = function(R, C) {
                    return void 0 === C && (C = !0),
                    addCallback(this.$callbacks || (this.$callbacks = []), m.OPERATION.ADD, R, C ? this.$items : void 0)
                }
                ,
                CollectionSchema.prototype.onRemove = function(R) {
                    return addCallback(this.$callbacks || (this.$callbacks = []), m.OPERATION.DELETE, R)
                }
                ,
                CollectionSchema.prototype.onChange = function(R) {
                    return addCallback(this.$callbacks || (this.$callbacks = []), m.OPERATION.REPLACE, R)
                }
                ,
                CollectionSchema.is = function(m) {
                    return void 0 !== m.collection
                }
                ,
                CollectionSchema.prototype.add = function(m) {
                    var R = this.$refId++;
                    return void 0 !== m.$changes && m.$changes.setParent(this, this.$changes.root, R),
                    this.$changes.indexes[R] = R,
                    this.$indexes.set(R, R),
                    this.$items.set(R, m),
                    this.$changes.change(R),
                    R
                }
                ,
                CollectionSchema.prototype.at = function(m) {
                    var R = Array.from(this.$items.keys())[m];
                    return this.$items.get(R)
                }
                ,
                CollectionSchema.prototype.entries = function() {
                    return this.$items.entries()
                }
                ,
                CollectionSchema.prototype.delete = function(m) {
                    for (var R, C, T = this.$items.entries(); (C = T.next()) && !C.done; )
                        if (m === C.value[1]) {
                            R = C.value[0];
                            break
                        }
                    return void 0 !== R && (this.$changes.delete(R),
                    this.$indexes.delete(R),
                    this.$items.delete(R))
                }
                ,
                CollectionSchema.prototype.clear = function(R) {
                    this.$changes.discard(!0, !0),
                    this.$changes.indexes = {},
                    this.$indexes.clear(),
                    R && removeChildRefs.call(this, R),
                    this.$items.clear(),
                    this.$changes.operation({
                        index: 0,
                        op: m.OPERATION.CLEAR
                    }),
                    this.$changes.touchParents()
                }
                ,
                CollectionSchema.prototype.has = function(m) {
                    return Array.from(this.$items.values()).some(function(R) {
                        return R === m
                    })
                }
                ,
                CollectionSchema.prototype.forEach = function(m) {
                    var R = this;
                    this.$items.forEach(function(C, T, L) {
                        return m(C, T, R)
                    })
                }
                ,
                CollectionSchema.prototype.values = function() {
                    return this.$items.values()
                }
                ,
                Object.defineProperty(CollectionSchema.prototype, "size", {
                    get: function() {
                        return this.$items.size
                    },
                    enumerable: !1,
                    configurable: !0
                }),
                CollectionSchema.prototype.setIndex = function(m, R) {
                    this.$indexes.set(m, R)
                }
                ,
                CollectionSchema.prototype.getIndex = function(m) {
                    return this.$indexes.get(m)
                }
                ,
                CollectionSchema.prototype.getByIndex = function(m) {
                    return this.$items.get(this.$indexes.get(m))
                }
                ,
                CollectionSchema.prototype.deleteByIndex = function(m) {
                    var R = this.$indexes.get(m);
                    this.$items.delete(R),
                    this.$indexes.delete(m)
                }
                ,
                CollectionSchema.prototype.toArray = function() {
                    return Array.from(this.$items.values())
                }
                ,
                CollectionSchema.prototype.toJSON = function() {
                    var m = [];
                    return this.forEach(function(R, C) {
                        m.push("function" == typeof R.toJSON ? R.toJSON() : R)
                    }),
                    m
                }
                ,
                CollectionSchema.prototype.clone = function(m) {
                    var R;
                    return m ? R = Object.assign(new CollectionSchema, this) : (R = new CollectionSchema,
                    this.forEach(function(m) {
                        m.$changes ? R.add(m.clone()) : R.add(m)
                    })),
                    R
                }
                ,
                CollectionSchema
            }()
              , Q = function() {
                function SetSchema(m) {
                    var R = this;
                    this.$changes = new C(this),
                    this.$items = new Map,
                    this.$indexes = new Map,
                    this.$refId = 0,
                    m && m.forEach(function(m) {
                        return R.add(m)
                    })
                }
                return SetSchema.prototype.onAdd = function(R, C) {
                    return void 0 === C && (C = !0),
                    addCallback(this.$callbacks || (this.$callbacks = []), m.OPERATION.ADD, R, C ? this.$items : void 0)
                }
                ,
                SetSchema.prototype.onRemove = function(R) {
                    return addCallback(this.$callbacks || (this.$callbacks = []), m.OPERATION.DELETE, R)
                }
                ,
                SetSchema.prototype.onChange = function(R) {
                    return addCallback(this.$callbacks || (this.$callbacks = []), m.OPERATION.REPLACE, R)
                }
                ,
                SetSchema.is = function(m) {
                    return void 0 !== m.set
                }
                ,
                SetSchema.prototype.add = function(R) {
                    if (this.has(R))
                        return !1;
                    var C, T, L = this.$refId++;
                    void 0 !== R.$changes && R.$changes.setParent(this, this.$changes.root, L);
                    var U = null !== (T = null === (C = this.$changes.indexes[L]) || void 0 === C ? void 0 : C.op) && void 0 !== T ? T : m.OPERATION.ADD;
                    return this.$changes.indexes[L] = L,
                    this.$indexes.set(L, L),
                    this.$items.set(L, R),
                    this.$changes.change(L, U),
                    L
                }
                ,
                SetSchema.prototype.entries = function() {
                    return this.$items.entries()
                }
                ,
                SetSchema.prototype.delete = function(m) {
                    for (var R, C, T = this.$items.entries(); (C = T.next()) && !C.done; )
                        if (m === C.value[1]) {
                            R = C.value[0];
                            break
                        }
                    return void 0 !== R && (this.$changes.delete(R),
                    this.$indexes.delete(R),
                    this.$items.delete(R))
                }
                ,
                SetSchema.prototype.clear = function(R) {
                    this.$changes.discard(!0, !0),
                    this.$changes.indexes = {},
                    this.$indexes.clear(),
                    R && removeChildRefs.call(this, R),
                    this.$items.clear(),
                    this.$changes.operation({
                        index: 0,
                        op: m.OPERATION.CLEAR
                    }),
                    this.$changes.touchParents()
                }
                ,
                SetSchema.prototype.has = function(m) {
                    for (var R, C = this.$items.values(), T = !1; (R = C.next()) && !R.done; )
                        if (m === R.value) {
                            T = !0;
                            break
                        }
                    return T
                }
                ,
                SetSchema.prototype.forEach = function(m) {
                    var R = this;
                    this.$items.forEach(function(C, T, L) {
                        return m(C, T, R)
                    })
                }
                ,
                SetSchema.prototype.values = function() {
                    return this.$items.values()
                }
                ,
                Object.defineProperty(SetSchema.prototype, "size", {
                    get: function() {
                        return this.$items.size
                    },
                    enumerable: !1,
                    configurable: !0
                }),
                SetSchema.prototype.setIndex = function(m, R) {
                    this.$indexes.set(m, R)
                }
                ,
                SetSchema.prototype.getIndex = function(m) {
                    return this.$indexes.get(m)
                }
                ,
                SetSchema.prototype.getByIndex = function(m) {
                    return this.$items.get(this.$indexes.get(m))
                }
                ,
                SetSchema.prototype.deleteByIndex = function(m) {
                    var R = this.$indexes.get(m);
                    this.$items.delete(R),
                    this.$indexes.delete(m)
                }
                ,
                SetSchema.prototype.toArray = function() {
                    return Array.from(this.$items.values())
                }
                ,
                SetSchema.prototype.toJSON = function() {
                    var m = [];
                    return this.forEach(function(R, C) {
                        m.push("function" == typeof R.toJSON ? R.toJSON() : R)
                    }),
                    m
                }
                ,
                SetSchema.prototype.clone = function(m) {
                    var R;
                    return m ? R = Object.assign(new SetSchema, this) : (R = new SetSchema,
                    this.forEach(function(m) {
                        m.$changes ? R.add(m.clone()) : R.add(m)
                    })),
                    R
                }
                ,
                SetSchema
            }()
              , ee = function() {
                function ClientState() {
                    this.refIds = new WeakSet,
                    this.containerIndexes = new WeakMap
                }
                return ClientState.prototype.addRefId = function(m) {
                    this.refIds.has(m) || (this.refIds.add(m),
                    this.containerIndexes.set(m, new Set))
                }
                ,
                ClientState.get = function(m) {
                    return void 0 === m.$filterState && (m.$filterState = new ClientState),
                    m.$filterState
                }
                ,
                ClientState
            }()
              , et = function() {
                function ReferenceTracker() {
                    this.refs = new Map,
                    this.refCounts = {},
                    this.deletedRefs = new Set,
                    this.nextUniqueId = 0
                }
                return ReferenceTracker.prototype.getNextUniqueId = function() {
                    return this.nextUniqueId++
                }
                ,
                ReferenceTracker.prototype.addRef = function(m, R, C) {
                    void 0 === C && (C = !0),
                    this.refs.set(m, R),
                    C && (this.refCounts[m] = (this.refCounts[m] || 0) + 1)
                }
                ,
                ReferenceTracker.prototype.removeRef = function(m) {
                    this.refCounts[m] = this.refCounts[m] - 1,
                    this.deletedRefs.add(m)
                }
                ,
                ReferenceTracker.prototype.clearRefs = function() {
                    this.refs.clear(),
                    this.deletedRefs.clear(),
                    this.refCounts = {}
                }
                ,
                ReferenceTracker.prototype.garbageCollectDeletedRefs = function() {
                    var m = this;
                    this.deletedRefs.forEach(function(R) {
                        if (!(m.refCounts[R] > 0)) {
                            var C = m.refs.get(R);
                            if (C instanceof en)
                                for (var T in C._definition.schema)
                                    "string" != typeof C._definition.schema[T] && C[T] && C[T].$changes && m.removeRef(C[T].$changes.refId);
                            else {
                                var L = C.$changes.parent._definition;
                                "function" == typeof Object.values(L.schema[L.fieldsByIndex[C.$changes.parentIndex]])[0] && Array.from(C.values()).forEach(function(R) {
                                    return m.removeRef(R.$changes.refId)
                                })
                            }
                            m.refs.delete(R),
                            delete m.refCounts[R]
                        }
                    }),
                    this.deletedRefs.clear()
                }
                ,
                ReferenceTracker
            }()
              , er = function(m) {
                function EncodeSchemaError() {
                    return null !== m && m.apply(this, arguments) || this
                }
                return __extends(EncodeSchemaError, m),
                EncodeSchemaError
            }(Error);
            function assertInstanceType(m, R, C, T) {
                if (!(m instanceof R))
                    throw new er("a '".concat(R.name, "' was expected, but '").concat(m.constructor.name, "' was provided in ").concat(C.constructor.name, "#").concat(T))
            }
            var en = function() {
                function Schema() {
                    for (var m = [], R = 0; R < arguments.length; R++)
                        m[R] = arguments[R];
                    Object.defineProperties(this, {
                        $changes: {
                            value: new C(this,void 0,new et),
                            enumerable: !1,
                            writable: !0
                        },
                        $callbacks: {
                            value: void 0,
                            enumerable: !1,
                            writable: !0
                        }
                    });
                    var T = this._definition.descriptors;
                    T && Object.defineProperties(this, T),
                    m[0] && this.assign(m[0])
                }
                return Schema.onError = function(m) {
                    console.error(m)
                }
                ,
                Schema.is = function(m) {
                    return m._definition && void 0 !== m._definition.schema
                }
                ,
                Schema.prototype.onChange = function(R) {
                    return addCallback(this.$callbacks || (this.$callbacks = []), m.OPERATION.REPLACE, R)
                }
                ,
                Schema.prototype.onRemove = function(R) {
                    return addCallback(this.$callbacks || (this.$callbacks = []), m.OPERATION.DELETE, R)
                }
                ,
                Schema.prototype.assign = function(m) {
                    return Object.assign(this, m),
                    this
                }
                ,
                Object.defineProperty(Schema.prototype, "_definition", {
                    get: function() {
                        return this.constructor._definition
                    },
                    enumerable: !1,
                    configurable: !0
                }),
                Schema.prototype.setDirty = function(m, R) {
                    this.$changes.change(m, R)
                }
                ,
                Schema.prototype.listen = function(m, R, C) {
                    var T = this;
                    return void 0 === C && (C = !0),
                    this.$callbacks || (this.$callbacks = {}),
                    this.$callbacks[m] || (this.$callbacks[m] = []),
                    this.$callbacks[m].push(R),
                    C && void 0 !== this[m] && R(this[m], void 0),
                    function() {
                        return spliceOne(T.$callbacks[m], T.$callbacks[m].indexOf(R))
                    }
                }
                ,
                Schema.prototype.decode = function(R, C, B) {
                    void 0 === C && (C = {
                        offset: 0
                    }),
                    void 0 === B && (B = this);
                    var $, V = [], H = this.$changes.root, W = R.length, q = 0;
                    for (H.refs.set(q, this); C.offset < W; ) {
                        var G, Z = R[C.offset++];
                        if (255 == Z) {
                            q = number(R, C);
                            var Y = H.refs.get(q);
                            if (!Y)
                                throw Error('"refId" not found: '.concat(q));
                            B = Y;
                            continue
                        }
                        var K = B.$changes
                          , ee = void 0 !== B._definition
                          , et = ee ? Z >> 6 << 6 : Z;
                        if (et === m.OPERATION.CLEAR) {
                            B.clear(V);
                            continue
                        }
                        var er = ee ? Z % (et || 255) : number(R, C)
                          , en = ee ? B._definition.fieldsByIndex[er] : ""
                          , eo = K.getType(er)
                          , ei = void 0
                          , ea = void 0
                          , es = void 0;
                        if (ee ? ea = B["_".concat(en)] : (ea = B.getByIndex(er),
                        (et & m.OPERATION.ADD) === m.OPERATION.ADD ? (es = B instanceof L ? string(R, C) : er,
                        B.setIndex(er, es)) : es = B.getIndex(er)),
                        (et & m.OPERATION.DELETE) === m.OPERATION.DELETE && (et !== m.OPERATION.DELETE_AND_ADD && B.deleteByIndex(er),
                        ea && ea.$changes && H.removeRef(ea.$changes.refId),
                        ei = null),
                        void 0 === en) {
                            console.warn("@colyseus/schema: definition mismatch");
                            for (var el = {
                                offset: C.offset
                            }; C.offset < W && !(switchStructureCheck(R, C) && (el.offset = C.offset + 1,
                            H.refs.has(number(R, el)))); )
                                C.offset++;
                            continue
                        }
                        if (et === m.OPERATION.DELETE)
                            ;
                        else if (Schema.is(eo)) {
                            var ec = number(R, C);
                            if (ei = H.refs.get(ec),
                            et !== m.OPERATION.REPLACE) {
                                var eu = this.getSchemaType(R, C, eo);
                                !ei && ((ei = this.createTypeInstance(eu)).$changes.refId = ec,
                                ea && (ei.$callbacks = ea.$callbacks,
                                ea.$changes.refId && ec !== ea.$changes.refId && H.removeRef(ea.$changes.refId))),
                                H.addRef(ec, ei, ei !== ea)
                            }
                        } else if ("string" == typeof eo)
                            G = C,
                            ei = J[eo](R, G);
                        else {
                            var ef = U[Object.keys(eo)[0]]
                              , ed = number(R, C)
                              , ep = H.refs.has(ed) ? ea || H.refs.get(ed) : new ef.constructor;
                            if ((ei = ep.clone(!0)).$changes.refId = ed,
                            ea && (ei.$callbacks = ea.$callbacks,
                            ea.$changes.refId && ed !== ea.$changes.refId)) {
                                H.removeRef(ea.$changes.refId);
                                for (var eh = ea.entries(), eg = void 0; (eg = eh.next()) && !eg.done; ) {
                                    var em = ($ = eg.value)[0]
                                      , ey = $[1];
                                    V.push({
                                        refId: ed,
                                        op: m.OPERATION.DELETE,
                                        field: em,
                                        value: void 0,
                                        previousValue: ey
                                    })
                                }
                            }
                            H.addRef(ed, ei, ep !== ea)
                        }
                        if (null != ei) {
                            if (ei.$changes && ei.$changes.setParent(K.ref, K.root, er),
                            B instanceof Schema)
                                B[en] = ei;
                            else if (B instanceof L) {
                                var em = es;
                                B.$items.set(em, ei),
                                B.$changes.allChanges.add(er)
                            } else if (B instanceof T)
                                B.setAt(er, ei);
                            else if (B instanceof X) {
                                var ev = B.add(ei);
                                B.setIndex(er, ev)
                            } else if (B instanceof Q) {
                                var ev = B.add(ei);
                                !1 !== ev && B.setIndex(er, ev)
                            }
                        }
                        ea !== ei && V.push({
                            refId: q,
                            op: et,
                            field: en,
                            dynamicIndex: es,
                            value: ei,
                            previousValue: ea
                        })
                    }
                    return this._triggerChanges(V),
                    H.garbageCollectDeletedRefs(),
                    V
                }
                ,
                Schema.prototype.encode = function(R, C, T) {
                    void 0 === R && (R = !1),
                    void 0 === C && (C = []),
                    void 0 === T && (T = !1);
                    for (var B = this.$changes, $ = new WeakSet, V = [B], H = 1, W = 0; W < H; W++) {
                        var q = V[W]
                          , Z = q.ref
                          , Y = Z instanceof Schema;
                        q.ensureRefId(),
                        $.add(q),
                        q !== B && (q.changed || R) && (uint8$1(C, 255),
                        number$1(C, q.refId));
                        for (var K = R ? Array.from(q.allChanges) : Array.from(q.changes.values()), J = 0, X = K.length; J < X; J++) {
                            var Q = R ? {
                                op: m.OPERATION.ADD,
                                index: K[J]
                            } : K[J]
                              , ee = Q.index
                              , et = Y ? Z._definition.fieldsByIndex && Z._definition.fieldsByIndex[ee] : ee
                              , en = C.length;
                            if (Q.op !== m.OPERATION.TOUCH) {
                                if (Y)
                                    uint8$1(C, ee | Q.op);
                                else {
                                    if (uint8$1(C, Q.op),
                                    Q.op === m.OPERATION.CLEAR)
                                        continue;
                                    number$1(C, ee)
                                }
                            }
                            if (!Y && (Q.op & m.OPERATION.ADD) == m.OPERATION.ADD && Z instanceof L && string$1(C, q.ref.$indexes.get(ee)),
                            Q.op !== m.OPERATION.DELETE) {
                                var eo = q.getType(ee)
                                  , ei = q.getValue(ee);
                                if (ei && ei.$changes && !$.has(ei.$changes) && (V.push(ei.$changes),
                                ei.$changes.ensureRefId(),
                                H++),
                                Q.op !== m.OPERATION.TOUCH) {
                                    if (Schema.is(eo))
                                        assertInstanceType(ei, eo, Z, et),
                                        number$1(C, ei.$changes.refId),
                                        (Q.op & m.OPERATION.ADD) === m.OPERATION.ADD && this.tryEncodeTypeId(C, eo, ei.constructor);
                                    else if ("string" == typeof eo)
                                        !function(m, R, C, T, L) {
                                            !function(m, R, C, T) {
                                                var L, U = !1;
                                                switch (R) {
                                                case "number":
                                                case "int8":
                                                case "uint8":
                                                case "int16":
                                                case "uint16":
                                                case "int32":
                                                case "uint32":
                                                case "int64":
                                                case "uint64":
                                                case "float32":
                                                case "float64":
                                                    L = "number",
                                                    isNaN(m) && console.log('trying to encode "NaN" in '.concat(C.constructor.name, "#").concat(T));
                                                    break;
                                                case "string":
                                                    L = "string",
                                                    U = !0;
                                                    break;
                                                case "boolean":
                                                    return
                                                }
                                                if (typeof m !== L && (!U || U && null !== m)) {
                                                    var B = "'".concat(JSON.stringify(m), "'").concat(m && m.constructor && " (".concat(m.constructor.name, ")") || "");
                                                    throw new er("a '".concat(L, "' was expected, but ").concat(B, " was provided in ").concat(C.constructor.name, "#").concat(T))
                                                }
                                            }(C, m, T, L);
                                            var U = G[m];
                                            if (U)
                                                U(R, C);
                                            else
                                                throw new er("a '".concat(m, "' was expected, but ").concat(C, " was provided in ").concat(T.constructor.name, "#").concat(L))
                                        }(eo, C, ei, Z, et);
                                    else {
                                        var ea = U[Object.keys(eo)[0]];
                                        assertInstanceType(Z["_".concat(et)], ea.constructor, Z, et),
                                        number$1(C, ei.$changes.refId)
                                    }
                                    T && q.cache(ee, C.slice(en))
                                }
                            }
                        }
                        R || T || q.discard()
                    }
                    return C
                }
                ,
                Schema.prototype.encodeAll = function(m) {
                    return this.encode(!0, [], m)
                }
                ,
                Schema.prototype.applyFilters = function(R, C) {
                    void 0 === C && (C = !1);
                    for (var T, U, B = this, $ = new Set, V = ee.get(R), H = [this.$changes], W = 1, q = [], Z = 0; Z < W; Z++)
                        !function(Z) {
                            var Y = H[Z];
                            if (!$.has(Y.refId)) {
                                var K = Y.ref
                                  , J = K instanceof Schema;
                                uint8$1(q, 255),
                                number$1(q, Y.refId);
                                var X = V.refIds.has(Y)
                                  , Q = C || !X;
                                V.addRefId(Y);
                                var ee = V.containerIndexes.get(Y)
                                  , et = Q ? Array.from(Y.allChanges) : Array.from(Y.changes.values());
                                !C && J && K._definition.indexesWithFilters && K._definition.indexesWithFilters.forEach(function(R) {
                                    !ee.has(R) && Y.allChanges.has(R) && (Q ? et.push(R) : et.push({
                                        op: m.OPERATION.ADD,
                                        index: R
                                    }))
                                });
                                for (var er = 0, en = et.length; er < en; er++) {
                                    var eo = Q ? {
                                        op: m.OPERATION.ADD,
                                        index: et[er]
                                    } : et[er];
                                    if (eo.op === m.OPERATION.CLEAR) {
                                        uint8$1(q, eo.op);
                                        continue
                                    }
                                    var ei = eo.index;
                                    if (eo.op === m.OPERATION.DELETE) {
                                        J ? uint8$1(q, eo.op | ei) : (uint8$1(q, eo.op),
                                        number$1(q, ei));
                                        continue
                                    }
                                    var ea = Y.getValue(ei)
                                      , es = Y.getType(ei);
                                    if (J) {
                                        var el = K._definition.filters && K._definition.filters[ei];
                                        if (el && !el.call(K, R, ea, B)) {
                                            ea && ea.$changes && $.add(ea.$changes.refId);
                                            continue
                                        }
                                    } else {
                                        var ec = Y.parent
                                          , el = Y.getChildrenFilter();
                                        if (el && !el.call(ec, R, K.$indexes.get(ei), ea, B)) {
                                            ea && ea.$changes && $.add(ea.$changes.refId);
                                            continue
                                        }
                                    }
                                    if (ea.$changes && (H.push(ea.$changes),
                                    W++),
                                    eo.op !== m.OPERATION.TOUCH) {
                                        if (eo.op === m.OPERATION.ADD || J)
                                            q.push.apply(q, null !== (T = Y.caches[ei]) && void 0 !== T ? T : []),
                                            ee.add(ei);
                                        else if (ee.has(ei))
                                            q.push.apply(q, null !== (U = Y.caches[ei]) && void 0 !== U ? U : []);
                                        else {
                                            if (ee.add(ei),
                                            uint8$1(q, m.OPERATION.ADD),
                                            number$1(q, ei),
                                            K instanceof L) {
                                                var eu = Y.ref.$indexes.get(ei);
                                                string$1(q, eu)
                                            }
                                            ea.$changes ? number$1(q, ea.$changes.refId) : G[es](q, ea)
                                        }
                                    } else if (ea.$changes && !J) {
                                        if (uint8$1(q, m.OPERATION.ADD),
                                        number$1(q, ei),
                                        K instanceof L) {
                                            var eu = Y.ref.$indexes.get(ei);
                                            string$1(q, eu)
                                        }
                                        number$1(q, ea.$changes.refId)
                                    }
                                }
                            }
                        }(Z);
                    return q
                }
                ,
                Schema.prototype.clone = function() {
                    var m, R = new this.constructor, C = this._definition.schema;
                    for (var T in C)
                        "object" == typeof this[T] && "function" == typeof (null === (m = this[T]) || void 0 === m ? void 0 : m.clone) ? R[T] = this[T].clone() : R[T] = this[T];
                    return R
                }
                ,
                Schema.prototype.toJSON = function() {
                    var m = this._definition.schema
                      , R = this._definition.deprecated
                      , C = {};
                    for (var T in m)
                        R[T] || null === this[T] || void 0 === this[T] || (C[T] = "function" == typeof this[T].toJSON ? this[T].toJSON() : this["_".concat(T)]);
                    return C
                }
                ,
                Schema.prototype.discardAllChanges = function() {
                    this.$changes.discardAll()
                }
                ,
                Schema.prototype.getByIndex = function(m) {
                    return this[this._definition.fieldsByIndex[m]]
                }
                ,
                Schema.prototype.deleteByIndex = function(m) {
                    this[this._definition.fieldsByIndex[m]] = void 0
                }
                ,
                Schema.prototype.tryEncodeTypeId = function(m, R, C) {
                    R._typeid !== C._typeid && (uint8$1(m, 213),
                    number$1(m, C._typeid))
                }
                ,
                Schema.prototype.getSchemaType = function(m, R, C) {
                    var T;
                    return 213 === m[R.offset] && (R.offset++,
                    T = this.constructor._context.get(number(m, R))),
                    T || C
                }
                ,
                Schema.prototype.createTypeInstance = function(m) {
                    var R = new m;
                    return R.$changes.root = this.$changes.root,
                    R
                }
                ,
                Schema.prototype._triggerChanges = function(R) {
                    for (var C, T, L, U, B, $, V, H, W, q = new Set, G = this.$changes.root.refs, Z = 0; Z < R.length; Z++)
                        !function(Z) {
                            var Y = R[Z]
                              , K = Y.refId
                              , J = G.get(K)
                              , X = J.$callbacks;
                            if ((Y.op & m.OPERATION.DELETE) === m.OPERATION.DELETE && Y.previousValue instanceof Schema && (null === (T = null === (C = Y.previousValue.$callbacks) || void 0 === C ? void 0 : C[m.OPERATION.DELETE]) || void 0 === T || T.forEach(function(m) {
                                return m()
                            })),
                            X) {
                                if (J instanceof Schema) {
                                    if (!q.has(K))
                                        try {
                                            null === (L = null == X ? void 0 : X[m.OPERATION.REPLACE]) || void 0 === L || L.forEach(function(m) {
                                                return m(R)
                                            })
                                        } catch (m) {
                                            Schema.onError(m)
                                        }
                                    try {
                                        X.hasOwnProperty(Y.field) && (null === (U = X[Y.field]) || void 0 === U || U.forEach(function(m) {
                                            return m(Y.value, Y.previousValue)
                                        }))
                                    } catch (m) {
                                        Schema.onError(m)
                                    }
                                } else
                                    Y.op === m.OPERATION.ADD && void 0 === Y.previousValue ? null === (B = X[m.OPERATION.ADD]) || void 0 === B || B.forEach(function(m) {
                                        var R;
                                        return m(Y.value, null !== (R = Y.dynamicIndex) && void 0 !== R ? R : Y.field)
                                    }) : Y.op === m.OPERATION.DELETE ? void 0 !== Y.previousValue && (null === ($ = X[m.OPERATION.DELETE]) || void 0 === $ || $.forEach(function(m) {
                                        var R;
                                        return m(Y.previousValue, null !== (R = Y.dynamicIndex) && void 0 !== R ? R : Y.field)
                                    })) : Y.op === m.OPERATION.DELETE_AND_ADD && (void 0 !== Y.previousValue && (null === (V = X[m.OPERATION.DELETE]) || void 0 === V || V.forEach(function(m) {
                                        var R;
                                        return m(Y.previousValue, null !== (R = Y.dynamicIndex) && void 0 !== R ? R : Y.field)
                                    })),
                                    null === (H = X[m.OPERATION.ADD]) || void 0 === H || H.forEach(function(m) {
                                        var R;
                                        return m(Y.value, null !== (R = Y.dynamicIndex) && void 0 !== R ? R : Y.field)
                                    })),
                                    Y.value !== Y.previousValue && (null === (W = X[m.OPERATION.REPLACE]) || void 0 === W || W.forEach(function(m) {
                                        var R;
                                        return m(Y.value, null !== (R = Y.dynamicIndex) && void 0 !== R ? R : Y.field)
                                    }));
                                q.add(K)
                            }
                        }(Z)
                }
                ,
                Schema._definition = B.create(),
                Schema
            }()
              , eo = {
                context: new $
            }
              , ei = function(m) {
                function ReflectionField() {
                    return null !== m && m.apply(this, arguments) || this
                }
                return __extends(ReflectionField, m),
                __decorate([type("string", eo)], ReflectionField.prototype, "name", void 0),
                __decorate([type("string", eo)], ReflectionField.prototype, "type", void 0),
                __decorate([type("number", eo)], ReflectionField.prototype, "referencedType", void 0),
                ReflectionField
            }(en)
              , ea = function(m) {
                function ReflectionType() {
                    var R = null !== m && m.apply(this, arguments) || this;
                    return R.fields = new T,
                    R
                }
                return __extends(ReflectionType, m),
                __decorate([type("number", eo)], ReflectionType.prototype, "id", void 0),
                __decorate([type([ei], eo)], ReflectionType.prototype, "fields", void 0),
                ReflectionType
            }(en)
              , es = function(m) {
                function Reflection() {
                    var R = null !== m && m.apply(this, arguments) || this;
                    return R.types = new T,
                    R
                }
                return __extends(Reflection, m),
                Reflection.encode = function(m) {
                    var R = m.constructor
                      , C = new Reflection;
                    C.rootType = R._typeid;
                    var T = R._context.types;
                    for (var L in T) {
                        var U = new ea;
                        U.id = Number(L),
                        function(m, R) {
                            for (var T in R) {
                                var L = new ei;
                                L.name = T;
                                var U = void 0;
                                if ("string" == typeof R[T])
                                    U = R[T];
                                else {
                                    var B = R[T]
                                      , $ = void 0;
                                    en.is(B) ? (U = "ref",
                                    $ = R[T]) : (U = Object.keys(B)[0],
                                    "string" == typeof B[U] ? U += ":" + B[U] : $ = B[U]),
                                    L.referencedType = $ ? $._typeid : -1
                                }
                                L.type = U,
                                m.fields.push(L)
                            }
                            C.types.push(m)
                        }(U, T[L]._definition.schema)
                    }
                    return C.encodeAll()
                }
                ,
                Reflection.decode = function(m, R) {
                    var C = new $
                      , T = new Reflection;
                    T.decode(m, R);
                    var L = T.types.reduce(function(m, R) {
                        var T = function(m) {
                            function _() {
                                return null !== m && m.apply(this, arguments) || this
                            }
                            return __extends(_, m),
                            _
                        }(en)
                          , L = R.id;
                        return m[L] = T,
                        C.add(T, L),
                        m
                    }, {});
                    T.types.forEach(function(m) {
                        var R = L[m.id];
                        m.fields.forEach(function(m) {
                            var T;
                            if (void 0 !== m.referencedType) {
                                var U = m.type
                                  , B = L[m.referencedType];
                                if (!B) {
                                    var $ = m.type.split(":");
                                    U = $[0],
                                    B = $[1]
                                }
                                "ref" === U ? type(B, {
                                    context: C
                                })(R.prototype, m.name) : type(((T = {})[U] = B,
                                T), {
                                    context: C
                                })(R.prototype, m.name)
                            } else
                                type(m.type, {
                                    context: C
                                })(R.prototype, m.name)
                        })
                    });
                    var B = L[T.rootType]
                      , V = new B;
                    for (var H in B._definition.schema) {
                        var W = B._definition.schema[H];
                        "string" != typeof W && (V[H] = "function" == typeof W ? new W : new U[Object.keys(W)[0]].constructor)
                    }
                    return V
                }
                ,
                __decorate([type([ea], eo)], Reflection.prototype, "types", void 0),
                __decorate([type("number", eo)], Reflection.prototype, "rootType", void 0),
                Reflection
            }(en);
            U.map = {
                constructor: L
            },
            U.array = {
                constructor: T
            },
            U.set = {
                constructor: Q
            },
            U.collection = {
                constructor: X
            },
            m.ArraySchema = T,
            m.CollectionSchema = X,
            m.Context = $,
            m.MapSchema = L,
            m.Reflection = es,
            m.ReflectionField = ei,
            m.ReflectionType = ea,
            m.Schema = en,
            m.SchemaDefinition = B,
            m.SetSchema = Q,
            m.decode = J,
            m.defineTypes = function(m, R, C) {
                for (var T in void 0 === C && (C = {}),
                C.context || (C.context = m._context || C.context || V),
                R)
                    type(R[T], C)(m.prototype, T);
                return m
            }
            ,
            m.deprecated = function(m) {
                return void 0 === m && (m = !0),
                function(R, C) {
                    var T = R.constructor._definition;
                    T.deprecated[C] = !0,
                    m && (T.descriptors[C] = {
                        get: function() {
                            throw Error("".concat(C, " is deprecated."))
                        },
                        set: function(m) {},
                        enumerable: !1,
                        configurable: !0
                    })
                }
            }
            ,
            m.dumpChanges = function(m) {
                for (var R = [m.$changes], C = {}, T = 0; T < 1; T++)
                    !function(m) {
                        var T = R[m];
                        T.changes.forEach(function(m) {
                            var R = T.ref
                              , L = m.index;
                            C[R._definition ? R._definition.fieldsByIndex[L] : R.$indexes.get(L)] = T.getValue(L)
                        })
                    }(T);
                return C
            }
            ,
            m.encode = G,
            m.filter = function(m) {
                return function(R, C) {
                    var T = R.constructor;
                    T._definition.addFilter(C, m) && (T._context.useFilters = !0)
                }
            }
            ,
            m.filterChildren = function(m) {
                return function(R, C) {
                    var T = R.constructor;
                    T._definition.addChildrenFilter(C, m) && (T._context.useFilters = !0)
                }
            }
            ,
            m.hasFilter = function(m) {
                return m._context && m._context.useFilters
            }
            ,
            m.registerType = function(m, R) {
                U[m] = R
            }
            ,
            m.type = type,
            Object.defineProperty(m, "__esModule", {
                value: !0
            })
        }(R)
    },
    7406: function(m, R, C) {
        "use strict";
        function n(m) {
            for (var R = arguments.length, C = Array(R > 1 ? R - 1 : 0), T = 1; T < R; T++)
                C[T - 1] = arguments[T];
            throw Error("[Immer] minified error nr: " + m + (C.length ? " " + C.map(function(m) {
                return "'" + m + "'"
            }).join(",") : "") + ". Find the full error at: https://bit.ly/3cXEKWf")
        }
        function r(m) {
            return !!m && !!m[G]
        }
        function t(m) {
            var R;
            return !!m && (function(m) {
                if (!m || "object" != typeof m)
                    return !1;
                var R = Object.getPrototypeOf(m);
                if (null === R)
                    return !0;
                var C = Object.hasOwnProperty.call(R, "constructor") && R.constructor;
                return C === Object || "function" == typeof C && Function.toString.call(C) === Z
            }(m) || Array.isArray(m) || !!m[q] || !!(null === (R = m.constructor) || void 0 === R ? void 0 : R[q]) || s(m) || v(m))
        }
        function i(m, R, C) {
            void 0 === C && (C = !1),
            0 === o(m) ? (C ? Object.keys : Y)(m).forEach(function(T) {
                C && "symbol" == typeof T || R(T, m[T], m)
            }) : m.forEach(function(C, T) {
                return R(T, C, m)
            })
        }
        function o(m) {
            var R = m[G];
            return R ? R.i > 3 ? R.i - 4 : R.i : Array.isArray(m) ? 1 : s(m) ? 2 : v(m) ? 3 : 0
        }
        function u(m, R) {
            return 2 === o(m) ? m.has(R) : Object.prototype.hasOwnProperty.call(m, R)
        }
        function f(m, R, C) {
            var T = o(m);
            2 === T ? m.set(R, C) : 3 === T ? m.add(C) : m[R] = C
        }
        function c(m, R) {
            return m === R ? 0 !== m || 1 / m == 1 / R : m != m && R != R
        }
        function s(m) {
            return $ && m instanceof Map
        }
        function v(m) {
            return V && m instanceof Set
        }
        function p(m) {
            return m.o || m.t
        }
        function l(m) {
            if (Array.isArray(m))
                return Array.prototype.slice.call(m);
            var R = K(m);
            delete R[G];
            for (var C = Y(R), T = 0; T < C.length; T++) {
                var L = C[T]
                  , U = R[L];
                !1 === U.writable && (U.writable = !0,
                U.configurable = !0),
                (U.get || U.set) && (R[L] = {
                    configurable: !0,
                    writable: !0,
                    enumerable: U.enumerable,
                    value: m[L]
                })
            }
            return Object.create(Object.getPrototypeOf(m), R)
        }
        function d(m, R) {
            return void 0 === R && (R = !1),
            y(m) || r(m) || !t(m) || (o(m) > 1 && (m.set = m.add = m.clear = m.delete = h),
            Object.freeze(m),
            R && i(m, function(m, R) {
                return d(R, !0)
            }, !0)),
            m
        }
        function h() {
            n(2)
        }
        function y(m) {
            return null == m || "object" != typeof m || Object.isFrozen(m)
        }
        function b(m) {
            var R = J[m];
            return R || n(18, m),
            R
        }
        function j(m, R) {
            R && (b("Patches"),
            m.u = [],
            m.s = [],
            m.v = R)
        }
        function g(m) {
            O(m),
            m.p.forEach(S),
            m.p = null
        }
        function O(m) {
            m === U && (U = m.l)
        }
        function w(m) {
            return U = {
                p: [],
                l: U,
                h: m,
                m: !0,
                _: 0
            }
        }
        function S(m) {
            var R = m[G];
            0 === R.i || 1 === R.i ? R.j() : R.g = !0
        }
        function P(m, R) {
            R._ = R.p.length;
            var C = R.p[0]
              , T = void 0 !== m && m !== C;
            return R.h.O || b("ES5").S(R, m, T),
            T ? (C[G].P && (g(R),
            n(4)),
            t(m) && (m = M(R, m),
            R.l || x(R, m)),
            R.u && b("Patches").M(C[G].t, m, R.u, R.s)) : m = M(R, C, []),
            g(R),
            R.u && R.v(R.u, R.s),
            m !== W ? m : void 0
        }
        function M(m, R, C) {
            if (y(R))
                return R;
            var T = R[G];
            if (!T)
                return i(R, function(L, U) {
                    return A(m, T, R, L, U, C)
                }, !0),
                R;
            if (T.A !== m)
                return R;
            if (!T.P)
                return x(m, T.t, !0),
                T.t;
            if (!T.I) {
                T.I = !0,
                T.A._--;
                var L = 4 === T.i || 5 === T.i ? T.o = l(T.k) : T.o
                  , U = L
                  , B = !1;
                3 === T.i && (U = new Set(L),
                L.clear(),
                B = !0),
                i(U, function(R, U) {
                    return A(m, T, L, R, U, C, B)
                }),
                x(m, L, !1),
                C && m.u && b("Patches").N(T, C, m.u, m.s)
            }
            return T.o
        }
        function A(m, R, C, T, L, U, B) {
            if (r(L)) {
                var $ = M(m, L, U && R && 3 !== R.i && !u(R.R, T) ? U.concat(T) : void 0);
                if (f(C, T, $),
                !r($))
                    return;
                m.m = !1
            } else
                B && C.add(L);
            if (t(L) && !y(L)) {
                if (!m.h.D && m._ < 1)
                    return;
                M(m, L),
                R && R.A.l || x(m, L)
            }
        }
        function x(m, R, C) {
            void 0 === C && (C = !1),
            !m.l && m.h.D && m.m && d(R, C)
        }
        function z(m, R) {
            var C = m[G];
            return (C ? p(C) : m)[R]
        }
        function I(m, R) {
            if (R in m)
                for (var C = Object.getPrototypeOf(m); C; ) {
                    var T = Object.getOwnPropertyDescriptor(C, R);
                    if (T)
                        return T;
                    C = Object.getPrototypeOf(C)
                }
        }
        function k(m) {
            m.P || (m.P = !0,
            m.l && k(m.l))
        }
        function E(m) {
            m.o || (m.o = l(m.t))
        }
        function N(m, R, C) {
            var T, L, B, $, V, H, W, q = s(R) ? b("MapSet").F(R, C) : v(R) ? b("MapSet").T(R, C) : m.O ? (B = L = {
                i: (T = Array.isArray(R)) ? 1 : 0,
                A: C ? C.A : U,
                P: !1,
                I: !1,
                R: {},
                l: C,
                t: R,
                k: null,
                o: null,
                j: null,
                C: !1
            },
            $ = X,
            T && (B = [L],
            $ = Q),
            H = (V = Proxy.revocable(B, $)).revoke,
            W = V.proxy,
            L.k = W,
            L.j = H,
            W) : b("ES5").J(R, C);
            return (C ? C.A : U).p.push(q),
            q
        }
        function D(m, R) {
            switch (R) {
            case 2:
                return new Map(m);
            case 3:
                return Array.from(m)
            }
            return l(m)
        }
        C.d(R, {
            xC: function() {
                return configureStore
            },
            hg: function() {
                return ey
            },
            oM: function() {
                return createSlice
            }
        });
        var T, L, U, B = "undefined" != typeof Symbol && "symbol" == typeof Symbol("x"), $ = "undefined" != typeof Map, V = "undefined" != typeof Set, H = "undefined" != typeof Proxy && void 0 !== Proxy.revocable && "undefined" != typeof Reflect, W = B ? Symbol.for("immer-nothing") : ((L = {})["immer-nothing"] = !0,
        L), q = B ? Symbol.for("immer-draftable") : "__$immer_draftable", G = B ? Symbol.for("immer-state") : "__$immer_state", Z = "" + Object.prototype.constructor, Y = "undefined" != typeof Reflect && Reflect.ownKeys ? Reflect.ownKeys : void 0 !== Object.getOwnPropertySymbols ? function(m) {
            return Object.getOwnPropertyNames(m).concat(Object.getOwnPropertySymbols(m))
        }
        : Object.getOwnPropertyNames, K = Object.getOwnPropertyDescriptors || function(m) {
            var R = {};
            return Y(m).forEach(function(C) {
                R[C] = Object.getOwnPropertyDescriptor(m, C)
            }),
            R
        }
        , J = {}, X = {
            get: function(m, R) {
                if (R === G)
                    return m;
                var C, T, L = p(m);
                if (!u(L, R))
                    return (T = I(L, R)) ? "value"in T ? T.value : null === (C = T.get) || void 0 === C ? void 0 : C.call(m.k) : void 0;
                var U = L[R];
                return m.I || !t(U) ? U : U === z(m.t, R) ? (E(m),
                m.o[R] = N(m.A.h, U, m)) : U
            },
            has: function(m, R) {
                return R in p(m)
            },
            ownKeys: function(m) {
                return Reflect.ownKeys(p(m))
            },
            set: function(m, R, C) {
                var T = I(p(m), R);
                if (null == T ? void 0 : T.set)
                    return T.set.call(m.k, C),
                    !0;
                if (!m.P) {
                    var L = z(p(m), R)
                      , U = null == L ? void 0 : L[G];
                    if (U && U.t === C)
                        return m.o[R] = C,
                        m.R[R] = !1,
                        !0;
                    if (c(C, L) && (void 0 !== C || u(m.t, R)))
                        return !0;
                    E(m),
                    k(m)
                }
                return m.o[R] === C && (void 0 !== C || R in m.o) || Number.isNaN(C) && Number.isNaN(m.o[R]) || (m.o[R] = C,
                m.R[R] = !0),
                !0
            },
            deleteProperty: function(m, R) {
                return void 0 !== z(m.t, R) || R in m.t ? (m.R[R] = !1,
                E(m),
                k(m)) : delete m.R[R],
                m.o && delete m.o[R],
                !0
            },
            getOwnPropertyDescriptor: function(m, R) {
                var C = p(m)
                  , T = Reflect.getOwnPropertyDescriptor(C, R);
                return T ? {
                    writable: !0,
                    configurable: 1 !== m.i || "length" !== R,
                    enumerable: T.enumerable,
                    value: C[R]
                } : T
            },
            defineProperty: function() {
                n(11)
            },
            getPrototypeOf: function(m) {
                return Object.getPrototypeOf(m.t)
            },
            setPrototypeOf: function() {
                n(12)
            }
        }, Q = {};
        i(X, function(m, R) {
            Q[m] = function() {
                return arguments[0] = arguments[0][0],
                R.apply(this, arguments)
            }
        }),
        Q.deleteProperty = function(m, R) {
            return Q.set.call(this, m, R, void 0)
        }
        ,
        Q.set = function(m, R, C) {
            return X.set.call(this, m[0], R, C, m[0])
        }
        ;
        var ee = new (function() {
            function e(m) {
                var R = this;
                this.O = H,
                this.D = !0,
                this.produce = function(m, C, T) {
                    if ("function" == typeof m && "function" != typeof C) {
                        var L, U = C;
                        return C = m,
                        function(m) {
                            var T = this;
                            void 0 === m && (m = U);
                            for (var L = arguments.length, B = Array(L > 1 ? L - 1 : 0), $ = 1; $ < L; $++)
                                B[$ - 1] = arguments[$];
                            return R.produce(m, function(m) {
                                var R;
                                return (R = C).call.apply(R, [T, m].concat(B))
                            })
                        }
                    }
                    if ("function" != typeof C && n(6),
                    void 0 !== T && "function" != typeof T && n(7),
                    t(m)) {
                        var B = w(R)
                          , $ = N(R, m, void 0)
                          , V = !0;
                        try {
                            L = C($),
                            V = !1
                        } finally {
                            V ? g(B) : O(B)
                        }
                        return "undefined" != typeof Promise && L instanceof Promise ? L.then(function(m) {
                            return j(B, T),
                            P(m, B)
                        }, function(m) {
                            throw g(B),
                            m
                        }) : (j(B, T),
                        P(L, B))
                    }
                    if (!m || "object" != typeof m) {
                        if (void 0 === (L = C(m)) && (L = m),
                        L === W && (L = void 0),
                        R.D && d(L, !0),
                        T) {
                            var H = []
                              , q = [];
                            b("Patches").M(m, L, H, q),
                            T(H, q)
                        }
                        return L
                    }
                    n(21, m)
                }
                ,
                this.produceWithPatches = function(m, C) {
                    if ("function" == typeof m)
                        return function(C) {
                            for (var T = arguments.length, L = Array(T > 1 ? T - 1 : 0), U = 1; U < T; U++)
                                L[U - 1] = arguments[U];
                            return R.produceWithPatches(C, function(R) {
                                return m.apply(void 0, [R].concat(L))
                            })
                        }
                        ;
                    var T, L, U = R.produce(m, C, function(m, R) {
                        T = m,
                        L = R
                    });
                    return "undefined" != typeof Promise && U instanceof Promise ? U.then(function(m) {
                        return [m, T, L]
                    }) : [U, T, L]
                }
                ,
                "boolean" == typeof (null == m ? void 0 : m.useProxies) && this.setUseProxies(m.useProxies),
                "boolean" == typeof (null == m ? void 0 : m.autoFreeze) && this.setAutoFreeze(m.autoFreeze)
            }
            var m = e.prototype;
            return m.createDraft = function(m) {
                t(m) || n(8),
                r(m) && (r(R = m) || n(22, R),
                m = function n(m) {
                    if (!t(m))
                        return m;
                    var R, C = m[G], T = o(m);
                    if (C) {
                        if (!C.P && (C.i < 4 || !b("ES5").K(C)))
                            return C.t;
                        C.I = !0,
                        R = D(m, T),
                        C.I = !1
                    } else
                        R = D(m, T);
                    return i(R, function(m, T) {
                        var L;
                        C && (2 === o(L = C.t) ? L.get(m) : L[m]) === T || f(R, m, n(T))
                    }),
                    3 === T ? new Set(R) : R
                }(R));
                var R, C = w(this), T = N(this, m, void 0);
                return T[G].C = !0,
                O(C),
                T
            }
            ,
            m.finishDraft = function(m, R) {
                var C = (m && m[G]).A;
                return j(C, R),
                P(void 0, C)
            }
            ,
            m.setAutoFreeze = function(m) {
                this.D = m
            }
            ,
            m.setUseProxies = function(m) {
                m && !H && n(20),
                this.O = m
            }
            ,
            m.applyPatches = function(m, R) {
                for (C = R.length - 1; C >= 0; C--) {
                    var C, T = R[C];
                    if (0 === T.path.length && "replace" === T.op) {
                        m = T.value;
                        break
                    }
                }
                C > -1 && (R = R.slice(C + 1));
                var L = b("Patches").$;
                return r(m) ? L(m, R) : this.produce(m, function(m) {
                    return L(m, R)
                })
            }
            ,
            e
        }())
          , et = ee.produce;
        ee.produceWithPatches.bind(ee),
        ee.setAutoFreeze.bind(ee),
        ee.setUseProxies.bind(ee),
        ee.applyPatches.bind(ee),
        ee.createDraft.bind(ee),
        ee.finishDraft.bind(ee);
        var er = C(4942);
        function ownKeys(m, R) {
            var C = Object.keys(m);
            if (Object.getOwnPropertySymbols) {
                var T = Object.getOwnPropertySymbols(m);
                R && (T = T.filter(function(R) {
                    return Object.getOwnPropertyDescriptor(m, R).enumerable
                })),
                C.push.apply(C, T)
            }
            return C
        }
        function _objectSpread2(m) {
            for (var R = 1; R < arguments.length; R++) {
                var C = null != arguments[R] ? arguments[R] : {};
                R % 2 ? ownKeys(Object(C), !0).forEach(function(R) {
                    (0,
                    er.Z)(m, R, C[R])
                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(m, Object.getOwnPropertyDescriptors(C)) : ownKeys(Object(C)).forEach(function(R) {
                    Object.defineProperty(m, R, Object.getOwnPropertyDescriptor(C, R))
                })
            }
            return m
        }
        function formatProdErrorMessage(m) {
            return "Minified Redux error #" + m + "; visit https://redux.js.org/Errors?code=" + m + " for the full message or use the non-minified dev environment for full errors. "
        }
        var en = "function" == typeof Symbol && Symbol.observable || "@@observable"
          , randomString = function() {
            return Math.random().toString(36).substring(7).split("").join(".")
        }
          , eo = {
            INIT: "@@redux/INIT" + randomString(),
            REPLACE: "@@redux/REPLACE" + randomString(),
            PROBE_UNKNOWN_ACTION: function() {
                return "@@redux/PROBE_UNKNOWN_ACTION" + randomString()
            }
        };
        function compose() {
            for (var m = arguments.length, R = Array(m), C = 0; C < m; C++)
                R[C] = arguments[C];
            return 0 === R.length ? function(m) {
                return m
            }
            : 1 === R.length ? R[0] : R.reduce(function(m, R) {
                return function() {
                    return m(R.apply(void 0, arguments))
                }
            })
        }
        function applyMiddleware() {
            for (var m = arguments.length, R = Array(m), C = 0; C < m; C++)
                R[C] = arguments[C];
            return function(m) {
                return function() {
                    var C = m.apply(void 0, arguments)
                      , _dispatch = function() {
                        throw Error(formatProdErrorMessage(15))
                    }
                      , T = {
                        getState: C.getState,
                        dispatch: function() {
                            return _dispatch.apply(void 0, arguments)
                        }
                    }
                      , L = R.map(function(m) {
                        return m(T)
                    });
                    return _dispatch = compose.apply(void 0, L)(C.dispatch),
                    _objectSpread2(_objectSpread2({}, C), {}, {
                        dispatch: _dispatch
                    })
                }
            }
        }
        function createThunkMiddleware(m) {
            return function(R) {
                var C = R.dispatch
                  , T = R.getState;
                return function(R) {
                    return function(L) {
                        return "function" == typeof L ? L(C, T, m) : R(L)
                    }
                }
            }
        }
        var ei = createThunkMiddleware();
        ei.withExtraArgument = createThunkMiddleware,
        C(83454);
        var ea = (T = function(m, R) {
            return (T = Object.setPrototypeOf || ({
                __proto__: []
            })instanceof Array && function(m, R) {
                m.__proto__ = R
            }
            || function(m, R) {
                for (var C in R)
                    Object.prototype.hasOwnProperty.call(R, C) && (m[C] = R[C])
            }
            )(m, R)
        }
        ,
        function(m, R) {
            if ("function" != typeof R && null !== R)
                throw TypeError("Class extends value " + String(R) + " is not a constructor or null");
            function __() {
                this.constructor = m
            }
            T(m, R),
            m.prototype = null === R ? Object.create(R) : (__.prototype = R.prototype,
            new __)
        }
        )
          , __generator = function(m, R) {
            var C, T, L, U, B = {
                label: 0,
                sent: function() {
                    if (1 & L[0])
                        throw L[1];
                    return L[1]
                },
                trys: [],
                ops: []
            };
            return U = {
                next: verb(0),
                throw: verb(1),
                return: verb(2)
            },
            "function" == typeof Symbol && (U[Symbol.iterator] = function() {
                return this
            }
            ),
            U;
            function verb(U) {
                return function($) {
                    return function(U) {
                        if (C)
                            throw TypeError("Generator is already executing.");
                        for (; B; )
                            try {
                                if (C = 1,
                                T && (L = 2 & U[0] ? T.return : U[0] ? T.throw || ((L = T.return) && L.call(T),
                                0) : T.next) && !(L = L.call(T, U[1])).done)
                                    return L;
                                switch (T = 0,
                                L && (U = [2 & U[0], L.value]),
                                U[0]) {
                                case 0:
                                case 1:
                                    L = U;
                                    break;
                                case 4:
                                    return B.label++,
                                    {
                                        value: U[1],
                                        done: !1
                                    };
                                case 5:
                                    B.label++,
                                    T = U[1],
                                    U = [0];
                                    continue;
                                case 7:
                                    U = B.ops.pop(),
                                    B.trys.pop();
                                    continue;
                                default:
                                    if (!(L = (L = B.trys).length > 0 && L[L.length - 1]) && (6 === U[0] || 2 === U[0])) {
                                        B = 0;
                                        continue
                                    }
                                    if (3 === U[0] && (!L || U[1] > L[0] && U[1] < L[3])) {
                                        B.label = U[1];
                                        break
                                    }
                                    if (6 === U[0] && B.label < L[1]) {
                                        B.label = L[1],
                                        L = U;
                                        break
                                    }
                                    if (L && B.label < L[2]) {
                                        B.label = L[2],
                                        B.ops.push(U);
                                        break
                                    }
                                    L[2] && B.ops.pop(),
                                    B.trys.pop();
                                    continue
                                }
                                U = R.call(m, B)
                            } catch (m) {
                                U = [6, m],
                                T = 0
                            } finally {
                                C = L = 0
                            }
                        if (5 & U[0])
                            throw U[1];
                        return {
                            value: U[0] ? U[1] : void 0,
                            done: !0
                        }
                    }([U, $])
                }
            }
        }
          , __spreadArray = function(m, R) {
            for (var C = 0, T = R.length, L = m.length; C < T; C++,
            L++)
                m[L] = R[C];
            return m
        }
          , es = Object.defineProperty
          , el = Object.defineProperties
          , ec = Object.getOwnPropertyDescriptors
          , eu = Object.getOwnPropertySymbols
          , ef = Object.prototype.hasOwnProperty
          , ed = Object.prototype.propertyIsEnumerable
          , __defNormalProp = function(m, R, C) {
            return R in m ? es(m, R, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: C
            }) : m[R] = C
        }
          , __spreadValues = function(m, R) {
            for (var C in R || (R = {}))
                ef.call(R, C) && __defNormalProp(m, C, R[C]);
            if (eu)
                for (var T = 0, L = eu(R); T < L.length; T++) {
                    var C = L[T];
                    ed.call(R, C) && __defNormalProp(m, C, R[C])
                }
            return m
        }
          , __spreadProps = function(m, R) {
            return el(m, ec(R))
        }
          , ep = "undefined" != typeof window && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : function() {
            if (0 != arguments.length)
                return "object" == typeof arguments[0] ? compose : compose.apply(null, arguments)
        }
        ;
        "undefined" != typeof window && window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__;
        var eh = function(m) {
            function MiddlewareArray() {
                for (var R = [], C = 0; C < arguments.length; C++)
                    R[C] = arguments[C];
                var T = m.apply(this, R) || this;
                return Object.setPrototypeOf(T, MiddlewareArray.prototype),
                T
            }
            return ea(MiddlewareArray, m),
            Object.defineProperty(MiddlewareArray, Symbol.species, {
                get: function() {
                    return MiddlewareArray
                },
                enumerable: !1,
                configurable: !0
            }),
            MiddlewareArray.prototype.concat = function() {
                for (var R = [], C = 0; C < arguments.length; C++)
                    R[C] = arguments[C];
                return m.prototype.concat.apply(this, R)
            }
            ,
            MiddlewareArray.prototype.prepend = function() {
                for (var m = [], R = 0; R < arguments.length; R++)
                    m[R] = arguments[R];
                return 1 === m.length && Array.isArray(m[0]) ? new (MiddlewareArray.bind.apply(MiddlewareArray, __spreadArray([void 0], m[0].concat(this)))) : new (MiddlewareArray.bind.apply(MiddlewareArray, __spreadArray([void 0], m.concat(this))))
            }
            ,
            MiddlewareArray
        }(Array)
          , eg = function(m) {
            function EnhancerArray() {
                for (var R = [], C = 0; C < arguments.length; C++)
                    R[C] = arguments[C];
                var T = m.apply(this, R) || this;
                return Object.setPrototypeOf(T, EnhancerArray.prototype),
                T
            }
            return ea(EnhancerArray, m),
            Object.defineProperty(EnhancerArray, Symbol.species, {
                get: function() {
                    return EnhancerArray
                },
                enumerable: !1,
                configurable: !0
            }),
            EnhancerArray.prototype.concat = function() {
                for (var R = [], C = 0; C < arguments.length; C++)
                    R[C] = arguments[C];
                return m.prototype.concat.apply(this, R)
            }
            ,
            EnhancerArray.prototype.prepend = function() {
                for (var m = [], R = 0; R < arguments.length; R++)
                    m[R] = arguments[R];
                return 1 === m.length && Array.isArray(m[0]) ? new (EnhancerArray.bind.apply(EnhancerArray, __spreadArray([void 0], m[0].concat(this)))) : new (EnhancerArray.bind.apply(EnhancerArray, __spreadArray([void 0], m.concat(this))))
            }
            ,
            EnhancerArray
        }(Array);
        function freezeDraftable(m) {
            return t(m) ? et(m, function() {}) : m
        }
        function configureStore(m) {
            var R, curriedGetDefaultMiddleware = function(m) {
                var R, C, T, L;
                return void 0 === (R = m) && (R = {}),
                T = void 0 === (C = R.thunk) || C,
                R.immutableCheck,
                R.serializableCheck,
                L = new eh,
                T && ("boolean" == typeof T ? L.push(ei) : L.push(ei.withExtraArgument(T.extraArgument))),
                L
            }, C = m || {}, T = C.reducer, L = void 0 === T ? void 0 : T, U = C.middleware, B = void 0 === U ? curriedGetDefaultMiddleware() : U, $ = C.devTools, V = void 0 === $ || $, H = C.preloadedState, W = void 0 === H ? void 0 : H, q = C.enhancers, G = void 0 === q ? void 0 : q;
            if ("function" == typeof L)
                R = L;
            else if (function(m) {
                if ("object" != typeof m || null === m)
                    return !1;
                var R = Object.getPrototypeOf(m);
                if (null === R)
                    return !0;
                for (var C = R; null !== Object.getPrototypeOf(C); )
                    C = Object.getPrototypeOf(C);
                return R === C
            }(L))
                R = function(m) {
                    for (var R, C = Object.keys(m), T = {}, L = 0; L < C.length; L++) {
                        var U = C[L];
                        "function" == typeof m[U] && (T[U] = m[U])
                    }
                    var B = Object.keys(T);
                    try {
                        !function(m) {
                            Object.keys(m).forEach(function(R) {
                                var C = m[R];
                                if (void 0 === C(void 0, {
                                    type: eo.INIT
                                }))
                                    throw Error(formatProdErrorMessage(12));
                                if (void 0 === C(void 0, {
                                    type: eo.PROBE_UNKNOWN_ACTION()
                                }))
                                    throw Error(formatProdErrorMessage(13))
                            })
                        }(T)
                    } catch (m) {
                        R = m
                    }
                    return function(m, C) {
                        if (void 0 === m && (m = {}),
                        R)
                            throw R;
                        for (var L = !1, U = {}, $ = 0; $ < B.length; $++) {
                            var V = B[$]
                              , H = T[V]
                              , W = m[V]
                              , q = H(W, C);
                            if (void 0 === q)
                                throw C && C.type,
                                Error(formatProdErrorMessage(14));
                            U[V] = q,
                            L = L || q !== W
                        }
                        return (L = L || B.length !== Object.keys(m).length) ? U : m
                    }
                }(L);
            else
                throw Error('"reducer" is a required argument, and must be a function or an object of functions that can be passed to combineReducers');
            var Z = B;
            "function" == typeof Z && (Z = Z(curriedGetDefaultMiddleware));
            var Y = applyMiddleware.apply(void 0, Z)
              , K = compose;
            V && (K = ep(__spreadValues({
                trace: !1
            }, "object" == typeof V && V)));
            var J = new eg(Y)
              , X = J;
            return Array.isArray(G) ? X = __spreadArray([Y], G) : "function" == typeof G && (X = G(J)),
            function createStore(m, R, C) {
                if ("function" == typeof R && "function" == typeof C || "function" == typeof C && "function" == typeof arguments[3])
                    throw Error(formatProdErrorMessage(0));
                if ("function" == typeof R && void 0 === C && (C = R,
                R = void 0),
                void 0 !== C) {
                    if ("function" != typeof C)
                        throw Error(formatProdErrorMessage(1));
                    return C(createStore)(m, R)
                }
                if ("function" != typeof m)
                    throw Error(formatProdErrorMessage(2));
                var T, L = m, U = R, B = [], $ = B, V = !1;
                function ensureCanMutateNextListeners() {
                    $ === B && ($ = B.slice())
                }
                function getState() {
                    if (V)
                        throw Error(formatProdErrorMessage(3));
                    return U
                }
                function subscribe(m) {
                    if ("function" != typeof m)
                        throw Error(formatProdErrorMessage(4));
                    if (V)
                        throw Error(formatProdErrorMessage(5));
                    var R = !0;
                    return ensureCanMutateNextListeners(),
                    $.push(m),
                    function() {
                        if (R) {
                            if (V)
                                throw Error(formatProdErrorMessage(6));
                            R = !1,
                            ensureCanMutateNextListeners();
                            var C = $.indexOf(m);
                            $.splice(C, 1),
                            B = null
                        }
                    }
                }
                function dispatch(m) {
                    if (!function(m) {
                        if ("object" != typeof m || null === m)
                            return !1;
                        for (var R = m; null !== Object.getPrototypeOf(R); )
                            R = Object.getPrototypeOf(R);
                        return Object.getPrototypeOf(m) === R
                    }(m))
                        throw Error(formatProdErrorMessage(7));
                    if (void 0 === m.type)
                        throw Error(formatProdErrorMessage(8));
                    if (V)
                        throw Error(formatProdErrorMessage(9));
                    try {
                        V = !0,
                        U = L(U, m)
                    } finally {
                        V = !1
                    }
                    for (var R = B = $, C = 0; C < R.length; C++)
                        (0,
                        R[C])();
                    return m
                }
                return dispatch({
                    type: eo.INIT
                }),
                (T = {
                    dispatch: dispatch,
                    subscribe: subscribe,
                    getState: getState,
                    replaceReducer: function(m) {
                        if ("function" != typeof m)
                            throw Error(formatProdErrorMessage(10));
                        L = m,
                        dispatch({
                            type: eo.REPLACE
                        })
                    }
                })[en] = function() {
                    var m;
                    return (m = {
                        subscribe: function(m) {
                            if ("object" != typeof m || null === m)
                                throw Error(formatProdErrorMessage(11));
                            function observeState() {
                                m.next && m.next(getState())
                            }
                            return observeState(),
                            {
                                unsubscribe: subscribe(observeState)
                            }
                        }
                    })[en] = function() {
                        return this
                    }
                    ,
                    m
                }
                ,
                T
            }(R, W, K.apply(void 0, X))
        }
        function createAction(m, R) {
            function actionCreator() {
                for (var C = [], T = 0; T < arguments.length; T++)
                    C[T] = arguments[T];
                if (R) {
                    var L = R.apply(void 0, C);
                    if (!L)
                        throw Error("prepareAction did not return an object");
                    return __spreadValues(__spreadValues({
                        type: m,
                        payload: L.payload
                    }, "meta"in L && {
                        meta: L.meta
                    }), "error"in L && {
                        error: L.error
                    })
                }
                return {
                    type: m,
                    payload: C[0]
                }
            }
            return actionCreator.toString = function() {
                return "" + m
            }
            ,
            actionCreator.type = m,
            actionCreator.match = function(R) {
                return R.type === m
            }
            ,
            actionCreator
        }
        function executeReducerBuilderCallback(m) {
            var R, C = {}, T = [], L = {
                addCase: function(m, R) {
                    var T = "string" == typeof m ? m : m.type;
                    if (T in C)
                        throw Error("addCase cannot be called with two reducers for the same action type");
                    return C[T] = R,
                    L
                },
                addMatcher: function(m, R) {
                    return T.push({
                        matcher: m,
                        reducer: R
                    }),
                    L
                },
                addDefaultCase: function(m) {
                    return R = m,
                    L
                }
            };
            return m(L),
            [C, T, R]
        }
        function createSlice(m) {
            var R, C = m.name;
            if (!C)
                throw Error("`name` is a required option for createSlice");
            var T = "function" == typeof m.initialState ? m.initialState : freezeDraftable(m.initialState)
              , L = m.reducers || {}
              , U = Object.keys(L)
              , B = {}
              , $ = {}
              , V = {};
            function buildReducer() {
                var R = "function" == typeof m.extraReducers ? executeReducerBuilderCallback(m.extraReducers) : [m.extraReducers]
                  , C = R[0]
                  , L = R[1]
                  , U = void 0 === L ? [] : L
                  , B = R[2]
                  , V = void 0 === B ? void 0 : B
                  , H = __spreadValues(__spreadValues({}, void 0 === C ? {} : C), $);
                return function(m, R, C, T) {
                    void 0 === C && (C = []);
                    var L, U = "function" == typeof R ? executeReducerBuilderCallback(R) : [R, C, void 0], B = U[0], $ = U[1], V = U[2];
                    if ("function" == typeof m)
                        L = function() {
                            return freezeDraftable(m())
                        }
                        ;
                    else {
                        var H = freezeDraftable(m);
                        L = function() {
                            return H
                        }
                    }
                    function reducer(m, R) {
                        void 0 === m && (m = L());
                        var C = __spreadArray([B[R.type]], $.filter(function(m) {
                            return (0,
                            m.matcher)(R)
                        }).map(function(m) {
                            return m.reducer
                        }));
                        return 0 === C.filter(function(m) {
                            return !!m
                        }).length && (C = [V]),
                        C.reduce(function(m, C) {
                            if (C) {
                                if (r(m)) {
                                    var T = C(m, R);
                                    return void 0 === T ? m : T
                                }
                                if (t(m))
                                    return et(m, function(m) {
                                        return C(m, R)
                                    });
                                var T = C(m, R);
                                if (void 0 === T) {
                                    if (null === m)
                                        return m;
                                    throw Error("A case reducer on a non-draftable value must not return undefined")
                                }
                                return T
                            }
                            return m
                        }, m)
                    }
                    return reducer.getInitialState = L,
                    reducer
                }(T, function(m) {
                    for (var R in H)
                        m.addCase(R, H[R]);
                    for (var C = 0; C < U.length; C++) {
                        var T = U[C];
                        m.addMatcher(T.matcher, T.reducer)
                    }
                    V && m.addDefaultCase(V)
                })
            }
            return U.forEach(function(m) {
                var R, T, U = L[m], H = C + "/" + m;
                "reducer"in U ? (R = U.reducer,
                T = U.prepare) : R = U,
                B[m] = R,
                $[H] = R,
                V[m] = T ? createAction(H, T) : createAction(H)
            }),
            {
                name: C,
                reducer: function(m, C) {
                    return R || (R = buildReducer()),
                    R(m, C)
                },
                actions: V,
                caseReducers: B,
                getInitialState: function() {
                    return R || (R = buildReducer()),
                    R.getInitialState()
                }
            }
        }
        var nanoid = function(m) {
            void 0 === m && (m = 21);
            for (var R = "", C = m; C--; )
                R += "ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW"[64 * Math.random() | 0];
            return R
        }
          , em = ["name", "message", "stack", "code"]
          , RejectWithValue = function(m, R) {
            this.payload = m,
            this.meta = R
        }
          , FulfillWithMeta = function(m, R) {
            this.payload = m,
            this.meta = R
        }
          , miniSerializeError = function(m) {
            if ("object" == typeof m && null !== m) {
                for (var R = {}, C = 0; C < em.length; C++) {
                    var T = em[C];
                    "string" == typeof m[T] && (R[T] = m[T])
                }
                return R
            }
            return {
                message: String(m)
            }
        }
          , ey = function() {
            function createAsyncThunk2(m, R, C) {
                var T = createAction(m + "/fulfilled", function(m, R, C, T) {
                    return {
                        payload: m,
                        meta: __spreadProps(__spreadValues({}, T || {}), {
                            arg: C,
                            requestId: R,
                            requestStatus: "fulfilled"
                        })
                    }
                })
                  , L = createAction(m + "/pending", function(m, R, C) {
                    return {
                        payload: void 0,
                        meta: __spreadProps(__spreadValues({}, C || {}), {
                            arg: R,
                            requestId: m,
                            requestStatus: "pending"
                        })
                    }
                })
                  , U = createAction(m + "/rejected", function(m, R, T, L, U) {
                    return {
                        payload: L,
                        error: (C && C.serializeError || miniSerializeError)(m || "Rejected"),
                        meta: __spreadProps(__spreadValues({}, U || {}), {
                            arg: T,
                            requestId: R,
                            rejectedWithValue: !!L,
                            requestStatus: "rejected",
                            aborted: (null == m ? void 0 : m.name) === "AbortError",
                            condition: (null == m ? void 0 : m.name) === "ConditionError"
                        })
                    }
                })
                  , B = "undefined" != typeof AbortController ? AbortController : function() {
                    function class_1() {
                        this.signal = {
                            aborted: !1,
                            addEventListener: function() {},
                            dispatchEvent: function() {
                                return !1
                            },
                            onabort: function() {},
                            removeEventListener: function() {},
                            reason: void 0,
                            throwIfAborted: function() {}
                        }
                    }
                    return class_1.prototype.abort = function() {}
                    ,
                    class_1
                }();
                return Object.assign(function(m) {
                    return function($, V, H) {
                        var W, q = (null == C ? void 0 : C.idGenerator) ? C.idGenerator(m) : nanoid(), G = new B;
                        function abort(m) {
                            W = m,
                            G.abort()
                        }
                        var Z = function() {
                            var B, Z;
                            return B = this,
                            Z = function() {
                                var B, Z, Y, K, J, X;
                                return __generator(this, function(Q) {
                                    switch (Q.label) {
                                    case 0:
                                        var ee;
                                        if (Q.trys.push([0, 4, , 5]),
                                        !(null !== (ee = K = null == (B = null == C ? void 0 : C.condition) ? void 0 : B.call(C, m, {
                                            getState: V,
                                            extra: H
                                        })) && "object" == typeof ee && "function" == typeof ee.then))
                                            return [3, 2];
                                        return [4, K];
                                    case 1:
                                        K = Q.sent(),
                                        Q.label = 2;
                                    case 2:
                                        if (!1 === K || G.signal.aborted)
                                            throw {
                                                name: "ConditionError",
                                                message: "Aborted due to condition callback returning false."
                                            };
                                        return J = new Promise(function(m, R) {
                                            return G.signal.addEventListener("abort", function() {
                                                return R({
                                                    name: "AbortError",
                                                    message: W || "Aborted"
                                                })
                                            })
                                        }
                                        ),
                                        $(L(q, m, null == (Z = null == C ? void 0 : C.getPendingMeta) ? void 0 : Z.call(C, {
                                            requestId: q,
                                            arg: m
                                        }, {
                                            getState: V,
                                            extra: H
                                        }))),
                                        [4, Promise.race([J, Promise.resolve(R(m, {
                                            dispatch: $,
                                            getState: V,
                                            extra: H,
                                            requestId: q,
                                            signal: G.signal,
                                            abort: abort,
                                            rejectWithValue: function(m, R) {
                                                return new RejectWithValue(m,R)
                                            },
                                            fulfillWithValue: function(m, R) {
                                                return new FulfillWithMeta(m,R)
                                            }
                                        })).then(function(R) {
                                            if (R instanceof RejectWithValue)
                                                throw R;
                                            return R instanceof FulfillWithMeta ? T(R.payload, q, m, R.meta) : T(R, q, m)
                                        })])];
                                    case 3:
                                        return Y = Q.sent(),
                                        [3, 5];
                                    case 4:
                                        return Y = (X = Q.sent())instanceof RejectWithValue ? U(null, q, m, X.payload, X.meta) : U(X, q, m),
                                        [3, 5];
                                    case 5:
                                        return C && !C.dispatchConditionRejection && U.match(Y) && Y.meta.condition || $(Y),
                                        [2, Y]
                                    }
                                })
                            }
                            ,
                            new Promise(function(m, R) {
                                var fulfilled = function(m) {
                                    try {
                                        step(Z.next(m))
                                    } catch (m) {
                                        R(m)
                                    }
                                }
                                  , rejected = function(m) {
                                    try {
                                        step(Z.throw(m))
                                    } catch (m) {
                                        R(m)
                                    }
                                }
                                  , step = function(R) {
                                    return R.done ? m(R.value) : Promise.resolve(R.value).then(fulfilled, rejected)
                                };
                                step((Z = Z.apply(B, null)).next())
                            }
                            )
                        }();
                        return Object.assign(Z, {
                            abort: abort,
                            requestId: q,
                            arg: m,
                            unwrap: function() {
                                return Z.then(unwrapResult)
                            }
                        })
                    }
                }, {
                    pending: L,
                    rejected: U,
                    fulfilled: T,
                    typePrefix: m
                })
            }
            return createAsyncThunk2.withTypes = function() {
                return createAsyncThunk2
            }
            ,
            createAsyncThunk2
        }();
        function unwrapResult(m) {
            if (m.meta && m.meta.rejectedWithValue)
                throw m.payload;
            if (m.error)
                throw m.error;
            return m.payload
        }
        var ev = "listenerMiddleware";
        createAction(ev + "/add"),
        createAction(ev + "/removeAll"),
        createAction(ev + "/remove"),
        "function" == typeof queueMicrotask && queueMicrotask.bind("undefined" != typeof window ? window : void 0 !== C.g ? C.g : globalThis),
        "undefined" != typeof window && window.requestAnimationFrame && window.requestAnimationFrame,
        function() {
            function t(R, C) {
                var T = m[R];
                return T ? T.enumerable = C : m[R] = T = {
                    configurable: !0,
                    enumerable: C,
                    get: function() {
                        var m = this[G];
                        return X.get(m, R)
                    },
                    set: function(m) {
                        var C = this[G];
                        X.set(C, R, m)
                    }
                },
                T
            }
            function e(m) {
                for (var R = m.length - 1; R >= 0; R--) {
                    var C = m[R][G];
                    if (!C.P)
                        switch (C.i) {
                        case 5:
                            a(C) && k(C);
                            break;
                        case 4:
                            o(C) && k(C)
                        }
                }
            }
            function o(m) {
                for (var R = m.t, C = m.k, T = Y(C), L = T.length - 1; L >= 0; L--) {
                    var U = T[L];
                    if (U !== G) {
                        var B = R[U];
                        if (void 0 === B && !u(R, U))
                            return !0;
                        var $ = C[U]
                          , V = $ && $[G];
                        if (V ? V.t !== B : !c($, B))
                            return !0
                    }
                }
                var H = !!R[G];
                return T.length !== Y(R).length + (H ? 0 : 1)
            }
            function a(m) {
                var R = m.k;
                if (R.length !== m.t.length)
                    return !0;
                var C = Object.getOwnPropertyDescriptor(R, R.length - 1);
                if (C && !C.get)
                    return !0;
                for (var T = 0; T < R.length; T++)
                    if (!R.hasOwnProperty(T))
                        return !0;
                return !1
            }
            var m = {};
            J.ES5 || (J.ES5 = {
                J: function(m, R) {
                    var C = Array.isArray(m)
                      , T = function(m, R) {
                        if (m) {
                            for (var C = Array(R.length), T = 0; T < R.length; T++)
                                Object.defineProperty(C, "" + T, t(T, !0));
                            return C
                        }
                        var L = K(R);
                        delete L[G];
                        for (var U = Y(L), B = 0; B < U.length; B++) {
                            var $ = U[B];
                            L[$] = t($, m || !!L[$].enumerable)
                        }
                        return Object.create(Object.getPrototypeOf(R), L)
                    }(C, m)
                      , L = {
                        i: C ? 5 : 4,
                        A: R ? R.A : U,
                        P: !1,
                        I: !1,
                        R: {},
                        l: R,
                        t: m,
                        k: T,
                        o: null,
                        g: !1,
                        C: !1
                    };
                    return Object.defineProperty(T, G, {
                        value: L,
                        writable: !0
                    }),
                    T
                },
                S: function(m, R, C) {
                    C ? r(R) && R[G].A === m && e(m.p) : (m.u && function n(m) {
                        if (m && "object" == typeof m) {
                            var R = m[G];
                            if (R) {
                                var C = R.t
                                  , T = R.k
                                  , L = R.R
                                  , U = R.i;
                                if (4 === U)
                                    i(T, function(m) {
                                        m !== G && (void 0 !== C[m] || u(C, m) ? L[m] || n(T[m]) : (L[m] = !0,
                                        k(R)))
                                    }),
                                    i(C, function(m) {
                                        void 0 !== T[m] || u(T, m) || (L[m] = !1,
                                        k(R))
                                    });
                                else if (5 === U) {
                                    if (a(R) && (k(R),
                                    L.length = !0),
                                    T.length < C.length)
                                        for (var B = T.length; B < C.length; B++)
                                            L[B] = !1;
                                    else
                                        for (var $ = C.length; $ < T.length; $++)
                                            L[$] = !0;
                                    for (var V = Math.min(T.length, C.length), H = 0; H < V; H++)
                                        T.hasOwnProperty(H) || (L[H] = !0),
                                        void 0 === L[H] && n(T[H])
                                }
                            }
                        }
                    }(m.p[0]),
                    e(m.p))
                },
                K: function(m) {
                    return 4 === m.i ? o(m) : a(m)
                }
            })
        }()
    },
    84063: function(m, R, C) {
        "use strict";
        var T, L = this && this.__createBinding || (Object.create ? function(m, R, C, T) {
            void 0 === T && (T = C);
            var L = Object.getOwnPropertyDescriptor(R, C);
            (!L || ("get"in L ? !R.__esModule : L.writable || L.configurable)) && (L = {
                enumerable: !0,
                get: function() {
                    return R[C]
                }
            }),
            Object.defineProperty(m, T, L)
        }
        : function(m, R, C, T) {
            void 0 === T && (T = C),
            m[T] = R[C]
        }
        ), U = this && this.__setModuleDefault || (Object.create ? function(m, R) {
            Object.defineProperty(m, "default", {
                enumerable: !0,
                value: R
            })
        }
        : function(m, R) {
            m.default = R
        }
        ), B = this && this.__importStar || function(m) {
            if (m && m.__esModule)
                return m;
            var R = {};
            if (null != m)
                for (var C in m)
                    "default" !== C && Object.prototype.hasOwnProperty.call(m, C) && L(R, m, C);
            return U(R, m),
            R
        }
        , $ = this && this.__awaiter || function(m, R, C, T) {
            return new (C || (C = Promise))(function(L, U) {
                function fulfilled(m) {
                    try {
                        step(T.next(m))
                    } catch (m) {
                        U(m)
                    }
                }
                function rejected(m) {
                    try {
                        step(T.throw(m))
                    } catch (m) {
                        U(m)
                    }
                }
                function step(m) {
                    var R;
                    m.done ? L(m.value) : ((R = m.value)instanceof C ? R : new C(function(m) {
                        m(R)
                    }
                    )).then(fulfilled, rejected)
                }
                step((T = T.apply(m, R || [])).next())
            }
            )
        }
        ;
        Object.defineProperty(R, "__esModule", {
            value: !0
        }),
        R.Auth = R.Platform = void 0;
        let V = B(C(76629))
          , H = C(47723)
          , W = "colyseus-auth-token";
        (T = R.Platform || (R.Platform = {})).ios = "ios",
        T.android = "android",
        R.Auth = class {
            constructor(m) {
                this._id = void 0,
                this.username = void 0,
                this.displayName = void 0,
                this.avatarUrl = void 0,
                this.isAnonymous = void 0,
                this.email = void 0,
                this.lang = void 0,
                this.location = void 0,
                this.timezone = void 0,
                this.metadata = void 0,
                this.devices = void 0,
                this.facebookId = void 0,
                this.twitterId = void 0,
                this.googleId = void 0,
                this.gameCenterId = void 0,
                this.steamId = void 0,
                this.friendIds = void 0,
                this.blockedUserIds = void 0,
                this.createdAt = void 0,
                this.updatedAt = void 0,
                this.token = void 0,
                this.endpoint = m.replace("ws", "http"),
                (0,
                H.getItem)(W, m=>this.token = m)
            }
            get hasToken() {
                return !!this.token
            }
            login(m={}) {
                return $(this, void 0, void 0, function*() {
                    let R = Object.assign({}, m);
                    this.hasToken && (R.token = this.token);
                    let C = yield this.request("post", "/auth", R);
                    for (let m in this.token = C.token,
                    (0,
                    H.setItem)(W, this.token),
                    C)
                        this.hasOwnProperty(m) && (this[m] = C[m]);
                    return this.registerPingService(),
                    this
                })
            }
            save() {
                return $(this, void 0, void 0, function*() {
                    return yield this.request("put", "/auth", {}, {
                        username: this.username,
                        displayName: this.displayName,
                        avatarUrl: this.avatarUrl,
                        lang: this.lang,
                        location: this.location,
                        timezone: this.timezone
                    }),
                    this
                })
            }
            getFriends() {
                return $(this, void 0, void 0, function*() {
                    return yield this.request("get", "/friends/all")
                })
            }
            getOnlineFriends() {
                return $(this, void 0, void 0, function*() {
                    return yield this.request("get", "/friends/online")
                })
            }
            getFriendRequests() {
                return $(this, void 0, void 0, function*() {
                    return yield this.request("get", "/friends/requests")
                })
            }
            sendFriendRequest(m) {
                return $(this, void 0, void 0, function*() {
                    return yield this.request("post", "/friends/requests", {
                        userId: m
                    })
                })
            }
            acceptFriendRequest(m) {
                return $(this, void 0, void 0, function*() {
                    return yield this.request("put", "/friends/requests", {
                        userId: m
                    })
                })
            }
            declineFriendRequest(m) {
                return $(this, void 0, void 0, function*() {
                    return yield this.request("del", "/friends/requests", {
                        userId: m
                    })
                })
            }
            blockUser(m) {
                return $(this, void 0, void 0, function*() {
                    return yield this.request("post", "/friends/block", {
                        userId: m
                    })
                })
            }
            unblockUser(m) {
                return $(this, void 0, void 0, function*() {
                    return yield this.request("put", "/friends/block", {
                        userId: m
                    })
                })
            }
            request(m, R, C={}, T, L={}) {
                return $(this, void 0, void 0, function*() {
                    L.Accept = "application/json",
                    this.hasToken && (L.Authorization = "Bearer " + this.token);
                    let U = [];
                    for (let m in C)
                        U.push(`${m}=${C[m]}`);
                    let B = U.length > 0 ? `?${U.join("&")}` : ""
                      , $ = {
                        headers: L
                    };
                    return T && ($.body = T),
                    (yield V[m](`${this.endpoint}${R}${B}`, $)).data
                })
            }
            logout() {
                this.token = void 0,
                (0,
                H.removeItem)(W),
                this.unregisterPingService()
            }
            registerPingService(m=15e3) {
                this.unregisterPingService(),
                this.keepOnlineInterval = setInterval(()=>this.request("get", "/auth"), m)
            }
            unregisterPingService() {
                clearInterval(this.keepOnlineInterval)
            }
        }
    },
    4705: function(m, R, C) {
        "use strict";
        var T, L = this && this.__awaiter || function(m, R, C, T) {
            return new (C || (C = Promise))(function(L, U) {
                function fulfilled(m) {
                    try {
                        step(T.next(m))
                    } catch (m) {
                        U(m)
                    }
                }
                function rejected(m) {
                    try {
                        step(T.throw(m))
                    } catch (m) {
                        U(m)
                    }
                }
                function step(m) {
                    var R;
                    m.done ? L(m.value) : ((R = m.value)instanceof C ? R : new C(function(m) {
                        m(R)
                    }
                    )).then(fulfilled, rejected)
                }
                step((T = T.apply(m, R || [])).next())
            }
            )
        }
        ;
        Object.defineProperty(R, "__esModule", {
            value: !0
        }),
        R.Client = R.MatchMakeError = void 0;
        let U = C(76629)
          , B = C(65199)
          , $ = C(68270);
        let MatchMakeError = class MatchMakeError extends Error {
            constructor(m, R) {
                super(m),
                this.code = R,
                Object.setPrototypeOf(this, MatchMakeError.prototype)
            }
        }
        ;
        R.MatchMakeError = MatchMakeError;
        let V = "undefined" != typeof window && void 0 !== (null === (T = null == window ? void 0 : window.location) || void 0 === T ? void 0 : T.hostname) ? `${window.location.protocol.replace("http", "ws")}//${window.location.hostname}${window.location.port && `:${window.location.port}`}` : "ws://127.0.0.1:2567";
        R.Client = class {
            constructor(m=V) {
                if ("string" == typeof m) {
                    let R = new URL(m)
                      , C = "https:" === R.protocol || "wss:" === R.protocol
                      , T = Number(R.port || (C ? 443 : 80));
                    this.settings = {
                        hostname: R.hostname,
                        pathname: "/" !== R.pathname ? R.pathname : "",
                        port: T,
                        secure: C
                    }
                } else
                    void 0 === m.port && (m.port = m.secure ? 443 : 80),
                    void 0 === m.pathname && (m.pathname = ""),
                    this.settings = m
            }
            joinOrCreate(m, R={}, C) {
                return L(this, void 0, void 0, function*() {
                    return yield this.createMatchMakeRequest("joinOrCreate", m, R, C)
                })
            }
            create(m, R={}, C) {
                return L(this, void 0, void 0, function*() {
                    return yield this.createMatchMakeRequest("create", m, R, C)
                })
            }
            join(m, R={}, C) {
                return L(this, void 0, void 0, function*() {
                    return yield this.createMatchMakeRequest("join", m, R, C)
                })
            }
            joinById(m, R={}, C) {
                return L(this, void 0, void 0, function*() {
                    return yield this.createMatchMakeRequest("joinById", m, R, C)
                })
            }
            reconnect(m, R) {
                return L(this, void 0, void 0, function*() {
                    if ("string" == typeof m && "string" == typeof R)
                        throw Error("DEPRECATED: .reconnect() now only accepts 'reconnectionToken' as argument.\nYou can get this token from previously connected `room.reconnectionToken`");
                    let[C,T] = m.split(":");
                    return yield this.createMatchMakeRequest("reconnect", C, {
                        reconnectionToken: T
                    }, R)
                })
            }
            getAvailableRooms(m="") {
                return L(this, void 0, void 0, function*() {
                    return (yield(0,
                    U.get)(this.getHttpEndpoint(`${m}`), {
                        headers: {
                            Accept: "application/json"
                        }
                    })).data
                })
            }
            consumeSeatReservation(m, R, C) {
                return L(this, void 0, void 0, function*() {
                    let T = this.createRoom(m.room.name, R);
                    T.roomId = m.room.roomId,
                    T.sessionId = m.sessionId;
                    let U = {
                        sessionId: T.sessionId
                    };
                    m.reconnectionToken && (U.reconnectionToken = m.reconnectionToken);
                    let $ = C || T;
                    return T.connect(this.buildEndpoint(m.room, U), m.devMode && (()=>L(this, void 0, void 0, function*() {
                        console.info(`[Colyseus devMode]: ${String.fromCodePoint(128260)} Re-establishing connection with room id '${T.roomId}'...`);
                        let C = 0
                          , retryReconnection = ()=>L(this, void 0, void 0, function*() {
                            C++;
                            try {
                                yield this.consumeSeatReservation(m, R, $),
                                console.info(`[Colyseus devMode]: ${String.fromCodePoint(9989)} Successfully re-established connection with room '${T.roomId}'`)
                            } catch (m) {
                                C < 8 ? (console.info(`[Colyseus devMode]: ${String.fromCodePoint(128260)} retrying... (${C} out of 8)`),
                                setTimeout(retryReconnection, 2e3)) : console.info(`[Colyseus devMode]: ${String.fromCodePoint(10060)} Failed to reconnect. Is your server running? Please check server logs.`)
                            }
                        });
                        setTimeout(retryReconnection, 2e3)
                    })), $),
                    new Promise((m,R)=>{
                        let onError = (m,C)=>R(new B.ServerError(m,C));
                        $.onError.once(onError),
                        $.onJoin.once(()=>{
                            $.onError.remove(onError),
                            m($)
                        }
                        )
                    }
                    )
                })
            }
            createMatchMakeRequest(m, R, C={}, T, B) {
                return L(this, void 0, void 0, function*() {
                    let L = (yield(0,
                    U.post)(this.getHttpEndpoint(`${m}/${R}`), {
                        headers: {
                            Accept: "application/json",
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify(C)
                    })).data;
                    if (L.error)
                        throw new MatchMakeError(L.error,L.code);
                    return "reconnect" === m && (L.reconnectionToken = C.reconnectionToken),
                    yield this.consumeSeatReservation(L, T, B)
                })
            }
            createRoom(m, R) {
                return new $.Room(m,R)
            }
            buildEndpoint(m, R={}) {
                let C = [];
                for (let m in R)
                    R.hasOwnProperty(m) && C.push(`${m}=${R[m]}`);
                let T = this.settings.secure ? "wss://" : "ws://";
                return m.publicAddress ? T += `${m.publicAddress}` : T += `${this.settings.hostname}${this.getEndpointPort()}${this.settings.pathname}`,
                `${T}/${m.processId}/${m.roomId}?${C.join("&")}`
            }
            getHttpEndpoint(m="") {
                return `${this.settings.secure ? "https" : "http"}://${this.settings.hostname}${this.getEndpointPort()}${this.settings.pathname}/matchmake/${m}`
            }
            getEndpointPort() {
                return 80 !== this.settings.port && 443 !== this.settings.port ? `:${this.settings.port}` : ""
            }
        }
    },
    22826: function(m, R, C) {
        "use strict";
        Object.defineProperty(R, "__esModule", {
            value: !0
        }),
        R.Connection = void 0;
        let T = C(14956);
        R.Connection = class {
            constructor() {
                this.events = {},
                this.transport = new T.WebSocketTransport(this.events)
            }
            send(m) {
                this.transport.send(m)
            }
            connect(m) {
                this.transport.connect(m)
            }
            close(m, R) {
                this.transport.close(m, R)
            }
            get isOpen() {
                return this.transport.isOpen
            }
        }
    },
    60845: function(m, R) {
        "use strict";
        var C, T;
        Object.defineProperty(R, "__esModule", {
            value: !0
        }),
        R.utf8Length = R.utf8Read = R.ErrorCode = R.Protocol = void 0,
        (C = R.Protocol || (R.Protocol = {}))[C.HANDSHAKE = 9] = "HANDSHAKE",
        C[C.JOIN_ROOM = 10] = "JOIN_ROOM",
        C[C.ERROR = 11] = "ERROR",
        C[C.LEAVE_ROOM = 12] = "LEAVE_ROOM",
        C[C.ROOM_DATA = 13] = "ROOM_DATA",
        C[C.ROOM_STATE = 14] = "ROOM_STATE",
        C[C.ROOM_STATE_PATCH = 15] = "ROOM_STATE_PATCH",
        C[C.ROOM_DATA_SCHEMA = 16] = "ROOM_DATA_SCHEMA",
        C[C.ROOM_DATA_BYTES = 17] = "ROOM_DATA_BYTES",
        (T = R.ErrorCode || (R.ErrorCode = {}))[T.MATCHMAKE_NO_HANDLER = 4210] = "MATCHMAKE_NO_HANDLER",
        T[T.MATCHMAKE_INVALID_CRITERIA = 4211] = "MATCHMAKE_INVALID_CRITERIA",
        T[T.MATCHMAKE_INVALID_ROOM_ID = 4212] = "MATCHMAKE_INVALID_ROOM_ID",
        T[T.MATCHMAKE_UNHANDLED = 4213] = "MATCHMAKE_UNHANDLED",
        T[T.MATCHMAKE_EXPIRED = 4214] = "MATCHMAKE_EXPIRED",
        T[T.AUTH_FAILED = 4215] = "AUTH_FAILED",
        T[T.APPLICATION_ERROR = 4216] = "APPLICATION_ERROR",
        R.utf8Read = function(m, R) {
            let C = m[R++];
            for (var T = "", L = 0, U = R, B = R + C; U < B; U++) {
                var $ = m[U];
                if ((128 & $) == 0) {
                    T += String.fromCharCode($);
                    continue
                }
                if ((224 & $) == 192) {
                    T += String.fromCharCode((31 & $) << 6 | 63 & m[++U]);
                    continue
                }
                if ((240 & $) == 224) {
                    T += String.fromCharCode((15 & $) << 12 | (63 & m[++U]) << 6 | (63 & m[++U]) << 0);
                    continue
                }
                if ((248 & $) == 240) {
                    (L = (7 & $) << 18 | (63 & m[++U]) << 12 | (63 & m[++U]) << 6 | (63 & m[++U]) << 0) >= 65536 ? (L -= 65536,
                    T += String.fromCharCode((L >>> 10) + 55296, (1023 & L) + 56320)) : T += String.fromCharCode(L);
                    continue
                }
                throw Error("Invalid byte " + $.toString(16))
            }
            return T
        }
        ,
        R.utf8Length = function(m="") {
            let R = 0
              , C = 0;
            for (let T = 0, L = m.length; T < L; T++)
                (R = m.charCodeAt(T)) < 128 ? C += 1 : R < 2048 ? C += 2 : R < 55296 || R >= 57344 ? C += 3 : (T++,
                C += 4);
            return C + 1
        }
    },
    68270: function(m, R, C) {
        "use strict";
        var T = this && this.__createBinding || (Object.create ? function(m, R, C, T) {
            void 0 === T && (T = C);
            var L = Object.getOwnPropertyDescriptor(R, C);
            (!L || ("get"in L ? !R.__esModule : L.writable || L.configurable)) && (L = {
                enumerable: !0,
                get: function() {
                    return R[C]
                }
            }),
            Object.defineProperty(m, T, L)
        }
        : function(m, R, C, T) {
            void 0 === T && (T = C),
            m[T] = R[C]
        }
        )
          , L = this && this.__setModuleDefault || (Object.create ? function(m, R) {
            Object.defineProperty(m, "default", {
                enumerable: !0,
                value: R
            })
        }
        : function(m, R) {
            m.default = R
        }
        )
          , U = this && this.__importStar || function(m) {
            if (m && m.__esModule)
                return m;
            var R = {};
            if (null != m)
                for (var C in m)
                    "default" !== C && Object.prototype.hasOwnProperty.call(m, C) && T(R, m, C);
            return L(R, m),
            R
        }
        ;
        Object.defineProperty(R, "__esModule", {
            value: !0
        }),
        R.Room = void 0;
        let B = U(C(59572))
          , $ = C(22826)
          , V = C(60845)
          , H = C(70944)
          , W = C(58295)
          , q = C(16976)
          , G = C(41396)
          , Z = C(65199);
        let Room = class Room {
            constructor(m, R) {
                this.onStateChange = (0,
                q.createSignal)(),
                this.onError = (0,
                q.createSignal)(),
                this.onLeave = (0,
                q.createSignal)(),
                this.onJoin = (0,
                q.createSignal)(),
                this.hasJoined = !1,
                this.onMessageHandlers = (0,
                W.createNanoEvents)(),
                this.roomId = null,
                this.name = m,
                R && (this.serializer = new ((0,
                H.getSerializer)("schema")),
                this.rootSchema = R,
                this.serializer.state = new R),
                this.onError((m,R)=>{
                    var C;
                    return null === (C = console.warn) || void 0 === C ? void 0 : C.call(console, `colyseus.js - onError => (${m}) ${R}`)
                }
                ),
                this.onLeave(()=>this.removeAllListeners())
            }
            get id() {
                return this.roomId
            }
            connect(m, R, C=this) {
                let T = new $.Connection;
                C.connection = T,
                T.events.onmessage = Room.prototype.onMessageCallback.bind(C),
                T.events.onclose = function(m) {
                    var T;
                    if (!C.hasJoined) {
                        null === (T = console.warn) || void 0 === T || T.call(console, `Room connection was closed unexpectedly (${m.code}): ${m.reason}`),
                        C.onError.invoke(m.code, m.reason);
                        return
                    }
                    m.code === Z.CloseCode.DEVMODE_RESTART && R ? R() : (C.onLeave.invoke(m.code),
                    C.destroy())
                }
                ,
                T.events.onerror = function(m) {
                    var R;
                    null === (R = console.warn) || void 0 === R || R.call(console, `Room, onError (${m.code}): ${m.reason}`),
                    C.onError.invoke(m.code, m.reason)
                }
                ,
                T.connect(m)
            }
            leave(m=!0) {
                return new Promise(R=>{
                    this.onLeave(m=>R(m)),
                    this.connection ? m ? this.connection.send([V.Protocol.LEAVE_ROOM]) : this.connection.close() : this.onLeave.invoke(Z.CloseCode.CONSENTED)
                }
                )
            }
            onMessage(m, R) {
                return this.onMessageHandlers.on(this.getMessageHandlerKey(m), R)
            }
            send(m, R) {
                let C;
                let T = [V.Protocol.ROOM_DATA];
                if ("string" == typeof m ? G.encode.string(T, m) : G.encode.number(T, m),
                void 0 !== R) {
                    let m = B.encode(R);
                    (C = new Uint8Array(T.length + m.byteLength)).set(new Uint8Array(T), 0),
                    C.set(new Uint8Array(m), T.length)
                } else
                    C = new Uint8Array(T);
                this.connection.send(C.buffer)
            }
            sendBytes(m, R) {
                let C;
                let T = [V.Protocol.ROOM_DATA_BYTES];
                "string" == typeof m ? G.encode.string(T, m) : G.encode.number(T, m),
                (C = new Uint8Array(T.length + (R.byteLength || R.length))).set(new Uint8Array(T), 0),
                C.set(new Uint8Array(R), T.length),
                this.connection.send(C.buffer)
            }
            get state() {
                return this.serializer.getState()
            }
            removeAllListeners() {
                this.onJoin.clear(),
                this.onStateChange.clear(),
                this.onError.clear(),
                this.onLeave.clear(),
                this.onMessageHandlers.events = {}
            }
            onMessageCallback(m) {
                let R = Array.from(new Uint8Array(m.data))
                  , C = R[0];
                if (C === V.Protocol.JOIN_ROOM) {
                    let m = 1
                      , C = (0,
                    V.utf8Read)(R, m);
                    if (m += (0,
                    V.utf8Length)(C),
                    this.serializerId = (0,
                    V.utf8Read)(R, m),
                    m += (0,
                    V.utf8Length)(this.serializerId),
                    !this.serializer) {
                        let m = (0,
                        H.getSerializer)(this.serializerId);
                        this.serializer = new m
                    }
                    R.length > m && this.serializer.handshake && this.serializer.handshake(R, {
                        offset: m
                    }),
                    this.reconnectionToken = `${this.roomId}:${C}`,
                    this.hasJoined = !0,
                    this.onJoin.invoke(),
                    this.connection.send([V.Protocol.JOIN_ROOM])
                } else if (C === V.Protocol.ERROR) {
                    let m = {
                        offset: 1
                    }
                      , C = G.decode.number(R, m)
                      , T = G.decode.string(R, m);
                    this.onError.invoke(C, T)
                } else if (C === V.Protocol.LEAVE_ROOM)
                    this.leave();
                else if (C === V.Protocol.ROOM_DATA_SCHEMA) {
                    let m = {
                        offset: 1
                    }
                      , C = this.serializer.getState().constructor._context
                      , T = C.get(G.decode.number(R, m))
                      , L = new T;
                    L.decode(R, m),
                    this.dispatchMessage(T, L)
                } else if (C === V.Protocol.ROOM_STATE)
                    R.shift(),
                    this.setState(R);
                else if (C === V.Protocol.ROOM_STATE_PATCH)
                    R.shift(),
                    this.patch(R);
                else if (C === V.Protocol.ROOM_DATA) {
                    let C = {
                        offset: 1
                    }
                      , T = G.decode.stringCheck(R, C) ? G.decode.string(R, C) : G.decode.number(R, C)
                      , L = R.length > C.offset ? B.decode(m.data, C.offset) : void 0;
                    this.dispatchMessage(T, L)
                } else if (C === V.Protocol.ROOM_DATA_BYTES) {
                    let m = {
                        offset: 1
                    }
                      , C = G.decode.stringCheck(R, m) ? G.decode.string(R, m) : G.decode.number(R, m);
                    this.dispatchMessage(C, new Uint8Array(R.slice(m.offset)))
                }
            }
            setState(m) {
                this.serializer.setState(m),
                this.onStateChange.invoke(this.serializer.getState())
            }
            patch(m) {
                this.serializer.patch(m),
                this.onStateChange.invoke(this.serializer.getState())
            }
            dispatchMessage(m, R) {
                var C;
                let T = this.getMessageHandlerKey(m);
                this.onMessageHandlers.events[T] ? this.onMessageHandlers.emit(T, R) : this.onMessageHandlers.events["*"] ? this.onMessageHandlers.emit("*", m, R) : null === (C = console.warn) || void 0 === C || C.call(console, `colyseus.js: onMessage() not registered for type '${m}'.`)
            }
            destroy() {
                this.serializer && this.serializer.teardown()
            }
            getMessageHandlerKey(m) {
                switch (typeof m) {
                case "function":
                    return `$${m._typeid}`;
                case "string":
                    return m;
                case "number":
                    return `i${m}`;
                default:
                    throw Error("invalid message type.")
                }
            }
        }
        ;
        R.Room = Room
    },
    47723: function(m, R) {
        "use strict";
        let C;
        function getStorage() {
            return C || (C = "undefined" != typeof cc && cc.sys && cc.sys.localStorage ? cc.sys.localStorage : "undefined" != typeof window && window.localStorage ? window.localStorage : {
                cache: {},
                setItem: function(m, R) {
                    this.cache[m] = R
                },
                getItem: function(m) {
                    this.cache[m]
                },
                removeItem: function(m) {
                    delete this.cache[m]
                }
            }),
            C
        }
        Object.defineProperty(R, "__esModule", {
            value: !0
        }),
        R.getItem = R.removeItem = R.setItem = void 0,
        R.setItem = function(m, R) {
            getStorage().setItem(m, R)
        }
        ,
        R.removeItem = function(m) {
            getStorage().removeItem(m)
        }
        ,
        R.getItem = function(m, R) {
            let C = getStorage().getItem(m);
            "undefined" != typeof Promise && C instanceof Promise ? C.then(m=>R(m)) : R(C)
        }
    },
    58295: function(m, R) {
        "use strict";
        Object.defineProperty(R, "__esModule", {
            value: !0
        }),
        R.createNanoEvents = void 0,
        R.createNanoEvents = ()=>({
            emit(m, ...R) {
                let C = this.events[m] || [];
                for (let m = 0, T = C.length; m < T; m++)
                    C[m](...R)
            },
            events: {},
            on(m, R) {
                var C;
                return (null === (C = this.events[m]) || void 0 === C ? void 0 : C.push(R)) || (this.events[m] = [R]),
                ()=>{
                    var C;
                    this.events[m] = null === (C = this.events[m]) || void 0 === C ? void 0 : C.filter(m=>R !== m)
                }
            }
        })
    },
    16976: function(m, R) {
        "use strict";
        Object.defineProperty(R, "__esModule", {
            value: !0
        }),
        R.createSignal = R.EventEmitter = void 0;
        let EventEmitter = class EventEmitter {
            constructor() {
                this.handlers = []
            }
            register(m, R=!1) {
                return this.handlers.push(m),
                this
            }
            invoke(...m) {
                this.handlers.forEach(R=>R.apply(this, m))
            }
            invokeAsync(...m) {
                return Promise.all(this.handlers.map(R=>R.apply(this, m)))
            }
            remove(m) {
                let R = this.handlers.indexOf(m);
                this.handlers[R] = this.handlers[this.handlers.length - 1],
                this.handlers.pop()
            }
            clear() {
                this.handlers = []
            }
        }
        ;
        R.EventEmitter = EventEmitter,
        R.createSignal = function() {
            let m = new EventEmitter;
            function register(R) {
                return m.register(R, this === null)
            }
            return register.once = R=>{
                let callback = function(...C) {
                    R.apply(this, C),
                    m.remove(callback)
                };
                m.register(callback)
            }
            ,
            register.remove = R=>m.remove(R),
            register.invoke = (...R)=>m.invoke(...R),
            register.invokeAsync = (...R)=>m.invokeAsync(...R),
            register.clear = ()=>m.clear(),
            register
        }
    },
    65199: function(m, R) {
        "use strict";
        var C;
        Object.defineProperty(R, "__esModule", {
            value: !0
        }),
        R.ServerError = R.CloseCode = void 0,
        (C = R.CloseCode || (R.CloseCode = {}))[C.CONSENTED = 4e3] = "CONSENTED",
        C[C.DEVMODE_RESTART = 4010] = "DEVMODE_RESTART",
        R.ServerError = class extends Error {
            constructor(m, R) {
                super(R),
                this.name = "ServerError",
                this.code = m
            }
        }
    },
    7767: function(m, R, C) {
        "use strict";
        R.mV = R.KU = void 0,
        C(21331);
        var T = C(4705);
        Object.defineProperty(R, "KU", {
            enumerable: !0,
            get: function() {
                return T.Client
            }
        }),
        C(60845),
        C(68270),
        C(84063);
        let L = C(44066);
        Object.defineProperty(R, "mV", {
            enumerable: !0,
            get: function() {
                return L.SchemaSerializer
            }
        });
        let U = C(34197)
          , B = C(70944);
        (0,
        B.registerSerializer)("schema", L.SchemaSerializer),
        (0,
        B.registerSerializer)("none", U.NoneSerializer)
    },
    21331: function() {
        ArrayBuffer.isView || (ArrayBuffer.isView = m=>null !== m && "object" == typeof m && m.buffer instanceof ArrayBuffer),
        "undefined" == typeof globalThis && "undefined" != typeof window && (window.globalThis = window)
    },
    59572: function(m, R) {
        "use strict";
        function Decoder(m, R) {
            if (this._offset = R,
            m instanceof ArrayBuffer)
                this._buffer = m,
                this._view = new DataView(this._buffer);
            else if (ArrayBuffer.isView(m))
                this._buffer = m.buffer,
                this._view = new DataView(this._buffer,m.byteOffset,m.byteLength);
            else
                throw Error("Invalid argument")
        }
        Object.defineProperty(R, "__esModule", {
            value: !0
        }),
        R.decode = R.encode = void 0,
        Decoder.prototype._array = function(m) {
            for (var R = Array(m), C = 0; C < m; C++)
                R[C] = this._parse();
            return R
        }
        ,
        Decoder.prototype._map = function(m) {
            for (var R = {}, C = 0; C < m; C++)
                R[this._parse()] = this._parse();
            return R
        }
        ,
        Decoder.prototype._str = function(m) {
            var R = function(m, R, C) {
                for (var T = "", L = 0, U = R, B = R + C; U < B; U++) {
                    var $ = m.getUint8(U);
                    if ((128 & $) == 0) {
                        T += String.fromCharCode($);
                        continue
                    }
                    if ((224 & $) == 192) {
                        T += String.fromCharCode((31 & $) << 6 | 63 & m.getUint8(++U));
                        continue
                    }
                    if ((240 & $) == 224) {
                        T += String.fromCharCode((15 & $) << 12 | (63 & m.getUint8(++U)) << 6 | (63 & m.getUint8(++U)) << 0);
                        continue
                    }
                    if ((248 & $) == 240) {
                        (L = (7 & $) << 18 | (63 & m.getUint8(++U)) << 12 | (63 & m.getUint8(++U)) << 6 | (63 & m.getUint8(++U)) << 0) >= 65536 ? (L -= 65536,
                        T += String.fromCharCode((L >>> 10) + 55296, (1023 & L) + 56320)) : T += String.fromCharCode(L);
                        continue
                    }
                    throw Error("Invalid byte " + $.toString(16))
                }
                return T
            }(this._view, this._offset, m);
            return this._offset += m,
            R
        }
        ,
        Decoder.prototype._bin = function(m) {
            var R = this._buffer.slice(this._offset, this._offset + m);
            return this._offset += m,
            R
        }
        ,
        Decoder.prototype._parse = function() {
            var m, R = this._view.getUint8(this._offset++), C = 0, T = 0, L = 0, U = 0;
            if (R < 192)
                return R < 128 ? R : R < 144 ? this._map(15 & R) : R < 160 ? this._array(15 & R) : this._str(31 & R);
            if (R > 223)
                return -((255 - R + 1) * 1);
            switch (R) {
            case 192:
                return null;
            case 194:
                return !1;
            case 195:
                return !0;
            case 196:
                return C = this._view.getUint8(this._offset),
                this._offset += 1,
                this._bin(C);
            case 197:
                return C = this._view.getUint16(this._offset),
                this._offset += 2,
                this._bin(C);
            case 198:
                return C = this._view.getUint32(this._offset),
                this._offset += 4,
                this._bin(C);
            case 199:
                if (C = this._view.getUint8(this._offset),
                T = this._view.getInt8(this._offset + 1),
                this._offset += 2,
                -1 === T) {
                    var B = this._view.getUint32(this._offset);
                    return L = this._view.getInt32(this._offset + 4),
                    U = this._view.getUint32(this._offset + 8),
                    this._offset += 12,
                    new Date((4294967296 * L + U) * 1e3 + B / 1e6)
                }
                return [T, this._bin(C)];
            case 200:
                return C = this._view.getUint16(this._offset),
                T = this._view.getInt8(this._offset + 2),
                this._offset += 3,
                [T, this._bin(C)];
            case 201:
                return C = this._view.getUint32(this._offset),
                T = this._view.getInt8(this._offset + 4),
                this._offset += 5,
                [T, this._bin(C)];
            case 202:
                return m = this._view.getFloat32(this._offset),
                this._offset += 4,
                m;
            case 203:
                return m = this._view.getFloat64(this._offset),
                this._offset += 8,
                m;
            case 204:
                return m = this._view.getUint8(this._offset),
                this._offset += 1,
                m;
            case 205:
                return m = this._view.getUint16(this._offset),
                this._offset += 2,
                m;
            case 206:
                return m = this._view.getUint32(this._offset),
                this._offset += 4,
                m;
            case 207:
                return L = 4294967296 * this._view.getUint32(this._offset),
                U = this._view.getUint32(this._offset + 4),
                this._offset += 8,
                L + U;
            case 208:
                return m = this._view.getInt8(this._offset),
                this._offset += 1,
                m;
            case 209:
                return m = this._view.getInt16(this._offset),
                this._offset += 2,
                m;
            case 210:
                return m = this._view.getInt32(this._offset),
                this._offset += 4,
                m;
            case 211:
                return L = 4294967296 * this._view.getInt32(this._offset),
                U = this._view.getUint32(this._offset + 4),
                this._offset += 8,
                L + U;
            case 212:
                if (T = this._view.getInt8(this._offset),
                this._offset += 1,
                0 === T) {
                    this._offset += 1;
                    return
                }
                return [T, this._bin(1)];
            case 213:
                return T = this._view.getInt8(this._offset),
                this._offset += 1,
                [T, this._bin(2)];
            case 214:
                if (T = this._view.getInt8(this._offset),
                this._offset += 1,
                -1 === T)
                    return m = this._view.getUint32(this._offset),
                    this._offset += 4,
                    new Date(1e3 * m);
                return [T, this._bin(4)];
            case 215:
                if (T = this._view.getInt8(this._offset),
                this._offset += 1,
                0 === T)
                    return L = 4294967296 * this._view.getInt32(this._offset),
                    U = this._view.getUint32(this._offset + 4),
                    this._offset += 8,
                    new Date(L + U);
                if (-1 === T) {
                    L = this._view.getUint32(this._offset),
                    U = this._view.getUint32(this._offset + 4),
                    this._offset += 8;
                    var $ = (3 & L) * 4294967296 + U;
                    return new Date(1e3 * $ + (L >>> 2) / 1e6)
                }
                return [T, this._bin(8)];
            case 216:
                return T = this._view.getInt8(this._offset),
                this._offset += 1,
                [T, this._bin(16)];
            case 217:
                return C = this._view.getUint8(this._offset),
                this._offset += 1,
                this._str(C);
            case 218:
                return C = this._view.getUint16(this._offset),
                this._offset += 2,
                this._str(C);
            case 219:
                return C = this._view.getUint32(this._offset),
                this._offset += 4,
                this._str(C);
            case 220:
                return C = this._view.getUint16(this._offset),
                this._offset += 2,
                this._array(C);
            case 221:
                return C = this._view.getUint32(this._offset),
                this._offset += 4,
                this._array(C);
            case 222:
                return C = this._view.getUint16(this._offset),
                this._offset += 2,
                this._map(C);
            case 223:
                return C = this._view.getUint32(this._offset),
                this._offset += 4,
                this._map(C)
            }
            throw Error("Could not parse")
        }
        ,
        R.decode = function(m, R=0) {
            var C = new Decoder(m,R)
              , T = C._parse();
            if (C._offset !== m.byteLength)
                throw Error(m.byteLength - C._offset + " trailing bytes");
            return T
        }
        ,
        R.encode = function(m) {
            var R = []
              , C = []
              , T = function _encode(m, R, C) {
                var T = typeof C
                  , L = 0
                  , U = 0
                  , B = 0
                  , $ = 0
                  , V = 0
                  , H = 0;
                if ("string" === T) {
                    if ((V = function(m) {
                        for (var R = 0, C = 0, T = 0, L = m.length; T < L; T++)
                            (R = m.charCodeAt(T)) < 128 ? C += 1 : R < 2048 ? C += 2 : R < 55296 || R >= 57344 ? C += 3 : (T++,
                            C += 4);
                        return C
                    }(C)) < 32)
                        m.push(160 | V),
                        H = 1;
                    else if (V < 256)
                        m.push(217, V),
                        H = 2;
                    else if (V < 65536)
                        m.push(218, V >> 8, V),
                        H = 3;
                    else if (V < 4294967296)
                        m.push(219, V >> 24, V >> 16, V >> 8, V),
                        H = 5;
                    else
                        throw Error("String too long");
                    return R.push({
                        _str: C,
                        _length: V,
                        _offset: m.length
                    }),
                    H + V
                }
                if ("number" === T)
                    return Math.floor(C) === C && isFinite(C) ? C >= 0 ? C < 128 ? (m.push(C),
                    1) : C < 256 ? (m.push(204, C),
                    2) : C < 65536 ? (m.push(205, C >> 8, C),
                    3) : C < 4294967296 ? (m.push(206, C >> 24, C >> 16, C >> 8, C),
                    5) : (B = C / 4294967296 >> 0,
                    $ = C >>> 0,
                    m.push(207, B >> 24, B >> 16, B >> 8, B, $ >> 24, $ >> 16, $ >> 8, $),
                    9) : C >= -32 ? (m.push(C),
                    1) : C >= -128 ? (m.push(208, C),
                    2) : C >= -32768 ? (m.push(209, C >> 8, C),
                    3) : C >= -2147483648 ? (m.push(210, C >> 24, C >> 16, C >> 8, C),
                    5) : (B = Math.floor(C / 4294967296),
                    $ = C >>> 0,
                    m.push(211, B >> 24, B >> 16, B >> 8, B, $ >> 24, $ >> 16, $ >> 8, $),
                    9) : (m.push(203),
                    R.push({
                        _float: C,
                        _length: 8,
                        _offset: m.length
                    }),
                    9);
                if ("object" === T) {
                    if (null === C)
                        return m.push(192),
                        1;
                    if (Array.isArray(C)) {
                        if ((V = C.length) < 16)
                            m.push(144 | V),
                            H = 1;
                        else if (V < 65536)
                            m.push(220, V >> 8, V),
                            H = 3;
                        else if (V < 4294967296)
                            m.push(221, V >> 24, V >> 16, V >> 8, V),
                            H = 5;
                        else
                            throw Error("Array too large");
                        for (L = 0; L < V; L++)
                            H += _encode(m, R, C[L]);
                        return H
                    }
                    if (C instanceof Date) {
                        var W = C.getTime()
                          , q = Math.floor(W / 1e3)
                          , G = (W - 1e3 * q) * 1e6;
                        return q >= 0 && G >= 0 && q <= 17179869183 ? 0 === G && q <= 4294967295 ? (m.push(214, 255, q >> 24, q >> 16, q >> 8, q),
                        6) : (B = q / 4294967296,
                        $ = 4294967295 & q,
                        m.push(215, 255, G >> 22, G >> 14, G >> 6, B, $ >> 24, $ >> 16, $ >> 8, $),
                        10) : (B = Math.floor(q / 4294967296),
                        $ = q >>> 0,
                        m.push(199, 12, 255, G >> 24, G >> 16, G >> 8, G, B >> 24, B >> 16, B >> 8, B, $ >> 24, $ >> 16, $ >> 8, $),
                        15)
                    }
                    if (C instanceof ArrayBuffer) {
                        if ((V = C.byteLength) < 256)
                            m.push(196, V),
                            H = 2;
                        else if (V < 65536)
                            m.push(197, V >> 8, V),
                            H = 3;
                        else if (V < 4294967296)
                            m.push(198, V >> 24, V >> 16, V >> 8, V),
                            H = 5;
                        else
                            throw Error("Buffer too large");
                        return R.push({
                            _bin: C,
                            _length: V,
                            _offset: m.length
                        }),
                        H + V
                    }
                    if ("function" == typeof C.toJSON)
                        return _encode(m, R, C.toJSON());
                    var Z = []
                      , Y = ""
                      , K = Object.keys(C);
                    for (L = 0,
                    U = K.length; L < U; L++)
                        void 0 !== C[Y = K[L]] && "function" != typeof C[Y] && Z.push(Y);
                    if ((V = Z.length) < 16)
                        m.push(128 | V),
                        H = 1;
                    else if (V < 65536)
                        m.push(222, V >> 8, V),
                        H = 3;
                    else if (V < 4294967296)
                        m.push(223, V >> 24, V >> 16, V >> 8, V),
                        H = 5;
                    else
                        throw Error("Object too large");
                    for (L = 0; L < V; L++)
                        H += _encode(m, R, Y = Z[L]) + _encode(m, R, C[Y]);
                    return H
                }
                if ("boolean" === T)
                    return m.push(C ? 195 : 194),
                    1;
                if ("undefined" === T)
                    return m.push(192),
                    1;
                if ("function" == typeof C.toJSON)
                    return _encode(m, R, C.toJSON());
                throw Error("Could not encode")
            }(R, C, m)
              , L = new ArrayBuffer(T)
              , U = new DataView(L)
              , B = 0
              , $ = 0
              , V = -1;
            C.length > 0 && (V = C[0]._offset);
            for (var H, W = 0, q = 0, G = 0, Z = R.length; G < Z; G++)
                if (U.setUint8($ + G, R[G]),
                G + 1 === V) {
                    if (W = (H = C[B])._length,
                    q = $ + V,
                    H._bin)
                        for (var Y = new Uint8Array(H._bin), K = 0; K < W; K++)
                            U.setUint8(q + K, Y[K]);
                    else
                        H._str ? function(m, R, C) {
                            for (var T = 0, L = 0, U = C.length; L < U; L++)
                                (T = C.charCodeAt(L)) < 128 ? m.setUint8(R++, T) : (T < 2048 ? m.setUint8(R++, 192 | T >> 6) : (T < 55296 || T >= 57344 ? m.setUint8(R++, 224 | T >> 12) : (L++,
                                T = 65536 + ((1023 & T) << 10 | 1023 & C.charCodeAt(L)),
                                m.setUint8(R++, 240 | T >> 18),
                                m.setUint8(R++, 128 | T >> 12 & 63)),
                                m.setUint8(R++, 128 | T >> 6 & 63)),
                                m.setUint8(R++, 128 | 63 & T))
                        }(U, q, H._str) : void 0 !== H._float && U.setFloat64(q, H._float);
                    B++,
                    $ += W,
                    C[B] && (V = C[B]._offset)
                }
            return L
        }
    },
    34197: function(m, R) {
        "use strict";
        Object.defineProperty(R, "__esModule", {
            value: !0
        }),
        R.NoneSerializer = void 0,
        R.NoneSerializer = class {
            setState(m) {}
            getState() {
                return null
            }
            patch(m) {}
            teardown() {}
            handshake(m) {}
        }
    },
    44066: function(m, R, C) {
        "use strict";
        Object.defineProperty(R, "__esModule", {
            value: !0
        }),
        R.SchemaSerializer = void 0;
        let T = C(41396);
        R.SchemaSerializer = class {
            setState(m) {
                return this.state.decode(m)
            }
            getState() {
                return this.state
            }
            patch(m) {
                return this.state.decode(m)
            }
            teardown() {
                var m, R;
                null === (R = null === (m = this.state) || void 0 === m ? void 0 : m.$changes) || void 0 === R || R.root.clearRefs()
            }
            handshake(m, R) {
                if (this.state) {
                    let C = new T.Reflection;
                    C.decode(m, R)
                } else
                    this.state = T.Reflection.decode(m, R)
            }
        }
    },
    70944: function(m, R) {
        "use strict";
        Object.defineProperty(R, "__esModule", {
            value: !0
        }),
        R.getSerializer = R.registerSerializer = void 0;
        let C = {};
        R.registerSerializer = function(m, R) {
            C[m] = R
        }
        ,
        R.getSerializer = function(m) {
            let R = C[m];
            if (!R)
                throw Error("missing serializer: " + m);
            return R
        }
    },
    14956: function(m, R, C) {
        "use strict";
        var T = this && this.__importDefault || function(m) {
            return m && m.__esModule ? m : {
                default: m
            }
        }
        ;
        Object.defineProperty(R, "__esModule", {
            value: !0
        }),
        R.WebSocketTransport = void 0;
        let L = T(C(46579))
          , U = globalThis.WebSocket || L.default;
        R.WebSocketTransport = class {
            constructor(m) {
                this.events = m
            }
            send(m) {
                m instanceof ArrayBuffer ? this.ws.send(m) : Array.isArray(m) && this.ws.send(new Uint8Array(m).buffer)
            }
            connect(m) {
                this.ws = new U(m,this.protocols),
                this.ws.binaryType = "arraybuffer",
                this.ws.onopen = this.events.onopen,
                this.ws.onmessage = this.events.onmessage,
                this.ws.onclose = this.events.onclose,
                this.ws.onerror = this.events.onerror
            }
            close(m, R) {
                this.ws.close(m, R)
            }
            get isOpen() {
                return this.ws.readyState === U.OPEN
            }
        }
    },
    46579: function(m) {
        "use strict";
        m.exports = function() {
            throw Error("ws does not work in the browser. Browser clients must use the native WebSocket object")
        }
    },
    8679: function(m, R, C) {
        "use strict";
        var T = C(21296)
          , L = {
            childContextTypes: !0,
            contextType: !0,
            contextTypes: !0,
            defaultProps: !0,
            displayName: !0,
            getDefaultProps: !0,
            getDerivedStateFromError: !0,
            getDerivedStateFromProps: !0,
            mixins: !0,
            propTypes: !0,
            type: !0
        }
          , U = {
            name: !0,
            length: !0,
            prototype: !0,
            caller: !0,
            callee: !0,
            arguments: !0,
            arity: !0
        }
          , B = {
            $$typeof: !0,
            compare: !0,
            defaultProps: !0,
            displayName: !0,
            propTypes: !0,
            type: !0
        }
          , $ = {};
        function getStatics(m) {
            return T.isMemo(m) ? B : $[m.$$typeof] || L
        }
        $[T.ForwardRef] = {
            $$typeof: !0,
            render: !0,
            defaultProps: !0,
            displayName: !0,
            propTypes: !0
        },
        $[T.Memo] = B;
        var V = Object.defineProperty
          , H = Object.getOwnPropertyNames
          , W = Object.getOwnPropertySymbols
          , q = Object.getOwnPropertyDescriptor
          , G = Object.getPrototypeOf
          , Z = Object.prototype;
        m.exports = function hoistNonReactStatics(m, R, C) {
            if ("string" != typeof R) {
                if (Z) {
                    var T = G(R);
                    T && T !== Z && hoistNonReactStatics(m, T, C)
                }
                var L = H(R);
                W && (L = L.concat(W(R)));
                for (var B = getStatics(m), $ = getStatics(R), Y = 0; Y < L.length; ++Y) {
                    var K = L[Y];
                    if (!U[K] && !(C && C[K]) && !($ && $[K]) && !(B && B[K])) {
                        var J = q(R, K);
                        try {
                            V(m, K, J)
                        } catch (m) {}
                    }
                }
            }
            return m
        }
    },
    96103: function(m, R) {
        "use strict";
        /** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
        var C = "function" == typeof Symbol && Symbol.for
          , T = C ? Symbol.for("react.element") : 60103
          , L = C ? Symbol.for("react.portal") : 60106
          , U = C ? Symbol.for("react.fragment") : 60107
          , B = C ? Symbol.for("react.strict_mode") : 60108
          , $ = C ? Symbol.for("react.profiler") : 60114
          , V = C ? Symbol.for("react.provider") : 60109
          , H = C ? Symbol.for("react.context") : 60110
          , W = C ? Symbol.for("react.async_mode") : 60111
          , q = C ? Symbol.for("react.concurrent_mode") : 60111
          , G = C ? Symbol.for("react.forward_ref") : 60112
          , Z = C ? Symbol.for("react.suspense") : 60113
          , Y = C ? Symbol.for("react.suspense_list") : 60120
          , K = C ? Symbol.for("react.memo") : 60115
          , J = C ? Symbol.for("react.lazy") : 60116
          , X = C ? Symbol.for("react.block") : 60121
          , Q = C ? Symbol.for("react.fundamental") : 60117
          , ee = C ? Symbol.for("react.responder") : 60118
          , et = C ? Symbol.for("react.scope") : 60119;
        function z(m) {
            if ("object" == typeof m && null !== m) {
                var R = m.$$typeof;
                switch (R) {
                case T:
                    switch (m = m.type) {
                    case W:
                    case q:
                    case U:
                    case $:
                    case B:
                    case Z:
                        return m;
                    default:
                        switch (m = m && m.$$typeof) {
                        case H:
                        case G:
                        case J:
                        case K:
                        case V:
                            return m;
                        default:
                            return R
                        }
                    }
                case L:
                    return R
                }
            }
        }
        function A(m) {
            return z(m) === q
        }
        R.AsyncMode = W,
        R.ConcurrentMode = q,
        R.ContextConsumer = H,
        R.ContextProvider = V,
        R.Element = T,
        R.ForwardRef = G,
        R.Fragment = U,
        R.Lazy = J,
        R.Memo = K,
        R.Portal = L,
        R.Profiler = $,
        R.StrictMode = B,
        R.Suspense = Z,
        R.isAsyncMode = function(m) {
            return A(m) || z(m) === W
        }
        ,
        R.isConcurrentMode = A,
        R.isContextConsumer = function(m) {
            return z(m) === H
        }
        ,
        R.isContextProvider = function(m) {
            return z(m) === V
        }
        ,
        R.isElement = function(m) {
            return "object" == typeof m && null !== m && m.$$typeof === T
        }
        ,
        R.isForwardRef = function(m) {
            return z(m) === G
        }
        ,
        R.isFragment = function(m) {
            return z(m) === U
        }
        ,
        R.isLazy = function(m) {
            return z(m) === J
        }
        ,
        R.isMemo = function(m) {
            return z(m) === K
        }
        ,
        R.isPortal = function(m) {
            return z(m) === L
        }
        ,
        R.isProfiler = function(m) {
            return z(m) === $
        }
        ,
        R.isStrictMode = function(m) {
            return z(m) === B
        }
        ,
        R.isSuspense = function(m) {
            return z(m) === Z
        }
        ,
        R.isValidElementType = function(m) {
            return "string" == typeof m || "function" == typeof m || m === U || m === q || m === $ || m === B || m === Z || m === Y || "object" == typeof m && null !== m && (m.$$typeof === J || m.$$typeof === K || m.$$typeof === V || m.$$typeof === H || m.$$typeof === G || m.$$typeof === Q || m.$$typeof === ee || m.$$typeof === et || m.$$typeof === X)
        }
        ,
        R.typeOf = z
    },
    21296: function(m, R, C) {
        "use strict";
        m.exports = C(96103)
    },
    68203: function(m, R) {
        var C = "undefined" != typeof self ? self : this
          , T = function() {
            function F() {
                this.fetch = !1,
                this.DOMException = C.DOMException
            }
            return F.prototype = C,
            new F
        }();
        (function(m) {
            var R = {
                searchParams: "URLSearchParams"in T,
                iterable: "Symbol"in T && "iterator"in Symbol,
                blob: "FileReader"in T && "Blob"in T && function() {
                    try {
                        return new Blob,
                        !0
                    } catch (m) {
                        return !1
                    }
                }(),
                formData: "FormData"in T,
                arrayBuffer: "ArrayBuffer"in T
            };
            if (R.arrayBuffer)
                var C = ["[object Int8Array]", "[object Uint8Array]", "[object Uint8ClampedArray]", "[object Int16Array]", "[object Uint16Array]", "[object Int32Array]", "[object Uint32Array]", "[object Float32Array]", "[object Float64Array]"]
                  , L = ArrayBuffer.isView || function(m) {
                    return m && C.indexOf(Object.prototype.toString.call(m)) > -1
                }
                ;
            function normalizeName(m) {
                if ("string" != typeof m && (m = String(m)),
                /[^a-z0-9\-#$%&'*+.^_`|~]/i.test(m))
                    throw TypeError("Invalid character in header field name");
                return m.toLowerCase()
            }
            function normalizeValue(m) {
                return "string" != typeof m && (m = String(m)),
                m
            }
            function iteratorFor(m) {
                var C = {
                    next: function() {
                        var R = m.shift();
                        return {
                            done: void 0 === R,
                            value: R
                        }
                    }
                };
                return R.iterable && (C[Symbol.iterator] = function() {
                    return C
                }
                ),
                C
            }
            function Headers(m) {
                this.map = {},
                m instanceof Headers ? m.forEach(function(m, R) {
                    this.append(R, m)
                }, this) : Array.isArray(m) ? m.forEach(function(m) {
                    this.append(m[0], m[1])
                }, this) : m && Object.getOwnPropertyNames(m).forEach(function(R) {
                    this.append(R, m[R])
                }, this)
            }
            function consumed(m) {
                if (m.bodyUsed)
                    return Promise.reject(TypeError("Already read"));
                m.bodyUsed = !0
            }
            function fileReaderReady(m) {
                return new Promise(function(R, C) {
                    m.onload = function() {
                        R(m.result)
                    }
                    ,
                    m.onerror = function() {
                        C(m.error)
                    }
                }
                )
            }
            function readBlobAsArrayBuffer(m) {
                var R = new FileReader
                  , C = fileReaderReady(R);
                return R.readAsArrayBuffer(m),
                C
            }
            function bufferClone(m) {
                if (m.slice)
                    return m.slice(0);
                var R = new Uint8Array(m.byteLength);
                return R.set(new Uint8Array(m)),
                R.buffer
            }
            function Body() {
                return this.bodyUsed = !1,
                this._initBody = function(m) {
                    if (this._bodyInit = m,
                    m) {
                        if ("string" == typeof m)
                            this._bodyText = m;
                        else if (R.blob && Blob.prototype.isPrototypeOf(m))
                            this._bodyBlob = m;
                        else if (R.formData && FormData.prototype.isPrototypeOf(m))
                            this._bodyFormData = m;
                        else if (R.searchParams && URLSearchParams.prototype.isPrototypeOf(m))
                            this._bodyText = m.toString();
                        else {
                            var C;
                            R.arrayBuffer && R.blob && (C = m) && DataView.prototype.isPrototypeOf(C) ? (this._bodyArrayBuffer = bufferClone(m.buffer),
                            this._bodyInit = new Blob([this._bodyArrayBuffer])) : R.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(m) || L(m)) ? this._bodyArrayBuffer = bufferClone(m) : this._bodyText = m = Object.prototype.toString.call(m)
                        }
                    } else
                        this._bodyText = "";
                    !this.headers.get("content-type") && ("string" == typeof m ? this.headers.set("content-type", "text/plain;charset=UTF-8") : this._bodyBlob && this._bodyBlob.type ? this.headers.set("content-type", this._bodyBlob.type) : R.searchParams && URLSearchParams.prototype.isPrototypeOf(m) && this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"))
                }
                ,
                R.blob && (this.blob = function() {
                    var m = consumed(this);
                    if (m)
                        return m;
                    if (this._bodyBlob)
                        return Promise.resolve(this._bodyBlob);
                    if (this._bodyArrayBuffer)
                        return Promise.resolve(new Blob([this._bodyArrayBuffer]));
                    if (!this._bodyFormData)
                        return Promise.resolve(new Blob([this._bodyText]));
                    throw Error("could not read FormData body as blob")
                }
                ,
                this.arrayBuffer = function() {
                    return this._bodyArrayBuffer ? consumed(this) || Promise.resolve(this._bodyArrayBuffer) : this.blob().then(readBlobAsArrayBuffer)
                }
                ),
                this.text = function() {
                    var m, R, C, T = consumed(this);
                    if (T)
                        return T;
                    if (this._bodyBlob)
                        return m = this._bodyBlob,
                        C = fileReaderReady(R = new FileReader),
                        R.readAsText(m),
                        C;
                    if (this._bodyArrayBuffer)
                        return Promise.resolve(function(m) {
                            for (var R = new Uint8Array(m), C = Array(R.length), T = 0; T < R.length; T++)
                                C[T] = String.fromCharCode(R[T]);
                            return C.join("")
                        }(this._bodyArrayBuffer));
                    if (!this._bodyFormData)
                        return Promise.resolve(this._bodyText);
                    throw Error("could not read FormData body as text")
                }
                ,
                R.formData && (this.formData = function() {
                    return this.text().then(decode)
                }
                ),
                this.json = function() {
                    return this.text().then(JSON.parse)
                }
                ,
                this
            }
            Headers.prototype.append = function(m, R) {
                m = normalizeName(m),
                R = normalizeValue(R);
                var C = this.map[m];
                this.map[m] = C ? C + ", " + R : R
            }
            ,
            Headers.prototype.delete = function(m) {
                delete this.map[normalizeName(m)]
            }
            ,
            Headers.prototype.get = function(m) {
                return m = normalizeName(m),
                this.has(m) ? this.map[m] : null
            }
            ,
            Headers.prototype.has = function(m) {
                return this.map.hasOwnProperty(normalizeName(m))
            }
            ,
            Headers.prototype.set = function(m, R) {
                this.map[normalizeName(m)] = normalizeValue(R)
            }
            ,
            Headers.prototype.forEach = function(m, R) {
                for (var C in this.map)
                    this.map.hasOwnProperty(C) && m.call(R, this.map[C], C, this)
            }
            ,
            Headers.prototype.keys = function() {
                var m = [];
                return this.forEach(function(R, C) {
                    m.push(C)
                }),
                iteratorFor(m)
            }
            ,
            Headers.prototype.values = function() {
                var m = [];
                return this.forEach(function(R) {
                    m.push(R)
                }),
                iteratorFor(m)
            }
            ,
            Headers.prototype.entries = function() {
                var m = [];
                return this.forEach(function(R, C) {
                    m.push([C, R])
                }),
                iteratorFor(m)
            }
            ,
            R.iterable && (Headers.prototype[Symbol.iterator] = Headers.prototype.entries);
            var U = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"];
            function Request(m, R) {
                var C, T, L = (R = R || {}).body;
                if (m instanceof Request) {
                    if (m.bodyUsed)
                        throw TypeError("Already read");
                    this.url = m.url,
                    this.credentials = m.credentials,
                    R.headers || (this.headers = new Headers(m.headers)),
                    this.method = m.method,
                    this.mode = m.mode,
                    this.signal = m.signal,
                    L || null == m._bodyInit || (L = m._bodyInit,
                    m.bodyUsed = !0)
                } else
                    this.url = String(m);
                if (this.credentials = R.credentials || this.credentials || "same-origin",
                (R.headers || !this.headers) && (this.headers = new Headers(R.headers)),
                this.method = (T = (C = R.method || this.method || "GET").toUpperCase(),
                U.indexOf(T) > -1 ? T : C),
                this.mode = R.mode || this.mode || null,
                this.signal = R.signal || this.signal,
                this.referrer = null,
                ("GET" === this.method || "HEAD" === this.method) && L)
                    throw TypeError("Body not allowed for GET or HEAD requests");
                this._initBody(L)
            }
            function decode(m) {
                var R = new FormData;
                return m.trim().split("&").forEach(function(m) {
                    if (m) {
                        var C = m.split("=")
                          , T = C.shift().replace(/\+/g, " ")
                          , L = C.join("=").replace(/\+/g, " ");
                        R.append(decodeURIComponent(T), decodeURIComponent(L))
                    }
                }),
                R
            }
            function Response(m, R) {
                R || (R = {}),
                this.type = "default",
                this.status = void 0 === R.status ? 200 : R.status,
                this.ok = this.status >= 200 && this.status < 300,
                this.statusText = "statusText"in R ? R.statusText : "OK",
                this.headers = new Headers(R.headers),
                this.url = R.url || "",
                this._initBody(m)
            }
            Request.prototype.clone = function() {
                return new Request(this,{
                    body: this._bodyInit
                })
            }
            ,
            Body.call(Request.prototype),
            Body.call(Response.prototype),
            Response.prototype.clone = function() {
                return new Response(this._bodyInit,{
                    status: this.status,
                    statusText: this.statusText,
                    headers: new Headers(this.headers),
                    url: this.url
                })
            }
            ,
            Response.error = function() {
                var m = new Response(null,{
                    status: 0,
                    statusText: ""
                });
                return m.type = "error",
                m
            }
            ;
            var B = [301, 302, 303, 307, 308];
            Response.redirect = function(m, R) {
                if (-1 === B.indexOf(R))
                    throw RangeError("Invalid status code");
                return new Response(null,{
                    status: R,
                    headers: {
                        location: m
                    }
                })
            }
            ,
            m.DOMException = T.DOMException;
            try {
                new m.DOMException
            } catch (R) {
                m.DOMException = function(m, R) {
                    this.message = m,
                    this.name = R;
                    var C = Error(m);
                    this.stack = C.stack
                }
                ,
                m.DOMException.prototype = Object.create(Error.prototype),
                m.DOMException.prototype.constructor = m.DOMException
            }
            function fetch(C, T) {
                return new Promise(function(L, U) {
                    var B = new Request(C,T);
                    if (B.signal && B.signal.aborted)
                        return U(new m.DOMException("Aborted","AbortError"));
                    var $ = new XMLHttpRequest;
                    function abortXhr() {
                        $.abort()
                    }
                    $.onload = function() {
                        var m, R, C = {
                            status: $.status,
                            statusText: $.statusText,
                            headers: (m = $.getAllResponseHeaders() || "",
                            R = new Headers,
                            m.replace(/\r?\n[\t ]+/g, " ").split(/\r?\n/).forEach(function(m) {
                                var C = m.split(":")
                                  , T = C.shift().trim();
                                if (T) {
                                    var L = C.join(":").trim();
                                    R.append(T, L)
                                }
                            }),
                            R)
                        };
                        C.url = "responseURL"in $ ? $.responseURL : C.headers.get("X-Request-URL");
                        var T = "response"in $ ? $.response : $.responseText;
                        L(new Response(T,C))
                    }
                    ,
                    $.onerror = function() {
                        U(TypeError("Network request failed"))
                    }
                    ,
                    $.ontimeout = function() {
                        U(TypeError("Network request failed"))
                    }
                    ,
                    $.onabort = function() {
                        U(new m.DOMException("Aborted","AbortError"))
                    }
                    ,
                    $.open(B.method, B.url, !0),
                    "include" === B.credentials ? $.withCredentials = !0 : "omit" === B.credentials && ($.withCredentials = !1),
                    "responseType"in $ && R.blob && ($.responseType = "blob"),
                    B.headers.forEach(function(m, R) {
                        $.setRequestHeader(R, m)
                    }),
                    B.signal && (B.signal.addEventListener("abort", abortXhr),
                    $.onreadystatechange = function() {
                        4 === $.readyState && B.signal.removeEventListener("abort", abortXhr)
                    }
                    ),
                    $.send(void 0 === B._bodyInit ? null : B._bodyInit)
                }
                )
            }
            fetch.polyfill = !0,
            T.fetch || (T.fetch = fetch,
            T.Headers = Headers,
            T.Request = Request,
            T.Response = Response),
            m.Headers = Headers,
            m.Request = Request,
            m.Response = Response,
            m.fetch = fetch,
            Object.defineProperty(m, "__esModule", {
                value: !0
            })
        }
        )({}),
        T.fetch.ponyfill = !0,
        delete T.fetch.polyfill,
        (R = T.fetch).default = T.fetch,
        R.fetch = T.fetch,
        R.Headers = T.Headers,
        R.Request = T.Request,
        R.Response = T.Response,
        m.exports = R
    },
    18552: function(m, R, C) {
        var T = C(10852)(C(55639), "DataView");
        m.exports = T
    },
    1989: function(m, R, C) {
        var T = C(51789)
          , L = C(80401)
          , U = C(57667)
          , B = C(21327)
          , $ = C(81866);
        function Hash(m) {
            var R = -1
              , C = null == m ? 0 : m.length;
            for (this.clear(); ++R < C; ) {
                var T = m[R];
                this.set(T[0], T[1])
            }
        }
        Hash.prototype.clear = T,
        Hash.prototype.delete = L,
        Hash.prototype.get = U,
        Hash.prototype.has = B,
        Hash.prototype.set = $,
        m.exports = Hash
    },
    38407: function(m, R, C) {
        var T = C(27040)
          , L = C(14125)
          , U = C(82117)
          , B = C(67518)
          , $ = C(54705);
        function ListCache(m) {
            var R = -1
              , C = null == m ? 0 : m.length;
            for (this.clear(); ++R < C; ) {
                var T = m[R];
                this.set(T[0], T[1])
            }
        }
        ListCache.prototype.clear = T,
        ListCache.prototype.delete = L,
        ListCache.prototype.get = U,
        ListCache.prototype.has = B,
        ListCache.prototype.set = $,
        m.exports = ListCache
    },
    57071: function(m, R, C) {
        var T = C(10852)(C(55639), "Map");
        m.exports = T
    },
    83369: function(m, R, C) {
        var T = C(24785)
          , L = C(11285)
          , U = C(96e3)
          , B = C(49916)
          , $ = C(95265);
        function MapCache(m) {
            var R = -1
              , C = null == m ? 0 : m.length;
            for (this.clear(); ++R < C; ) {
                var T = m[R];
                this.set(T[0], T[1])
            }
        }
        MapCache.prototype.clear = T,
        MapCache.prototype.delete = L,
        MapCache.prototype.get = U,
        MapCache.prototype.has = B,
        MapCache.prototype.set = $,
        m.exports = MapCache
    },
    53818: function(m, R, C) {
        var T = C(10852)(C(55639), "Promise");
        m.exports = T
    },
    58525: function(m, R, C) {
        var T = C(10852)(C(55639), "Set");
        m.exports = T
    },
    62705: function(m, R, C) {
        var T = C(55639).Symbol;
        m.exports = T
    },
    70577: function(m, R, C) {
        var T = C(10852)(C(55639), "WeakMap");
        m.exports = T
    },
    29932: function(m) {
        m.exports = function(m, R) {
            for (var C = -1, T = null == m ? 0 : m.length, L = Array(T); ++C < T; )
                L[C] = R(m[C], C, m);
            return L
        }
    },
    34865: function(m, R, C) {
        var T = C(89465)
          , L = C(77813)
          , U = Object.prototype.hasOwnProperty;
        m.exports = function(m, R, C) {
            var B = m[R];
            U.call(m, R) && L(B, C) && (void 0 !== C || R in m) || T(m, R, C)
        }
    },
    18470: function(m, R, C) {
        var T = C(77813);
        m.exports = function(m, R) {
            for (var C = m.length; C--; )
                if (T(m[C][0], R))
                    return C;
            return -1
        }
    },
    89465: function(m, R, C) {
        var T = C(38777);
        m.exports = function(m, R, C) {
            "__proto__" == R && T ? T(m, R, {
                configurable: !0,
                enumerable: !0,
                value: C,
                writable: !0
            }) : m[R] = C
        }
    },
    97786: function(m, R, C) {
        var T = C(71811)
          , L = C(40327);
        m.exports = function(m, R) {
            R = T(R, m);
            for (var C = 0, U = R.length; null != m && C < U; )
                m = m[L(R[C++])];
            return C && C == U ? m : void 0
        }
    },
    44239: function(m, R, C) {
        var T = C(62705)
          , L = C(89607)
          , U = C(2333)
          , B = T ? T.toStringTag : void 0;
        m.exports = function(m) {
            return null == m ? void 0 === m ? "[object Undefined]" : "[object Null]" : B && B in Object(m) ? L(m) : U(m)
        }
    },
    9454: function(m, R, C) {
        var T = C(44239)
          , L = C(37005);
        m.exports = function(m) {
            return L(m) && "[object Arguments]" == T(m)
        }
    },
    28458: function(m, R, C) {
        var T = C(23560)
          , L = C(15346)
          , U = C(13218)
          , B = C(80346)
          , $ = /^\[object .+?Constructor\]$/
          , V = Object.prototype
          , H = Function.prototype.toString
          , W = V.hasOwnProperty
          , q = RegExp("^" + H.call(W).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
        m.exports = function(m) {
            return !(!U(m) || L(m)) && (T(m) ? q : $).test(B(m))
        }
    },
    38749: function(m, R, C) {
        var T = C(44239)
          , L = C(41780)
          , U = C(37005)
          , B = {};
        B["[object Float32Array]"] = B["[object Float64Array]"] = B["[object Int8Array]"] = B["[object Int16Array]"] = B["[object Int32Array]"] = B["[object Uint8Array]"] = B["[object Uint8ClampedArray]"] = B["[object Uint16Array]"] = B["[object Uint32Array]"] = !0,
        B["[object Arguments]"] = B["[object Array]"] = B["[object ArrayBuffer]"] = B["[object Boolean]"] = B["[object DataView]"] = B["[object Date]"] = B["[object Error]"] = B["[object Function]"] = B["[object Map]"] = B["[object Number]"] = B["[object Object]"] = B["[object RegExp]"] = B["[object Set]"] = B["[object String]"] = B["[object WeakMap]"] = !1,
        m.exports = function(m) {
            return U(m) && L(m.length) && !!B[T(m)]
        }
    },
    280: function(m, R, C) {
        var T = C(25726)
          , L = C(86916)
          , U = Object.prototype.hasOwnProperty;
        m.exports = function(m) {
            if (!T(m))
                return L(m);
            var R = [];
            for (var C in Object(m))
                U.call(m, C) && "constructor" != C && R.push(C);
            return R
        }
    },
    10611: function(m, R, C) {
        var T = C(34865)
          , L = C(71811)
          , U = C(65776)
          , B = C(13218)
          , $ = C(40327);
        m.exports = function(m, R, C, V) {
            if (!B(m))
                return m;
            R = L(R, m);
            for (var H = -1, W = R.length, q = W - 1, G = m; null != G && ++H < W; ) {
                var Z = $(R[H])
                  , Y = C;
                if ("__proto__" === Z || "constructor" === Z || "prototype" === Z)
                    break;
                if (H != q) {
                    var K = G[Z];
                    void 0 === (Y = V ? V(K, Z, G) : void 0) && (Y = B(K) ? K : U(R[H + 1]) ? [] : {})
                }
                T(G, Z, Y),
                G = G[Z]
            }
            return m
        }
    },
    80531: function(m, R, C) {
        var T = C(62705)
          , L = C(29932)
          , U = C(1469)
          , B = C(33448)
          , $ = 1 / 0
          , V = T ? T.prototype : void 0
          , H = V ? V.toString : void 0;
        m.exports = function baseToString(m) {
            if ("string" == typeof m)
                return m;
            if (U(m))
                return L(m, baseToString) + "";
            if (B(m))
                return H ? H.call(m) : "";
            var R = m + "";
            return "0" == R && 1 / m == -$ ? "-0" : R
        }
    },
    27561: function(m, R, C) {
        var T = C(67990)
          , L = /^\s+/;
        m.exports = function(m) {
            return m ? m.slice(0, T(m) + 1).replace(L, "") : m
        }
    },
    7518: function(m) {
        m.exports = function(m) {
            return function(R) {
                return m(R)
            }
        }
    },
    71811: function(m, R, C) {
        var T = C(1469)
          , L = C(15403)
          , U = C(55514)
          , B = C(79833);
        m.exports = function(m, R) {
            return T(m) ? m : L(m, R) ? [m] : U(B(m))
        }
    },
    14429: function(m, R, C) {
        var T = C(55639)["__core-js_shared__"];
        m.exports = T
    },
    38777: function(m, R, C) {
        var T = C(10852)
          , L = function() {
            try {
                var m = T(Object, "defineProperty");
                return m({}, "", {}),
                m
            } catch (m) {}
        }();
        m.exports = L
    },
    31957: function(m, R, C) {
        var T = "object" == typeof C.g && C.g && C.g.Object === Object && C.g;
        m.exports = T
    },
    45050: function(m, R, C) {
        var T = C(37019);
        m.exports = function(m, R) {
            var C = m.__data__;
            return T(R) ? C["string" == typeof R ? "string" : "hash"] : C.map
        }
    },
    10852: function(m, R, C) {
        var T = C(28458)
          , L = C(47801);
        m.exports = function(m, R) {
            var C = L(m, R);
            return T(C) ? C : void 0
        }
    },
    89607: function(m, R, C) {
        var T = C(62705)
          , L = Object.prototype
          , U = L.hasOwnProperty
          , B = L.toString
          , $ = T ? T.toStringTag : void 0;
        m.exports = function(m) {
            var R = U.call(m, $)
              , C = m[$];
            try {
                m[$] = void 0;
                var T = !0
            } catch (m) {}
            var L = B.call(m);
            return T && (R ? m[$] = C : delete m[$]),
            L
        }
    },
    64160: function(m, R, C) {
        var T = C(18552)
          , L = C(57071)
          , U = C(53818)
          , B = C(58525)
          , $ = C(70577)
          , V = C(44239)
          , H = C(80346)
          , W = "[object Map]"
          , q = "[object Promise]"
          , G = "[object Set]"
          , Z = "[object WeakMap]"
          , Y = "[object DataView]"
          , K = H(T)
          , J = H(L)
          , X = H(U)
          , Q = H(B)
          , ee = H($)
          , et = V;
        (T && et(new T(new ArrayBuffer(1))) != Y || L && et(new L) != W || U && et(U.resolve()) != q || B && et(new B) != G || $ && et(new $) != Z) && (et = function(m) {
            var R = V(m)
              , C = "[object Object]" == R ? m.constructor : void 0
              , T = C ? H(C) : "";
            if (T)
                switch (T) {
                case K:
                    return Y;
                case J:
                    return W;
                case X:
                    return q;
                case Q:
                    return G;
                case ee:
                    return Z
                }
            return R
        }
        ),
        m.exports = et
    },
    47801: function(m) {
        m.exports = function(m, R) {
            return null == m ? void 0 : m[R]
        }
    },
    51789: function(m, R, C) {
        var T = C(94536);
        m.exports = function() {
            this.__data__ = T ? T(null) : {},
            this.size = 0
        }
    },
    80401: function(m) {
        m.exports = function(m) {
            var R = this.has(m) && delete this.__data__[m];
            return this.size -= R ? 1 : 0,
            R
        }
    },
    57667: function(m, R, C) {
        var T = C(94536)
          , L = Object.prototype.hasOwnProperty;
        m.exports = function(m) {
            var R = this.__data__;
            if (T) {
                var C = R[m];
                return "__lodash_hash_undefined__" === C ? void 0 : C
            }
            return L.call(R, m) ? R[m] : void 0
        }
    },
    21327: function(m, R, C) {
        var T = C(94536)
          , L = Object.prototype.hasOwnProperty;
        m.exports = function(m) {
            var R = this.__data__;
            return T ? void 0 !== R[m] : L.call(R, m)
        }
    },
    81866: function(m, R, C) {
        var T = C(94536);
        m.exports = function(m, R) {
            var C = this.__data__;
            return this.size += this.has(m) ? 0 : 1,
            C[m] = T && void 0 === R ? "__lodash_hash_undefined__" : R,
            this
        }
    },
    65776: function(m) {
        var R = /^(?:0|[1-9]\d*)$/;
        m.exports = function(m, C) {
            var T = typeof m;
            return !!(C = null == C ? 9007199254740991 : C) && ("number" == T || "symbol" != T && R.test(m)) && m > -1 && m % 1 == 0 && m < C
        }
    },
    15403: function(m, R, C) {
        var T = C(1469)
          , L = C(33448)
          , U = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/
          , B = /^\w*$/;
        m.exports = function(m, R) {
            if (T(m))
                return !1;
            var C = typeof m;
            return !!("number" == C || "symbol" == C || "boolean" == C || null == m || L(m)) || B.test(m) || !U.test(m) || null != R && m in Object(R)
        }
    },
    37019: function(m) {
        m.exports = function(m) {
            var R = typeof m;
            return "string" == R || "number" == R || "symbol" == R || "boolean" == R ? "__proto__" !== m : null === m
        }
    },
    15346: function(m, R, C) {
        var T, L = C(14429), U = (T = /[^.]+$/.exec(L && L.keys && L.keys.IE_PROTO || "")) ? "Symbol(src)_1." + T : "";
        m.exports = function(m) {
            return !!U && U in m
        }
    },
    25726: function(m) {
        var R = Object.prototype;
        m.exports = function(m) {
            var C = m && m.constructor;
            return m === ("function" == typeof C && C.prototype || R)
        }
    },
    27040: function(m) {
        m.exports = function() {
            this.__data__ = [],
            this.size = 0
        }
    },
    14125: function(m, R, C) {
        var T = C(18470)
          , L = Array.prototype.splice;
        m.exports = function(m) {
            var R = this.__data__
              , C = T(R, m);
            return !(C < 0) && (C == R.length - 1 ? R.pop() : L.call(R, C, 1),
            --this.size,
            !0)
        }
    },
    82117: function(m, R, C) {
        var T = C(18470);
        m.exports = function(m) {
            var R = this.__data__
              , C = T(R, m);
            return C < 0 ? void 0 : R[C][1]
        }
    },
    67518: function(m, R, C) {
        var T = C(18470);
        m.exports = function(m) {
            return T(this.__data__, m) > -1
        }
    },
    54705: function(m, R, C) {
        var T = C(18470);
        m.exports = function(m, R) {
            var C = this.__data__
              , L = T(C, m);
            return L < 0 ? (++this.size,
            C.push([m, R])) : C[L][1] = R,
            this
        }
    },
    24785: function(m, R, C) {
        var T = C(1989)
          , L = C(38407)
          , U = C(57071);
        m.exports = function() {
            this.size = 0,
            this.__data__ = {
                hash: new T,
                map: new (U || L),
                string: new T
            }
        }
    },
    11285: function(m, R, C) {
        var T = C(45050);
        m.exports = function(m) {
            var R = T(this, m).delete(m);
            return this.size -= R ? 1 : 0,
            R
        }
    },
    96e3: function(m, R, C) {
        var T = C(45050);
        m.exports = function(m) {
            return T(this, m).get(m)
        }
    },
    49916: function(m, R, C) {
        var T = C(45050);
        m.exports = function(m) {
            return T(this, m).has(m)
        }
    },
    95265: function(m, R, C) {
        var T = C(45050);
        m.exports = function(m, R) {
            var C = T(this, m)
              , L = C.size;
            return C.set(m, R),
            this.size += C.size == L ? 0 : 1,
            this
        }
    },
    24523: function(m, R, C) {
        var T = C(88306);
        m.exports = function(m) {
            var R = T(m, function(m) {
                return 500 === C.size && C.clear(),
                m
            })
              , C = R.cache;
            return R
        }
    },
    94536: function(m, R, C) {
        var T = C(10852)(Object, "create");
        m.exports = T
    },
    86916: function(m, R, C) {
        var T = C(5569)(Object.keys, Object);
        m.exports = T
    },
    31167: function(m, R, C) {
        m = C.nmd(m);
        var T = C(31957)
          , L = R && !R.nodeType && R
          , U = L && m && !m.nodeType && m
          , B = U && U.exports === L && T.process
          , $ = function() {
            try {
                var m = U && U.require && U.require("util").types;
                if (m)
                    return m;
                return B && B.binding && B.binding("util")
            } catch (m) {}
        }();
        m.exports = $
    },
    2333: function(m) {
        var R = Object.prototype.toString;
        m.exports = function(m) {
            return R.call(m)
        }
    },
    5569: function(m) {
        m.exports = function(m, R) {
            return function(C) {
                return m(R(C))
            }
        }
    },
    55639: function(m, R, C) {
        var T = C(31957)
          , L = "object" == typeof self && self && self.Object === Object && self
          , U = T || L || Function("return this")();
        m.exports = U
    },
    55514: function(m, R, C) {
        var T = C(24523)
          , L = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g
          , U = /\\(\\)?/g
          , B = T(function(m) {
            var R = [];
            return 46 === m.charCodeAt(0) && R.push(""),
            m.replace(L, function(m, C, T, L) {
                R.push(T ? L.replace(U, "$1") : C || m)
            }),
            R
        });
        m.exports = B
    },
    40327: function(m, R, C) {
        var T = C(33448)
          , L = 1 / 0;
        m.exports = function(m) {
            if ("string" == typeof m || T(m))
                return m;
            var R = m + "";
            return "0" == R && 1 / m == -L ? "-0" : R
        }
    },
    80346: function(m) {
        var R = Function.prototype.toString;
        m.exports = function(m) {
            if (null != m) {
                try {
                    return R.call(m)
                } catch (m) {}
                try {
                    return m + ""
                } catch (m) {}
            }
            return ""
        }
    },
    67990: function(m) {
        var R = /\s/;
        m.exports = function(m) {
            for (var C = m.length; C-- && R.test(m.charAt(C)); )
                ;
            return C
        }
    },
    23279: function(m, R, C) {
        var T = C(13218)
          , L = C(7771)
          , U = C(14841)
          , B = Math.max
          , $ = Math.min;
        m.exports = function(m, R, C) {
            var V, H, W, q, G, Z, Y = 0, K = !1, J = !1, X = !0;
            if ("function" != typeof m)
                throw TypeError("Expected a function");
            function invokeFunc(R) {
                var C = V
                  , T = H;
                return V = H = void 0,
                Y = R,
                q = m.apply(T, C)
            }
            function shouldInvoke(m) {
                var C = m - Z
                  , T = m - Y;
                return void 0 === Z || C >= R || C < 0 || J && T >= W
            }
            function timerExpired() {
                var m, C, T, U = L();
                if (shouldInvoke(U))
                    return trailingEdge(U);
                G = setTimeout(timerExpired, (m = U - Z,
                C = U - Y,
                T = R - m,
                J ? $(T, W - C) : T))
            }
            function trailingEdge(m) {
                return (G = void 0,
                X && V) ? invokeFunc(m) : (V = H = void 0,
                q)
            }
            function debounced() {
                var m, C = L(), T = shouldInvoke(C);
                if (V = arguments,
                H = this,
                Z = C,
                T) {
                    if (void 0 === G)
                        return Y = m = Z,
                        G = setTimeout(timerExpired, R),
                        K ? invokeFunc(m) : q;
                    if (J)
                        return clearTimeout(G),
                        G = setTimeout(timerExpired, R),
                        invokeFunc(Z)
                }
                return void 0 === G && (G = setTimeout(timerExpired, R)),
                q
            }
            return R = U(R) || 0,
            T(C) && (K = !!C.leading,
            W = (J = "maxWait"in C) ? B(U(C.maxWait) || 0, R) : W,
            X = "trailing"in C ? !!C.trailing : X),
            debounced.cancel = function() {
                void 0 !== G && clearTimeout(G),
                Y = 0,
                V = Z = H = G = void 0
            }
            ,
            debounced.flush = function() {
                return void 0 === G ? q : trailingEdge(L())
            }
            ,
            debounced
        }
    },
    77813: function(m) {
        m.exports = function(m, R) {
            return m === R || m != m && R != R
        }
    },
    27361: function(m, R, C) {
        var T = C(97786);
        m.exports = function(m, R, C) {
            var L = null == m ? void 0 : T(m, R);
            return void 0 === L ? C : L
        }
    },
    35694: function(m, R, C) {
        var T = C(9454)
          , L = C(37005)
          , U = Object.prototype
          , B = U.hasOwnProperty
          , $ = U.propertyIsEnumerable
          , V = T(function() {
            return arguments
        }()) ? T : function(m) {
            return L(m) && B.call(m, "callee") && !$.call(m, "callee")
        }
        ;
        m.exports = V
    },
    1469: function(m) {
        var R = Array.isArray;
        m.exports = R
    },
    98612: function(m, R, C) {
        var T = C(23560)
          , L = C(41780);
        m.exports = function(m) {
            return null != m && L(m.length) && !T(m)
        }
    },
    44144: function(m, R, C) {
        m = C.nmd(m);
        var T = C(55639)
          , L = C(95062)
          , U = R && !R.nodeType && R
          , B = U && m && !m.nodeType && m
          , $ = B && B.exports === U ? T.Buffer : void 0
          , V = $ ? $.isBuffer : void 0;
        m.exports = V || L
    },
    41609: function(m, R, C) {
        var T = C(280)
          , L = C(64160)
          , U = C(35694)
          , B = C(1469)
          , $ = C(98612)
          , V = C(44144)
          , H = C(25726)
          , W = C(36719)
          , q = Object.prototype.hasOwnProperty;
        m.exports = function(m) {
            if (null == m)
                return !0;
            if ($(m) && (B(m) || "string" == typeof m || "function" == typeof m.splice || V(m) || W(m) || U(m)))
                return !m.length;
            var R = L(m);
            if ("[object Map]" == R || "[object Set]" == R)
                return !m.size;
            if (H(m))
                return !T(m).length;
            for (var C in m)
                if (q.call(m, C))
                    return !1;
            return !0
        }
    },
    23560: function(m, R, C) {
        var T = C(44239)
          , L = C(13218);
        m.exports = function(m) {
            if (!L(m))
                return !1;
            var R = T(m);
            return "[object Function]" == R || "[object GeneratorFunction]" == R || "[object AsyncFunction]" == R || "[object Proxy]" == R
        }
    },
    41780: function(m) {
        m.exports = function(m) {
            return "number" == typeof m && m > -1 && m % 1 == 0 && m <= 9007199254740991
        }
    },
    13218: function(m) {
        m.exports = function(m) {
            var R = typeof m;
            return null != m && ("object" == R || "function" == R)
        }
    },
    37005: function(m) {
        m.exports = function(m) {
            return null != m && "object" == typeof m
        }
    },
    33448: function(m, R, C) {
        var T = C(44239)
          , L = C(37005);
        m.exports = function(m) {
            return "symbol" == typeof m || L(m) && "[object Symbol]" == T(m)
        }
    },
    36719: function(m, R, C) {
        var T = C(38749)
          , L = C(7518)
          , U = C(31167)
          , B = U && U.isTypedArray
          , $ = B ? L(B) : T;
        m.exports = $
    },
    96486: function(m, R, C) {
        var T;
        m = C.nmd(m),
        (function() {
            var L, U = "Expected a function", B = "__lodash_hash_undefined__", $ = "__lodash_placeholder__", V = 1 / 0, H = 0 / 0, W = [["ary", 128], ["bind", 1], ["bindKey", 2], ["curry", 8], ["curryRight", 16], ["flip", 512], ["partial", 32], ["partialRight", 64], ["rearg", 256]], q = "[object Arguments]", G = "[object Array]", Z = "[object Boolean]", Y = "[object Date]", K = "[object Error]", J = "[object Function]", X = "[object GeneratorFunction]", Q = "[object Map]", ee = "[object Number]", et = "[object Object]", er = "[object Promise]", en = "[object RegExp]", eo = "[object Set]", ei = "[object String]", ea = "[object Symbol]", es = "[object WeakMap]", el = "[object ArrayBuffer]", ec = "[object DataView]", eu = "[object Float32Array]", ef = "[object Float64Array]", ed = "[object Int8Array]", ep = "[object Int16Array]", eh = "[object Int32Array]", eg = "[object Uint8Array]", em = "[object Uint8ClampedArray]", ey = "[object Uint16Array]", ev = "[object Uint32Array]", eb = /\b__p \+= '';/g, eE = /\b(__p \+=) '' \+/g, e_ = /(__e\(.*?\)|\b__t\)) \+\n'';/g, eS = /&(?:amp|lt|gt|quot|#39);/g, eA = /[&<>"']/g, eO = RegExp(eS.source), ew = RegExp(eA.source), eI = /<%-([\s\S]+?)%>/g, eP = /<%([\s\S]+?)%>/g, ek = /<%=([\s\S]+?)%>/g, eR = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, eC = /^\w*$/, eT = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, ex = /[\\^$.*+?()[\]{}|]/g, eL = RegExp(ex.source), eN = /^\s+/, eM = /\s/, ej = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, eD = /\{\n\/\* \[wrapped with (.+)\] \*/, eU = /,? & /, eB = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g, e$ = /[()=,{}\[\]\/\s]/, eF = /\\(\\)?/g, eV = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g, ez = /\w*$/, eH = /^[-+]0x[0-9a-f]+$/i, eW = /^0b[01]+$/i, eG = /^\[object .+?Constructor\]$/, eZ = /^0o[0-7]+$/i, eY = /^(?:0|[1-9]\d*)$/, eK = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g, eJ = /($^)/, eX = /['\n\r\u2028\u2029\\]/g, eQ = "\ud800-\udfff", e0 = "\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff", e1 = "\\u2700-\\u27bf", e2 = "a-z\\xdf-\\xf6\\xf8-\\xff", e3 = "A-Z\\xc0-\\xd6\\xd8-\\xde", e4 = "\\ufe0e\\ufe0f", e6 = "\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", e8 = "['’]", e5 = "[" + e6 + "]", e9 = "[" + e0 + "]", e7 = "[" + e2 + "]", te = "[^" + eQ + e6 + "\\d+" + e1 + e2 + e3 + "]", tt = "\ud83c[\udffb-\udfff]", tr = "[^" + eQ + "]", tn = "(?:\ud83c[\udde6-\uddff]){2}", to = "[\ud800-\udbff][\udc00-\udfff]", ti = "[" + e3 + "]", ta = "\\u200d", ts = "(?:" + e7 + "|" + te + ")", tl = "(?:" + e8 + "(?:d|ll|m|re|s|t|ve))?", tc = "(?:" + e8 + "(?:D|LL|M|RE|S|T|VE))?", tu = "(?:" + e9 + "|" + tt + ")?", tf = "[" + e4 + "]?", td = "(?:" + ta + "(?:" + [tr, tn, to].join("|") + ")" + tf + tu + ")*", tp = tf + tu + td, th = "(?:" + ["[" + e1 + "]", tn, to].join("|") + ")" + tp, tg = "(?:" + [tr + e9 + "?", e9, tn, to, "[" + eQ + "]"].join("|") + ")", tm = RegExp(e8, "g"), ty = RegExp(e9, "g"), tv = RegExp(tt + "(?=" + tt + ")|" + tg + tp, "g"), tb = RegExp([ti + "?" + e7 + "+" + tl + "(?=" + [e5, ti, "$"].join("|") + ")", "(?:" + ti + "|" + te + ")+" + tc + "(?=" + [e5, ti + ts, "$"].join("|") + ")", ti + "?" + ts + "+" + tl, ti + "+" + tc, "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", "\\d+", th].join("|"), "g"), tE = RegExp("[" + ta + eQ + e0 + e4 + "]"), t_ = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/, tS = ["Array", "Buffer", "DataView", "Date", "Error", "Float32Array", "Float64Array", "Function", "Int8Array", "Int16Array", "Int32Array", "Map", "Math", "Object", "Promise", "RegExp", "Set", "String", "Symbol", "TypeError", "Uint8Array", "Uint8ClampedArray", "Uint16Array", "Uint32Array", "WeakMap", "_", "clearTimeout", "isFinite", "parseInt", "setTimeout"], tA = -1, tO = {};
            tO[eu] = tO[ef] = tO[ed] = tO[ep] = tO[eh] = tO[eg] = tO[em] = tO[ey] = tO[ev] = !0,
            tO[q] = tO[G] = tO[el] = tO[Z] = tO[ec] = tO[Y] = tO[K] = tO[J] = tO[Q] = tO[ee] = tO[et] = tO[en] = tO[eo] = tO[ei] = tO[es] = !1;
            var tw = {};
            tw[q] = tw[G] = tw[el] = tw[ec] = tw[Z] = tw[Y] = tw[eu] = tw[ef] = tw[ed] = tw[ep] = tw[eh] = tw[Q] = tw[ee] = tw[et] = tw[en] = tw[eo] = tw[ei] = tw[ea] = tw[eg] = tw[em] = tw[ey] = tw[ev] = !0,
            tw[K] = tw[J] = tw[es] = !1;
            var tI = {
                "\\": "\\",
                "'": "'",
                "\n": "n",
                "\r": "r",
                "\u2028": "u2028",
                "\u2029": "u2029"
            }
              , tP = parseFloat
              , tk = parseInt
              , tR = "object" == typeof C.g && C.g && C.g.Object === Object && C.g
              , tC = "object" == typeof self && self && self.Object === Object && self
              , tT = tR || tC || Function("return this")()
              , tx = R && !R.nodeType && R
              , tL = tx && m && !m.nodeType && m
              , tN = tL && tL.exports === tx
              , tM = tN && tR.process
              , tj = function() {
                try {
                    var m = tL && tL.require && tL.require("util").types;
                    if (m)
                        return m;
                    return tM && tM.binding && tM.binding("util")
                } catch (m) {}
            }()
              , tD = tj && tj.isArrayBuffer
              , tU = tj && tj.isDate
              , tB = tj && tj.isMap
              , t$ = tj && tj.isRegExp
              , tF = tj && tj.isSet
              , tV = tj && tj.isTypedArray;
            function apply(m, R, C) {
                switch (C.length) {
                case 0:
                    return m.call(R);
                case 1:
                    return m.call(R, C[0]);
                case 2:
                    return m.call(R, C[0], C[1]);
                case 3:
                    return m.call(R, C[0], C[1], C[2])
                }
                return m.apply(R, C)
            }
            function arrayAggregator(m, R, C, T) {
                for (var L = -1, U = null == m ? 0 : m.length; ++L < U; ) {
                    var B = m[L];
                    R(T, B, C(B), m)
                }
                return T
            }
            function arrayEach(m, R) {
                for (var C = -1, T = null == m ? 0 : m.length; ++C < T && !1 !== R(m[C], C, m); )
                    ;
                return m
            }
            function arrayEvery(m, R) {
                for (var C = -1, T = null == m ? 0 : m.length; ++C < T; )
                    if (!R(m[C], C, m))
                        return !1;
                return !0
            }
            function arrayFilter(m, R) {
                for (var C = -1, T = null == m ? 0 : m.length, L = 0, U = []; ++C < T; ) {
                    var B = m[C];
                    R(B, C, m) && (U[L++] = B)
                }
                return U
            }
            function arrayIncludes(m, R) {
                return !!(null == m ? 0 : m.length) && baseIndexOf(m, R, 0) > -1
            }
            function arrayIncludesWith(m, R, C) {
                for (var T = -1, L = null == m ? 0 : m.length; ++T < L; )
                    if (C(R, m[T]))
                        return !0;
                return !1
            }
            function arrayMap(m, R) {
                for (var C = -1, T = null == m ? 0 : m.length, L = Array(T); ++C < T; )
                    L[C] = R(m[C], C, m);
                return L
            }
            function arrayPush(m, R) {
                for (var C = -1, T = R.length, L = m.length; ++C < T; )
                    m[L + C] = R[C];
                return m
            }
            function arrayReduce(m, R, C, T) {
                var L = -1
                  , U = null == m ? 0 : m.length;
                for (T && U && (C = m[++L]); ++L < U; )
                    C = R(C, m[L], L, m);
                return C
            }
            function arrayReduceRight(m, R, C, T) {
                var L = null == m ? 0 : m.length;
                for (T && L && (C = m[--L]); L--; )
                    C = R(C, m[L], L, m);
                return C
            }
            function arraySome(m, R) {
                for (var C = -1, T = null == m ? 0 : m.length; ++C < T; )
                    if (R(m[C], C, m))
                        return !0;
                return !1
            }
            var tz = baseProperty("length");
            function baseFindKey(m, R, C) {
                var T;
                return C(m, function(m, C, L) {
                    if (R(m, C, L))
                        return T = C,
                        !1
                }),
                T
            }
            function baseFindIndex(m, R, C, T) {
                for (var L = m.length, U = C + (T ? 1 : -1); T ? U-- : ++U < L; )
                    if (R(m[U], U, m))
                        return U;
                return -1
            }
            function baseIndexOf(m, R, C) {
                return R == R ? function(m, R, C) {
                    for (var T = C - 1, L = m.length; ++T < L; )
                        if (m[T] === R)
                            return T;
                    return -1
                }(m, R, C) : baseFindIndex(m, baseIsNaN, C)
            }
            function baseIndexOfWith(m, R, C, T) {
                for (var L = C - 1, U = m.length; ++L < U; )
                    if (T(m[L], R))
                        return L;
                return -1
            }
            function baseIsNaN(m) {
                return m != m
            }
            function baseMean(m, R) {
                var C = null == m ? 0 : m.length;
                return C ? baseSum(m, R) / C : H
            }
            function baseProperty(m) {
                return function(R) {
                    return null == R ? L : R[m]
                }
            }
            function basePropertyOf(m) {
                return function(R) {
                    return null == m ? L : m[R]
                }
            }
            function baseReduce(m, R, C, T, L) {
                return L(m, function(m, L, U) {
                    C = T ? (T = !1,
                    m) : R(C, m, L, U)
                }),
                C
            }
            function baseSum(m, R) {
                for (var C, T = -1, U = m.length; ++T < U; ) {
                    var B = R(m[T]);
                    L !== B && (C = L === C ? B : C + B)
                }
                return C
            }
            function baseTimes(m, R) {
                for (var C = -1, T = Array(m); ++C < m; )
                    T[C] = R(C);
                return T
            }
            function baseTrim(m) {
                return m ? m.slice(0, trimmedEndIndex(m) + 1).replace(eN, "") : m
            }
            function baseUnary(m) {
                return function(R) {
                    return m(R)
                }
            }
            function baseValues(m, R) {
                return arrayMap(R, function(R) {
                    return m[R]
                })
            }
            function cacheHas(m, R) {
                return m.has(R)
            }
            function charsStartIndex(m, R) {
                for (var C = -1, T = m.length; ++C < T && baseIndexOf(R, m[C], 0) > -1; )
                    ;
                return C
            }
            function charsEndIndex(m, R) {
                for (var C = m.length; C-- && baseIndexOf(R, m[C], 0) > -1; )
                    ;
                return C
            }
            var tH = basePropertyOf({
                À: "A",
                Á: "A",
                Â: "A",
                Ã: "A",
                Ä: "A",
                Å: "A",
                à: "a",
                á: "a",
                â: "a",
                ã: "a",
                ä: "a",
                å: "a",
                Ç: "C",
                ç: "c",
                Ð: "D",
                ð: "d",
                È: "E",
                É: "E",
                Ê: "E",
                Ë: "E",
                è: "e",
                é: "e",
                ê: "e",
                ë: "e",
                Ì: "I",
                Í: "I",
                Î: "I",
                Ï: "I",
                ì: "i",
                í: "i",
                î: "i",
                ï: "i",
                Ñ: "N",
                ñ: "n",
                Ò: "O",
                Ó: "O",
                Ô: "O",
                Õ: "O",
                Ö: "O",
                Ø: "O",
                ò: "o",
                ó: "o",
                ô: "o",
                õ: "o",
                ö: "o",
                ø: "o",
                Ù: "U",
                Ú: "U",
                Û: "U",
                Ü: "U",
                ù: "u",
                ú: "u",
                û: "u",
                ü: "u",
                Ý: "Y",
                ý: "y",
                ÿ: "y",
                Æ: "Ae",
                æ: "ae",
                Þ: "Th",
                þ: "th",
                ß: "ss",
                Ā: "A",
                Ă: "A",
                Ą: "A",
                ā: "a",
                ă: "a",
                ą: "a",
                Ć: "C",
                Ĉ: "C",
                Ċ: "C",
                Č: "C",
                ć: "c",
                ĉ: "c",
                ċ: "c",
                č: "c",
                Ď: "D",
                Đ: "D",
                ď: "d",
                đ: "d",
                Ē: "E",
                Ĕ: "E",
                Ė: "E",
                Ę: "E",
                Ě: "E",
                ē: "e",
                ĕ: "e",
                ė: "e",
                ę: "e",
                ě: "e",
                Ĝ: "G",
                Ğ: "G",
                Ġ: "G",
                Ģ: "G",
                ĝ: "g",
                ğ: "g",
                ġ: "g",
                ģ: "g",
                Ĥ: "H",
                Ħ: "H",
                ĥ: "h",
                ħ: "h",
                Ĩ: "I",
                Ī: "I",
                Ĭ: "I",
                Į: "I",
                İ: "I",
                ĩ: "i",
                ī: "i",
                ĭ: "i",
                į: "i",
                ı: "i",
                Ĵ: "J",
                ĵ: "j",
                Ķ: "K",
                ķ: "k",
                ĸ: "k",
                Ĺ: "L",
                Ļ: "L",
                Ľ: "L",
                Ŀ: "L",
                Ł: "L",
                ĺ: "l",
                ļ: "l",
                ľ: "l",
                ŀ: "l",
                ł: "l",
                Ń: "N",
                Ņ: "N",
                Ň: "N",
                Ŋ: "N",
                ń: "n",
                ņ: "n",
                ň: "n",
                ŋ: "n",
                Ō: "O",
                Ŏ: "O",
                Ő: "O",
                ō: "o",
                ŏ: "o",
                ő: "o",
                Ŕ: "R",
                Ŗ: "R",
                Ř: "R",
                ŕ: "r",
                ŗ: "r",
                ř: "r",
                Ś: "S",
                Ŝ: "S",
                Ş: "S",
                Š: "S",
                ś: "s",
                ŝ: "s",
                ş: "s",
                š: "s",
                Ţ: "T",
                Ť: "T",
                Ŧ: "T",
                ţ: "t",
                ť: "t",
                ŧ: "t",
                Ũ: "U",
                Ū: "U",
                Ŭ: "U",
                Ů: "U",
                Ű: "U",
                Ų: "U",
                ũ: "u",
                ū: "u",
                ŭ: "u",
                ů: "u",
                ű: "u",
                ų: "u",
                Ŵ: "W",
                ŵ: "w",
                Ŷ: "Y",
                ŷ: "y",
                Ÿ: "Y",
                Ź: "Z",
                Ż: "Z",
                Ž: "Z",
                ź: "z",
                ż: "z",
                ž: "z",
                Ĳ: "IJ",
                ĳ: "ij",
                Œ: "Oe",
                œ: "oe",
                ŉ: "'n",
                ſ: "s"
            })
              , tW = basePropertyOf({
                "&": "&amp;",
                "<": "&lt;",
                ">": "&gt;",
                '"': "&quot;",
                "'": "&#39;"
            });
            function escapeStringChar(m) {
                return "\\" + tI[m]
            }
            function hasUnicode(m) {
                return tE.test(m)
            }
            function mapToArray(m) {
                var R = -1
                  , C = Array(m.size);
                return m.forEach(function(m, T) {
                    C[++R] = [T, m]
                }),
                C
            }
            function overArg(m, R) {
                return function(C) {
                    return m(R(C))
                }
            }
            function replaceHolders(m, R) {
                for (var C = -1, T = m.length, L = 0, U = []; ++C < T; ) {
                    var B = m[C];
                    (B === R || B === $) && (m[C] = $,
                    U[L++] = C)
                }
                return U
            }
            function setToArray(m) {
                var R = -1
                  , C = Array(m.size);
                return m.forEach(function(m) {
                    C[++R] = m
                }),
                C
            }
            function stringSize(m) {
                return hasUnicode(m) ? function(m) {
                    for (var R = tv.lastIndex = 0; tv.test(m); )
                        ++R;
                    return R
                }(m) : tz(m)
            }
            function stringToArray(m) {
                return hasUnicode(m) ? m.match(tv) || [] : m.split("")
            }
            function trimmedEndIndex(m) {
                for (var R = m.length; R-- && eM.test(m.charAt(R)); )
                    ;
                return R
            }
            var tq = basePropertyOf({
                "&amp;": "&",
                "&lt;": "<",
                "&gt;": ">",
                "&quot;": '"',
                "&#39;": "'"
            })
              , tG = function runInContext(m) {
                var R, C, T, eM, eQ = (m = null == m ? tT : tG.defaults(tT.Object(), m, tG.pick(tT, tS))).Array, e0 = m.Date, e1 = m.Error, e2 = m.Function, e3 = m.Math, e4 = m.Object, e6 = m.RegExp, e8 = m.String, e5 = m.TypeError, e9 = eQ.prototype, e7 = e2.prototype, te = e4.prototype, tt = m["__core-js_shared__"], tr = e7.toString, tn = te.hasOwnProperty, to = 0, ti = (R = /[^.]+$/.exec(tt && tt.keys && tt.keys.IE_PROTO || "")) ? "Symbol(src)_1." + R : "", ta = te.toString, ts = tr.call(e4), tl = tT._, tc = e6("^" + tr.call(tn).replace(ex, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"), tu = tN ? m.Buffer : L, tf = m.Symbol, td = m.Uint8Array, tp = tu ? tu.allocUnsafe : L, th = overArg(e4.getPrototypeOf, e4), tg = e4.create, tv = te.propertyIsEnumerable, tE = e9.splice, tI = tf ? tf.isConcatSpreadable : L, tR = tf ? tf.iterator : L, tC = tf ? tf.toStringTag : L, tx = function() {
                    try {
                        var m = getNative(e4, "defineProperty");
                        return m({}, "", {}),
                        m
                    } catch (m) {}
                }(), tL = m.clearTimeout !== tT.clearTimeout && m.clearTimeout, tM = e0 && e0.now !== tT.Date.now && e0.now, tj = m.setTimeout !== tT.setTimeout && m.setTimeout, tz = e3.ceil, tZ = e3.floor, tY = e4.getOwnPropertySymbols, tK = tu ? tu.isBuffer : L, tJ = m.isFinite, tX = e9.join, tQ = overArg(e4.keys, e4), t0 = e3.max, t1 = e3.min, t2 = e0.now, t3 = m.parseInt, t4 = e3.random, t6 = e9.reverse, t8 = getNative(m, "DataView"), t5 = getNative(m, "Map"), t9 = getNative(m, "Promise"), t7 = getNative(m, "Set"), re = getNative(m, "WeakMap"), rt = getNative(e4, "create"), rr = re && new re, rn = {}, ro = toSource(t8), ri = toSource(t5), ra = toSource(t9), rs = toSource(t7), rl = toSource(re), rc = tf ? tf.prototype : L, ru = rc ? rc.valueOf : L, rf = rc ? rc.toString : L;
                function lodash(m) {
                    if (isObjectLike(m) && !no(m) && !(m instanceof LazyWrapper)) {
                        if (m instanceof LodashWrapper)
                            return m;
                        if (tn.call(m, "__wrapped__"))
                            return wrapperClone(m)
                    }
                    return new LodashWrapper(m)
                }
                var rd = function() {
                    function object() {}
                    return function(m) {
                        if (!isObject(m))
                            return {};
                        if (tg)
                            return tg(m);
                        object.prototype = m;
                        var R = new object;
                        return object.prototype = L,
                        R
                    }
                }();
                function baseLodash() {}
                function LodashWrapper(m, R) {
                    this.__wrapped__ = m,
                    this.__actions__ = [],
                    this.__chain__ = !!R,
                    this.__index__ = 0,
                    this.__values__ = L
                }
                function LazyWrapper(m) {
                    this.__wrapped__ = m,
                    this.__actions__ = [],
                    this.__dir__ = 1,
                    this.__filtered__ = !1,
                    this.__iteratees__ = [],
                    this.__takeCount__ = 4294967295,
                    this.__views__ = []
                }
                function Hash(m) {
                    var R = -1
                      , C = null == m ? 0 : m.length;
                    for (this.clear(); ++R < C; ) {
                        var T = m[R];
                        this.set(T[0], T[1])
                    }
                }
                function ListCache(m) {
                    var R = -1
                      , C = null == m ? 0 : m.length;
                    for (this.clear(); ++R < C; ) {
                        var T = m[R];
                        this.set(T[0], T[1])
                    }
                }
                function MapCache(m) {
                    var R = -1
                      , C = null == m ? 0 : m.length;
                    for (this.clear(); ++R < C; ) {
                        var T = m[R];
                        this.set(T[0], T[1])
                    }
                }
                function SetCache(m) {
                    var R = -1
                      , C = null == m ? 0 : m.length;
                    for (this.__data__ = new MapCache; ++R < C; )
                        this.add(m[R])
                }
                function Stack(m) {
                    var R = this.__data__ = new ListCache(m);
                    this.size = R.size
                }
                function arrayLikeKeys(m, R) {
                    var C = no(m)
                      , T = !C && nn(m)
                      , L = !C && !T && na(m)
                      , U = !C && !T && !L && nf(m)
                      , B = C || T || L || U
                      , $ = B ? baseTimes(m.length, e8) : []
                      , V = $.length;
                    for (var H in m)
                        (R || tn.call(m, H)) && !(B && ("length" == H || L && ("offset" == H || "parent" == H) || U && ("buffer" == H || "byteLength" == H || "byteOffset" == H) || isIndex(H, V))) && $.push(H);
                    return $
                }
                function arraySample(m) {
                    var R = m.length;
                    return R ? m[baseRandom(0, R - 1)] : L
                }
                function assignMergeValue(m, R, C) {
                    (L === C || eq(m[R], C)) && (L !== C || R in m) || baseAssignValue(m, R, C)
                }
                function assignValue(m, R, C) {
                    var T = m[R];
                    tn.call(m, R) && eq(T, C) && (L !== C || R in m) || baseAssignValue(m, R, C)
                }
                function assocIndexOf(m, R) {
                    for (var C = m.length; C--; )
                        if (eq(m[C][0], R))
                            return C;
                    return -1
                }
                function baseAggregator(m, R, C, T) {
                    return rp(m, function(m, L, U) {
                        R(T, m, C(m), U)
                    }),
                    T
                }
                function baseAssign(m, R) {
                    return m && copyObject(R, keys(R), m)
                }
                function baseAssignValue(m, R, C) {
                    "__proto__" == R && tx ? tx(m, R, {
                        configurable: !0,
                        enumerable: !0,
                        value: C,
                        writable: !0
                    }) : m[R] = C
                }
                function baseAt(m, R) {
                    for (var C = -1, T = R.length, U = eQ(T), B = null == m; ++C < T; )
                        U[C] = B ? L : get(m, R[C]);
                    return U
                }
                function baseClamp(m, R, C) {
                    return m == m && (L !== C && (m = m <= C ? m : C),
                    L !== R && (m = m >= R ? m : R)),
                    m
                }
                function baseClone(m, R, C, T, U, B) {
                    var $, V = 1 & R, H = 2 & R, W = 4 & R;
                    if (C && ($ = U ? C(m, T, U, B) : C(m)),
                    L !== $)
                        return $;
                    if (!isObject(m))
                        return m;
                    var G = no(m);
                    if (G) {
                        if (K = m.length,
                        er = new m.constructor(K),
                        K && "string" == typeof m[0] && tn.call(m, "index") && (er.index = m.index,
                        er.input = m.input),
                        $ = er,
                        !V)
                            return copyArray(m, $)
                    } else {
                        var K, er, es, eb, eE, e_ = rO(m), eS = e_ == J || e_ == X;
                        if (na(m))
                            return cloneBuffer(m, V);
                        if (e_ == et || e_ == q || eS && !U) {
                            if ($ = H || eS ? {} : initCloneObject(m),
                            !V)
                                return H ? (es = (eE = $) && copyObject(m, keysIn(m), eE),
                                copyObject(m, rA(m), es)) : (eb = baseAssign($, m),
                                copyObject(m, rS(m), eb))
                        } else {
                            if (!tw[e_])
                                return U ? m : {};
                            $ = function(m, R, C) {
                                var T, L, U = m.constructor;
                                switch (R) {
                                case el:
                                    return cloneArrayBuffer(m);
                                case Z:
                                case Y:
                                    return new U(+m);
                                case ec:
                                    return T = C ? cloneArrayBuffer(m.buffer) : m.buffer,
                                    new m.constructor(T,m.byteOffset,m.byteLength);
                                case eu:
                                case ef:
                                case ed:
                                case ep:
                                case eh:
                                case eg:
                                case em:
                                case ey:
                                case ev:
                                    return cloneTypedArray(m, C);
                                case Q:
                                    return new U;
                                case ee:
                                case ei:
                                    return new U(m);
                                case en:
                                    return (L = new m.constructor(m.source,ez.exec(m))).lastIndex = m.lastIndex,
                                    L;
                                case eo:
                                    return new U;
                                case ea:
                                    return ru ? e4(ru.call(m)) : {}
                                }
                            }(m, e_, V)
                        }
                    }
                    B || (B = new Stack);
                    var eA = B.get(m);
                    if (eA)
                        return eA;
                    B.set(m, $),
                    nu(m) ? m.forEach(function(T) {
                        $.add(baseClone(T, R, C, T, m, B))
                    }) : nl(m) && m.forEach(function(T, L) {
                        $.set(L, baseClone(T, R, C, L, m, B))
                    });
                    var eO = W ? H ? getAllKeysIn : getAllKeys : H ? keysIn : keys
                      , ew = G ? L : eO(m);
                    return arrayEach(ew || m, function(T, L) {
                        ew && (T = m[L = T]),
                        assignValue($, L, baseClone(T, R, C, L, m, B))
                    }),
                    $
                }
                function baseConformsTo(m, R, C) {
                    var T = C.length;
                    if (null == m)
                        return !T;
                    for (m = e4(m); T--; ) {
                        var U = C[T]
                          , B = R[U]
                          , $ = m[U];
                        if (L === $ && !(U in m) || !B($))
                            return !1
                    }
                    return !0
                }
                function baseDelay(m, R, C) {
                    if ("function" != typeof m)
                        throw new e5(U);
                    return rP(function() {
                        m.apply(L, C)
                    }, R)
                }
                function baseDifference(m, R, C, T) {
                    var L = -1
                      , U = arrayIncludes
                      , B = !0
                      , $ = m.length
                      , V = []
                      , H = R.length;
                    if (!$)
                        return V;
                    C && (R = arrayMap(R, baseUnary(C))),
                    T ? (U = arrayIncludesWith,
                    B = !1) : R.length >= 200 && (U = cacheHas,
                    B = !1,
                    R = new SetCache(R));
                    e: for (; ++L < $; ) {
                        var W = m[L]
                          , q = null == C ? W : C(W);
                        if (W = T || 0 !== W ? W : 0,
                        B && q == q) {
                            for (var G = H; G--; )
                                if (R[G] === q)
                                    continue e;
                            V.push(W)
                        } else
                            U(R, q, T) || V.push(W)
                    }
                    return V
                }
                lodash.templateSettings = {
                    escape: eI,
                    evaluate: eP,
                    interpolate: ek,
                    variable: "",
                    imports: {
                        _: lodash
                    }
                },
                lodash.prototype = baseLodash.prototype,
                lodash.prototype.constructor = lodash,
                LodashWrapper.prototype = rd(baseLodash.prototype),
                LodashWrapper.prototype.constructor = LodashWrapper,
                LazyWrapper.prototype = rd(baseLodash.prototype),
                LazyWrapper.prototype.constructor = LazyWrapper,
                Hash.prototype.clear = function() {
                    this.__data__ = rt ? rt(null) : {},
                    this.size = 0
                }
                ,
                Hash.prototype.delete = function(m) {
                    var R = this.has(m) && delete this.__data__[m];
                    return this.size -= R ? 1 : 0,
                    R
                }
                ,
                Hash.prototype.get = function(m) {
                    var R = this.__data__;
                    if (rt) {
                        var C = R[m];
                        return C === B ? L : C
                    }
                    return tn.call(R, m) ? R[m] : L
                }
                ,
                Hash.prototype.has = function(m) {
                    var R = this.__data__;
                    return rt ? L !== R[m] : tn.call(R, m)
                }
                ,
                Hash.prototype.set = function(m, R) {
                    var C = this.__data__;
                    return this.size += this.has(m) ? 0 : 1,
                    C[m] = rt && L === R ? B : R,
                    this
                }
                ,
                ListCache.prototype.clear = function() {
                    this.__data__ = [],
                    this.size = 0
                }
                ,
                ListCache.prototype.delete = function(m) {
                    var R = this.__data__
                      , C = assocIndexOf(R, m);
                    return !(C < 0) && (C == R.length - 1 ? R.pop() : tE.call(R, C, 1),
                    --this.size,
                    !0)
                }
                ,
                ListCache.prototype.get = function(m) {
                    var R = this.__data__
                      , C = assocIndexOf(R, m);
                    return C < 0 ? L : R[C][1]
                }
                ,
                ListCache.prototype.has = function(m) {
                    return assocIndexOf(this.__data__, m) > -1
                }
                ,
                ListCache.prototype.set = function(m, R) {
                    var C = this.__data__
                      , T = assocIndexOf(C, m);
                    return T < 0 ? (++this.size,
                    C.push([m, R])) : C[T][1] = R,
                    this
                }
                ,
                MapCache.prototype.clear = function() {
                    this.size = 0,
                    this.__data__ = {
                        hash: new Hash,
                        map: new (t5 || ListCache),
                        string: new Hash
                    }
                }
                ,
                MapCache.prototype.delete = function(m) {
                    var R = getMapData(this, m).delete(m);
                    return this.size -= R ? 1 : 0,
                    R
                }
                ,
                MapCache.prototype.get = function(m) {
                    return getMapData(this, m).get(m)
                }
                ,
                MapCache.prototype.has = function(m) {
                    return getMapData(this, m).has(m)
                }
                ,
                MapCache.prototype.set = function(m, R) {
                    var C = getMapData(this, m)
                      , T = C.size;
                    return C.set(m, R),
                    this.size += C.size == T ? 0 : 1,
                    this
                }
                ,
                SetCache.prototype.add = SetCache.prototype.push = function(m) {
                    return this.__data__.set(m, B),
                    this
                }
                ,
                SetCache.prototype.has = function(m) {
                    return this.__data__.has(m)
                }
                ,
                Stack.prototype.clear = function() {
                    this.__data__ = new ListCache,
                    this.size = 0
                }
                ,
                Stack.prototype.delete = function(m) {
                    var R = this.__data__
                      , C = R.delete(m);
                    return this.size = R.size,
                    C
                }
                ,
                Stack.prototype.get = function(m) {
                    return this.__data__.get(m)
                }
                ,
                Stack.prototype.has = function(m) {
                    return this.__data__.has(m)
                }
                ,
                Stack.prototype.set = function(m, R) {
                    var C = this.__data__;
                    if (C instanceof ListCache) {
                        var T = C.__data__;
                        if (!t5 || T.length < 199)
                            return T.push([m, R]),
                            this.size = ++C.size,
                            this;
                        C = this.__data__ = new MapCache(T)
                    }
                    return C.set(m, R),
                    this.size = C.size,
                    this
                }
                ;
                var rp = createBaseEach(baseForOwn)
                  , rh = createBaseEach(baseForOwnRight, !0);
                function baseEvery(m, R) {
                    var C = !0;
                    return rp(m, function(m, T, L) {
                        return C = !!R(m, T, L)
                    }),
                    C
                }
                function baseExtremum(m, R, C) {
                    for (var T = -1, U = m.length; ++T < U; ) {
                        var B = m[T]
                          , $ = R(B);
                        if (null != $ && (L === V ? $ == $ && !isSymbol($) : C($, V)))
                            var V = $
                              , H = B
                    }
                    return H
                }
                function baseFilter(m, R) {
                    var C = [];
                    return rp(m, function(m, T, L) {
                        R(m, T, L) && C.push(m)
                    }),
                    C
                }
                function baseFlatten(m, R, C, T, L) {
                    var U = -1
                      , B = m.length;
                    for (C || (C = isFlattenable),
                    L || (L = []); ++U < B; ) {
                        var $ = m[U];
                        R > 0 && C($) ? R > 1 ? baseFlatten($, R - 1, C, T, L) : arrayPush(L, $) : T || (L[L.length] = $)
                    }
                    return L
                }
                var rg = createBaseFor()
                  , rm = createBaseFor(!0);
                function baseForOwn(m, R) {
                    return m && rg(m, R, keys)
                }
                function baseForOwnRight(m, R) {
                    return m && rm(m, R, keys)
                }
                function baseFunctions(m, R) {
                    return arrayFilter(R, function(R) {
                        return isFunction(m[R])
                    })
                }
                function baseGet(m, R) {
                    R = castPath(R, m);
                    for (var C = 0, T = R.length; null != m && C < T; )
                        m = m[toKey(R[C++])];
                    return C && C == T ? m : L
                }
                function baseGetAllKeys(m, R, C) {
                    var T = R(m);
                    return no(m) ? T : arrayPush(T, C(m))
                }
                function baseGetTag(m) {
                    return null == m ? L === m ? "[object Undefined]" : "[object Null]" : tC && tC in e4(m) ? function(m) {
                        var R = tn.call(m, tC)
                          , C = m[tC];
                        try {
                            m[tC] = L;
                            var T = !0
                        } catch (m) {}
                        var U = ta.call(m);
                        return T && (R ? m[tC] = C : delete m[tC]),
                        U
                    }(m) : ta.call(m)
                }
                function baseGt(m, R) {
                    return m > R
                }
                function baseHas(m, R) {
                    return null != m && tn.call(m, R)
                }
                function baseHasIn(m, R) {
                    return null != m && R in e4(m)
                }
                function baseIntersection(m, R, C) {
                    for (var T = C ? arrayIncludesWith : arrayIncludes, U = m[0].length, B = m.length, $ = B, V = eQ(B), H = 1 / 0, W = []; $--; ) {
                        var q = m[$];
                        $ && R && (q = arrayMap(q, baseUnary(R))),
                        H = t1(q.length, H),
                        V[$] = !C && (R || U >= 120 && q.length >= 120) ? new SetCache($ && q) : L
                    }
                    q = m[0];
                    var G = -1
                      , Z = V[0];
                    e: for (; ++G < U && W.length < H; ) {
                        var Y = q[G]
                          , K = R ? R(Y) : Y;
                        if (Y = C || 0 !== Y ? Y : 0,
                        !(Z ? cacheHas(Z, K) : T(W, K, C))) {
                            for ($ = B; --$; ) {
                                var J = V[$];
                                if (!(J ? cacheHas(J, K) : T(m[$], K, C)))
                                    continue e
                            }
                            Z && Z.push(K),
                            W.push(Y)
                        }
                    }
                    return W
                }
                function baseInvoke(m, R, C) {
                    R = castPath(R, m);
                    var T = null == (m = parent(m, R)) ? m : m[toKey(last(R))];
                    return null == T ? L : apply(T, m, C)
                }
                function baseIsArguments(m) {
                    return isObjectLike(m) && baseGetTag(m) == q
                }
                function baseIsEqual(m, R, C, T, U) {
                    return m === R || (null != m && null != R && (isObjectLike(m) || isObjectLike(R)) ? function(m, R, C, T, U, B) {
                        var $ = no(m)
                          , V = no(R)
                          , H = $ ? G : rO(m)
                          , W = V ? G : rO(R);
                        H = H == q ? et : H,
                        W = W == q ? et : W;
                        var J = H == et
                          , X = W == et
                          , er = H == W;
                        if (er && na(m)) {
                            if (!na(R))
                                return !1;
                            $ = !0,
                            J = !1
                        }
                        if (er && !J)
                            return B || (B = new Stack),
                            $ || nf(m) ? equalArrays(m, R, C, T, U, B) : function(m, R, C, T, L, U, B) {
                                switch (C) {
                                case ec:
                                    if (m.byteLength != R.byteLength || m.byteOffset != R.byteOffset)
                                        break;
                                    m = m.buffer,
                                    R = R.buffer;
                                case el:
                                    if (m.byteLength != R.byteLength || !U(new td(m), new td(R)))
                                        break;
                                    return !0;
                                case Z:
                                case Y:
                                case ee:
                                    return eq(+m, +R);
                                case K:
                                    return m.name == R.name && m.message == R.message;
                                case en:
                                case ei:
                                    return m == R + "";
                                case Q:
                                    var $ = mapToArray;
                                case eo:
                                    var V = 1 & T;
                                    if ($ || ($ = setToArray),
                                    m.size != R.size && !V)
                                        break;
                                    var H = B.get(m);
                                    if (H)
                                        return H == R;
                                    T |= 2,
                                    B.set(m, R);
                                    var W = equalArrays($(m), $(R), T, L, U, B);
                                    return B.delete(m),
                                    W;
                                case ea:
                                    if (ru)
                                        return ru.call(m) == ru.call(R)
                                }
                                return !1
                            }(m, R, H, C, T, U, B);
                        if (!(1 & C)) {
                            var es = J && tn.call(m, "__wrapped__")
                              , eu = X && tn.call(R, "__wrapped__");
                            if (es || eu) {
                                var ef = es ? m.value() : m
                                  , ed = eu ? R.value() : R;
                                return B || (B = new Stack),
                                U(ef, ed, C, T, B)
                            }
                        }
                        return !!er && (B || (B = new Stack),
                        function(m, R, C, T, U, B) {
                            var $ = 1 & C
                              , V = getAllKeys(m)
                              , H = V.length;
                            if (H != getAllKeys(R).length && !$)
                                return !1;
                            for (var W = H; W--; ) {
                                var q = V[W];
                                if (!($ ? q in R : tn.call(R, q)))
                                    return !1
                            }
                            var G = B.get(m)
                              , Z = B.get(R);
                            if (G && Z)
                                return G == R && Z == m;
                            var Y = !0;
                            B.set(m, R),
                            B.set(R, m);
                            for (var K = $; ++W < H; ) {
                                var J = m[q = V[W]]
                                  , X = R[q];
                                if (T)
                                    var Q = $ ? T(X, J, q, R, m, B) : T(J, X, q, m, R, B);
                                if (!(L === Q ? J === X || U(J, X, C, T, B) : Q)) {
                                    Y = !1;
                                    break
                                }
                                K || (K = "constructor" == q)
                            }
                            if (Y && !K) {
                                var ee = m.constructor
                                  , et = R.constructor;
                                ee != et && "constructor"in m && "constructor"in R && !("function" == typeof ee && ee instanceof ee && "function" == typeof et && et instanceof et) && (Y = !1)
                            }
                            return B.delete(m),
                            B.delete(R),
                            Y
                        }(m, R, C, T, U, B))
                    }(m, R, C, T, baseIsEqual, U) : m != m && R != R)
                }
                function baseIsMatch(m, R, C, T) {
                    var U = C.length
                      , B = U
                      , $ = !T;
                    if (null == m)
                        return !B;
                    for (m = e4(m); U--; ) {
                        var V = C[U];
                        if ($ && V[2] ? V[1] !== m[V[0]] : !(V[0]in m))
                            return !1
                    }
                    for (; ++U < B; ) {
                        var H = (V = C[U])[0]
                          , W = m[H]
                          , q = V[1];
                        if ($ && V[2]) {
                            if (L === W && !(H in m))
                                return !1
                        } else {
                            var G = new Stack;
                            if (T)
                                var Z = T(W, q, H, m, R, G);
                            if (!(L === Z ? baseIsEqual(q, W, 3, T, G) : Z))
                                return !1
                        }
                    }
                    return !0
                }
                function baseIsNative(m) {
                    return !(!isObject(m) || ti && ti in m) && (isFunction(m) ? tc : eG).test(toSource(m))
                }
                function baseIteratee(m) {
                    return "function" == typeof m ? m : null == m ? identity : "object" == typeof m ? no(m) ? baseMatchesProperty(m[0], m[1]) : baseMatches(m) : property(m)
                }
                function baseKeys(m) {
                    if (!isPrototype(m))
                        return tQ(m);
                    var R = [];
                    for (var C in e4(m))
                        tn.call(m, C) && "constructor" != C && R.push(C);
                    return R
                }
                function baseLt(m, R) {
                    return m < R
                }
                function baseMap(m, R) {
                    var C = -1
                      , T = isArrayLike(m) ? eQ(m.length) : [];
                    return rp(m, function(m, L, U) {
                        T[++C] = R(m, L, U)
                    }),
                    T
                }
                function baseMatches(m) {
                    var R = getMatchData(m);
                    return 1 == R.length && R[0][2] ? matchesStrictComparable(R[0][0], R[0][1]) : function(C) {
                        return C === m || baseIsMatch(C, m, R)
                    }
                }
                function baseMatchesProperty(m, R) {
                    var C;
                    return isKey(m) && (C = R) == C && !isObject(C) ? matchesStrictComparable(toKey(m), R) : function(C) {
                        var T = get(C, m);
                        return L === T && T === R ? hasIn(C, m) : baseIsEqual(R, T, 3)
                    }
                }
                function baseMerge(m, R, C, T, U) {
                    m !== R && rg(R, function(B, $) {
                        if (U || (U = new Stack),
                        isObject(B))
                            (function(m, R, C, T, U, B, $) {
                                var V = safeGet(m, C)
                                  , H = safeGet(R, C)
                                  , W = $.get(H);
                                if (W) {
                                    assignMergeValue(m, C, W);
                                    return
                                }
                                var q = B ? B(V, H, C + "", m, R, $) : L
                                  , G = L === q;
                                if (G) {
                                    var Z = no(H)
                                      , Y = !Z && na(H)
                                      , K = !Z && !Y && nf(H);
                                    q = H,
                                    Z || Y || K ? no(V) ? q = V : isArrayLikeObject(V) ? q = copyArray(V) : Y ? (G = !1,
                                    q = cloneBuffer(H, !0)) : K ? (G = !1,
                                    q = cloneTypedArray(H, !0)) : q = [] : isPlainObject(H) || nn(H) ? (q = V,
                                    nn(V) ? q = toPlainObject(V) : (!isObject(V) || isFunction(V)) && (q = initCloneObject(H))) : G = !1
                                }
                                G && ($.set(H, q),
                                U(q, H, T, B, $),
                                $.delete(H)),
                                assignMergeValue(m, C, q)
                            }
                            )(m, R, $, C, baseMerge, T, U);
                        else {
                            var V = T ? T(safeGet(m, $), B, $ + "", m, R, U) : L;
                            L === V && (V = B),
                            assignMergeValue(m, $, V)
                        }
                    }, keysIn)
                }
                function baseNth(m, R) {
                    var C = m.length;
                    if (C)
                        return isIndex(R += R < 0 ? C : 0, C) ? m[R] : L
                }
                function baseOrderBy(m, R, C) {
                    R = R.length ? arrayMap(R, function(m) {
                        return no(m) ? function(R) {
                            return baseGet(R, 1 === m.length ? m[0] : m)
                        }
                        : m
                    }) : [identity];
                    var T = -1;
                    return R = arrayMap(R, baseUnary(getIteratee())),
                    function(m, R) {
                        var C = m.length;
                        for (m.sort(R); C--; )
                            m[C] = m[C].value;
                        return m
                    }(baseMap(m, function(m, C, L) {
                        return {
                            criteria: arrayMap(R, function(R) {
                                return R(m)
                            }),
                            index: ++T,
                            value: m
                        }
                    }), function(m, R) {
                        return function(m, R, C) {
                            for (var T = -1, L = m.criteria, U = R.criteria, B = L.length, $ = C.length; ++T < B; ) {
                                var V = compareAscending(L[T], U[T]);
                                if (V) {
                                    if (T >= $)
                                        return V;
                                    return V * ("desc" == C[T] ? -1 : 1)
                                }
                            }
                            return m.index - R.index
                        }(m, R, C)
                    })
                }
                function basePickBy(m, R, C) {
                    for (var T = -1, L = R.length, U = {}; ++T < L; ) {
                        var B = R[T]
                          , $ = baseGet(m, B);
                        C($, B) && baseSet(U, castPath(B, m), $)
                    }
                    return U
                }
                function basePullAll(m, R, C, T) {
                    var L = T ? baseIndexOfWith : baseIndexOf
                      , U = -1
                      , B = R.length
                      , $ = m;
                    for (m === R && (R = copyArray(R)),
                    C && ($ = arrayMap(m, baseUnary(C))); ++U < B; )
                        for (var V = 0, H = R[U], W = C ? C(H) : H; (V = L($, W, V, T)) > -1; )
                            $ !== m && tE.call($, V, 1),
                            tE.call(m, V, 1);
                    return m
                }
                function basePullAt(m, R) {
                    for (var C = m ? R.length : 0, T = C - 1; C--; ) {
                        var L = R[C];
                        if (C == T || L !== U) {
                            var U = L;
                            isIndex(L) ? tE.call(m, L, 1) : baseUnset(m, L)
                        }
                    }
                    return m
                }
                function baseRandom(m, R) {
                    return m + tZ(t4() * (R - m + 1))
                }
                function baseRepeat(m, R) {
                    var C = "";
                    if (!m || R < 1 || R > 9007199254740991)
                        return C;
                    do
                        R % 2 && (C += m),
                        (R = tZ(R / 2)) && (m += m);
                    while (R);
                    return C
                }
                function baseRest(m, R) {
                    return rk(overRest(m, R, identity), m + "")
                }
                function baseSet(m, R, C, T) {
                    if (!isObject(m))
                        return m;
                    R = castPath(R, m);
                    for (var U = -1, B = R.length, $ = B - 1, V = m; null != V && ++U < B; ) {
                        var H = toKey(R[U])
                          , W = C;
                        if ("__proto__" === H || "constructor" === H || "prototype" === H)
                            break;
                        if (U != $) {
                            var q = V[H];
                            W = T ? T(q, H, V) : L,
                            L === W && (W = isObject(q) ? q : isIndex(R[U + 1]) ? [] : {})
                        }
                        assignValue(V, H, W),
                        V = V[H]
                    }
                    return m
                }
                var ry = rr ? function(m, R) {
                    return rr.set(m, R),
                    m
                }
                : identity
                  , rv = tx ? function(m, R) {
                    return tx(m, "toString", {
                        configurable: !0,
                        enumerable: !1,
                        value: constant(R),
                        writable: !0
                    })
                }
                : identity;
                function baseSlice(m, R, C) {
                    var T = -1
                      , L = m.length;
                    R < 0 && (R = -R > L ? 0 : L + R),
                    (C = C > L ? L : C) < 0 && (C += L),
                    L = R > C ? 0 : C - R >>> 0,
                    R >>>= 0;
                    for (var U = eQ(L); ++T < L; )
                        U[T] = m[T + R];
                    return U
                }
                function baseSome(m, R) {
                    var C;
                    return rp(m, function(m, T, L) {
                        return !(C = R(m, T, L))
                    }),
                    !!C
                }
                function baseSortedIndex(m, R, C) {
                    var T = 0
                      , L = null == m ? T : m.length;
                    if ("number" == typeof R && R == R && L <= 2147483647) {
                        for (; T < L; ) {
                            var U = T + L >>> 1
                              , B = m[U];
                            null !== B && !isSymbol(B) && (C ? B <= R : B < R) ? T = U + 1 : L = U
                        }
                        return L
                    }
                    return baseSortedIndexBy(m, R, identity, C)
                }
                function baseSortedIndexBy(m, R, C, T) {
                    var U = 0
                      , B = null == m ? 0 : m.length;
                    if (0 === B)
                        return 0;
                    for (var $ = (R = C(R)) != R, V = null === R, H = isSymbol(R), W = L === R; U < B; ) {
                        var q = tZ((U + B) / 2)
                          , G = C(m[q])
                          , Z = L !== G
                          , Y = null === G
                          , K = G == G
                          , J = isSymbol(G);
                        if ($)
                            var X = T || K;
                        else
                            X = W ? K && (T || Z) : V ? K && Z && (T || !Y) : H ? K && Z && !Y && (T || !J) : !Y && !J && (T ? G <= R : G < R);
                        X ? U = q + 1 : B = q
                    }
                    return t1(B, 4294967294)
                }
                function baseSortedUniq(m, R) {
                    for (var C = -1, T = m.length, L = 0, U = []; ++C < T; ) {
                        var B = m[C]
                          , $ = R ? R(B) : B;
                        if (!C || !eq($, V)) {
                            var V = $;
                            U[L++] = 0 === B ? 0 : B
                        }
                    }
                    return U
                }
                function baseToNumber(m) {
                    return "number" == typeof m ? m : isSymbol(m) ? H : +m
                }
                function baseToString(m) {
                    if ("string" == typeof m)
                        return m;
                    if (no(m))
                        return arrayMap(m, baseToString) + "";
                    if (isSymbol(m))
                        return rf ? rf.call(m) : "";
                    var R = m + "";
                    return "0" == R && 1 / m == -V ? "-0" : R
                }
                function baseUniq(m, R, C) {
                    var T = -1
                      , L = arrayIncludes
                      , U = m.length
                      , B = !0
                      , $ = []
                      , V = $;
                    if (C)
                        B = !1,
                        L = arrayIncludesWith;
                    else if (U >= 200) {
                        var H = R ? null : rE(m);
                        if (H)
                            return setToArray(H);
                        B = !1,
                        L = cacheHas,
                        V = new SetCache
                    } else
                        V = R ? [] : $;
                    e: for (; ++T < U; ) {
                        var W = m[T]
                          , q = R ? R(W) : W;
                        if (W = C || 0 !== W ? W : 0,
                        B && q == q) {
                            for (var G = V.length; G--; )
                                if (V[G] === q)
                                    continue e;
                            R && V.push(q),
                            $.push(W)
                        } else
                            L(V, q, C) || (V !== $ && V.push(q),
                            $.push(W))
                    }
                    return $
                }
                function baseUnset(m, R) {
                    return R = castPath(R, m),
                    null == (m = parent(m, R)) || delete m[toKey(last(R))]
                }
                function baseUpdate(m, R, C, T) {
                    return baseSet(m, R, C(baseGet(m, R)), T)
                }
                function baseWhile(m, R, C, T) {
                    for (var L = m.length, U = T ? L : -1; (T ? U-- : ++U < L) && R(m[U], U, m); )
                        ;
                    return C ? baseSlice(m, T ? 0 : U, T ? U + 1 : L) : baseSlice(m, T ? U + 1 : 0, T ? L : U)
                }
                function baseWrapperValue(m, R) {
                    var C = m;
                    return C instanceof LazyWrapper && (C = C.value()),
                    arrayReduce(R, function(m, R) {
                        return R.func.apply(R.thisArg, arrayPush([m], R.args))
                    }, C)
                }
                function baseXor(m, R, C) {
                    var T = m.length;
                    if (T < 2)
                        return T ? baseUniq(m[0]) : [];
                    for (var L = -1, U = eQ(T); ++L < T; )
                        for (var B = m[L], $ = -1; ++$ < T; )
                            $ != L && (U[L] = baseDifference(U[L] || B, m[$], R, C));
                    return baseUniq(baseFlatten(U, 1), R, C)
                }
                function baseZipObject(m, R, C) {
                    for (var T = -1, U = m.length, B = R.length, $ = {}; ++T < U; ) {
                        var V = T < B ? R[T] : L;
                        C($, m[T], V)
                    }
                    return $
                }
                function castArrayLikeObject(m) {
                    return isArrayLikeObject(m) ? m : []
                }
                function castFunction(m) {
                    return "function" == typeof m ? m : identity
                }
                function castPath(m, R) {
                    return no(m) ? m : isKey(m, R) ? [m] : rR(toString(m))
                }
                function castSlice(m, R, C) {
                    var T = m.length;
                    return C = L === C ? T : C,
                    !R && C >= T ? m : baseSlice(m, R, C)
                }
                var rb = tL || function(m) {
                    return tT.clearTimeout(m)
                }
                ;
                function cloneBuffer(m, R) {
                    if (R)
                        return m.slice();
                    var C = m.length
                      , T = tp ? tp(C) : new m.constructor(C);
                    return m.copy(T),
                    T
                }
                function cloneArrayBuffer(m) {
                    var R = new m.constructor(m.byteLength);
                    return new td(R).set(new td(m)),
                    R
                }
                function cloneTypedArray(m, R) {
                    var C = R ? cloneArrayBuffer(m.buffer) : m.buffer;
                    return new m.constructor(C,m.byteOffset,m.length)
                }
                function compareAscending(m, R) {
                    if (m !== R) {
                        var C = L !== m
                          , T = null === m
                          , U = m == m
                          , B = isSymbol(m)
                          , $ = L !== R
                          , V = null === R
                          , H = R == R
                          , W = isSymbol(R);
                        if (!V && !W && !B && m > R || B && $ && H && !V && !W || T && $ && H || !C && H || !U)
                            return 1;
                        if (!T && !B && !W && m < R || W && C && U && !T && !B || V && C && U || !$ && U || !H)
                            return -1
                    }
                    return 0
                }
                function composeArgs(m, R, C, T) {
                    for (var L = -1, U = m.length, B = C.length, $ = -1, V = R.length, H = t0(U - B, 0), W = eQ(V + H), q = !T; ++$ < V; )
                        W[$] = R[$];
                    for (; ++L < B; )
                        (q || L < U) && (W[C[L]] = m[L]);
                    for (; H--; )
                        W[$++] = m[L++];
                    return W
                }
                function composeArgsRight(m, R, C, T) {
                    for (var L = -1, U = m.length, B = -1, $ = C.length, V = -1, H = R.length, W = t0(U - $, 0), q = eQ(W + H), G = !T; ++L < W; )
                        q[L] = m[L];
                    for (var Z = L; ++V < H; )
                        q[Z + V] = R[V];
                    for (; ++B < $; )
                        (G || L < U) && (q[Z + C[B]] = m[L++]);
                    return q
                }
                function copyArray(m, R) {
                    var C = -1
                      , T = m.length;
                    for (R || (R = eQ(T)); ++C < T; )
                        R[C] = m[C];
                    return R
                }
                function copyObject(m, R, C, T) {
                    var U = !C;
                    C || (C = {});
                    for (var B = -1, $ = R.length; ++B < $; ) {
                        var V = R[B]
                          , H = T ? T(C[V], m[V], V, C, m) : L;
                        L === H && (H = m[V]),
                        U ? baseAssignValue(C, V, H) : assignValue(C, V, H)
                    }
                    return C
                }
                function createAggregator(m, R) {
                    return function(C, T) {
                        var L = no(C) ? arrayAggregator : baseAggregator
                          , U = R ? R() : {};
                        return L(C, m, getIteratee(T, 2), U)
                    }
                }
                function createAssigner(m) {
                    return baseRest(function(R, C) {
                        var T = -1
                          , U = C.length
                          , B = U > 1 ? C[U - 1] : L
                          , $ = U > 2 ? C[2] : L;
                        for (B = m.length > 3 && "function" == typeof B ? (U--,
                        B) : L,
                        $ && isIterateeCall(C[0], C[1], $) && (B = U < 3 ? L : B,
                        U = 1),
                        R = e4(R); ++T < U; ) {
                            var V = C[T];
                            V && m(R, V, T, B)
                        }
                        return R
                    })
                }
                function createBaseEach(m, R) {
                    return function(C, T) {
                        if (null == C)
                            return C;
                        if (!isArrayLike(C))
                            return m(C, T);
                        for (var L = C.length, U = R ? L : -1, B = e4(C); (R ? U-- : ++U < L) && !1 !== T(B[U], U, B); )
                            ;
                        return C
                    }
                }
                function createBaseFor(m) {
                    return function(R, C, T) {
                        for (var L = -1, U = e4(R), B = T(R), $ = B.length; $--; ) {
                            var V = B[m ? $ : ++L];
                            if (!1 === C(U[V], V, U))
                                break
                        }
                        return R
                    }
                }
                function createCaseFirst(m) {
                    return function(R) {
                        var C = hasUnicode(R = toString(R)) ? stringToArray(R) : L
                          , T = C ? C[0] : R.charAt(0)
                          , U = C ? castSlice(C, 1).join("") : R.slice(1);
                        return T[m]() + U
                    }
                }
                function createCompounder(m) {
                    return function(R) {
                        return arrayReduce(words(deburr(R).replace(tm, "")), m, "")
                    }
                }
                function createCtor(m) {
                    return function() {
                        var R = arguments;
                        switch (R.length) {
                        case 0:
                            return new m;
                        case 1:
                            return new m(R[0]);
                        case 2:
                            return new m(R[0],R[1]);
                        case 3:
                            return new m(R[0],R[1],R[2]);
                        case 4:
                            return new m(R[0],R[1],R[2],R[3]);
                        case 5:
                            return new m(R[0],R[1],R[2],R[3],R[4]);
                        case 6:
                            return new m(R[0],R[1],R[2],R[3],R[4],R[5]);
                        case 7:
                            return new m(R[0],R[1],R[2],R[3],R[4],R[5],R[6])
                        }
                        var C = rd(m.prototype)
                          , T = m.apply(C, R);
                        return isObject(T) ? T : C
                    }
                }
                function createFind(m) {
                    return function(R, C, T) {
                        var U = e4(R);
                        if (!isArrayLike(R)) {
                            var B = getIteratee(C, 3);
                            R = keys(R),
                            C = function(m) {
                                return B(U[m], m, U)
                            }
                        }
                        var $ = m(R, C, T);
                        return $ > -1 ? U[B ? R[$] : $] : L
                    }
                }
                function createFlow(m) {
                    return flatRest(function(R) {
                        var C = R.length
                          , T = C
                          , B = LodashWrapper.prototype.thru;
                        for (m && R.reverse(); T--; ) {
                            var $ = R[T];
                            if ("function" != typeof $)
                                throw new e5(U);
                            if (B && !V && "wrapper" == getFuncName($))
                                var V = new LodashWrapper([],!0)
                        }
                        for (T = V ? T : C; ++T < C; ) {
                            var H = getFuncName($ = R[T])
                              , W = "wrapper" == H ? r_($) : L;
                            V = W && isLaziable(W[0]) && 424 == W[1] && !W[4].length && 1 == W[9] ? V[getFuncName(W[0])].apply(V, W[3]) : 1 == $.length && isLaziable($) ? V[H]() : V.thru($)
                        }
                        return function() {
                            var m = arguments
                              , T = m[0];
                            if (V && 1 == m.length && no(T))
                                return V.plant(T).value();
                            for (var L = 0, U = C ? R[L].apply(this, m) : T; ++L < C; )
                                U = R[L].call(this, U);
                            return U
                        }
                    })
                }
                function createHybrid(m, R, C, T, U, B, $, V, H, W) {
                    var q = 128 & R
                      , G = 1 & R
                      , Z = 2 & R
                      , Y = 24 & R
                      , K = 512 & R
                      , J = Z ? L : createCtor(m);
                    return function wrapper() {
                        for (var X = arguments.length, Q = eQ(X), ee = X; ee--; )
                            Q[ee] = arguments[ee];
                        if (Y)
                            var et = getHolder(wrapper)
                              , er = function(m, R) {
                                for (var C = m.length, T = 0; C--; )
                                    m[C] === R && ++T;
                                return T
                            }(Q, et);
                        if (T && (Q = composeArgs(Q, T, U, Y)),
                        B && (Q = composeArgsRight(Q, B, $, Y)),
                        X -= er,
                        Y && X < W) {
                            var en = replaceHolders(Q, et);
                            return createRecurry(m, R, createHybrid, wrapper.placeholder, C, Q, en, V, H, W - X)
                        }
                        var eo = G ? C : this
                          , ei = Z ? eo[m] : m;
                        return X = Q.length,
                        V ? Q = function(m, R) {
                            for (var C = m.length, T = t1(R.length, C), U = copyArray(m); T--; ) {
                                var B = R[T];
                                m[T] = isIndex(B, C) ? U[B] : L
                            }
                            return m
                        }(Q, V) : K && X > 1 && Q.reverse(),
                        q && H < X && (Q.length = H),
                        this && this !== tT && this instanceof wrapper && (ei = J || createCtor(ei)),
                        ei.apply(eo, Q)
                    }
                }
                function createInverter(m, R) {
                    return function(C, T) {
                        var L, U;
                        return L = R(T),
                        U = {},
                        baseForOwn(C, function(R, C, T) {
                            m(U, L(R), C, T)
                        }),
                        U
                    }
                }
                function createMathOperation(m, R) {
                    return function(C, T) {
                        var U;
                        if (L === C && L === T)
                            return R;
                        if (L !== C && (U = C),
                        L !== T) {
                            if (L === U)
                                return T;
                            "string" == typeof C || "string" == typeof T ? (C = baseToString(C),
                            T = baseToString(T)) : (C = baseToNumber(C),
                            T = baseToNumber(T)),
                            U = m(C, T)
                        }
                        return U
                    }
                }
                function createOver(m) {
                    return flatRest(function(R) {
                        return R = arrayMap(R, baseUnary(getIteratee())),
                        baseRest(function(C) {
                            var T = this;
                            return m(R, function(m) {
                                return apply(m, T, C)
                            })
                        })
                    })
                }
                function createPadding(m, R) {
                    var C = (R = L === R ? " " : baseToString(R)).length;
                    if (C < 2)
                        return C ? baseRepeat(R, m) : R;
                    var T = baseRepeat(R, tz(m / stringSize(R)));
                    return hasUnicode(R) ? castSlice(stringToArray(T), 0, m).join("") : T.slice(0, m)
                }
                function createRange(m) {
                    return function(R, C, T) {
                        return T && "number" != typeof T && isIterateeCall(R, C, T) && (C = T = L),
                        R = toFinite(R),
                        L === C ? (C = R,
                        R = 0) : C = toFinite(C),
                        T = L === T ? R < C ? 1 : -1 : toFinite(T),
                        function(m, R, C, T) {
                            for (var L = -1, U = t0(tz((R - m) / (C || 1)), 0), B = eQ(U); U--; )
                                B[T ? U : ++L] = m,
                                m += C;
                            return B
                        }(R, C, T, m)
                    }
                }
                function createRelationalOperation(m) {
                    return function(R, C) {
                        return "string" == typeof R && "string" == typeof C || (R = toNumber(R),
                        C = toNumber(C)),
                        m(R, C)
                    }
                }
                function createRecurry(m, R, C, T, U, B, $, V, H, W) {
                    var q = 8 & R
                      , G = q ? $ : L
                      , Z = q ? L : $
                      , Y = q ? B : L
                      , K = q ? L : B;
                    R |= q ? 32 : 64,
                    4 & (R &= ~(q ? 64 : 32)) || (R &= -4);
                    var J = [m, R, U, Y, G, K, Z, V, H, W]
                      , X = C.apply(L, J);
                    return isLaziable(m) && rI(X, J),
                    X.placeholder = T,
                    setWrapToString(X, m, R)
                }
                function createRound(m) {
                    var R = e3[m];
                    return function(m, C) {
                        if (m = toNumber(m),
                        (C = null == C ? 0 : t1(toInteger(C), 292)) && tJ(m)) {
                            var T = (toString(m) + "e").split("e");
                            return +((T = (toString(R(T[0] + "e" + (+T[1] + C))) + "e").split("e"))[0] + "e" + (+T[1] - C))
                        }
                        return R(m)
                    }
                }
                var rE = t7 && 1 / setToArray(new t7([, -0]))[1] == V ? function(m) {
                    return new t7(m)
                }
                : noop;
                function createToPairs(m) {
                    return function(R) {
                        var C, T, L = rO(R);
                        return L == Q ? mapToArray(R) : L == eo ? (C = -1,
                        T = Array(R.size),
                        R.forEach(function(m) {
                            T[++C] = [m, m]
                        }),
                        T) : arrayMap(m(R), function(m) {
                            return [m, R[m]]
                        })
                    }
                }
                function createWrap(m, R, C, T, B, V, H, W) {
                    var q = 2 & R;
                    if (!q && "function" != typeof m)
                        throw new e5(U);
                    var G = T ? T.length : 0;
                    if (G || (R &= -97,
                    T = B = L),
                    H = L === H ? H : t0(toInteger(H), 0),
                    W = L === W ? W : toInteger(W),
                    G -= B ? B.length : 0,
                    64 & R) {
                        var Z = T
                          , Y = B;
                        T = B = L
                    }
                    var K = q ? L : r_(m)
                      , J = [m, R, C, T, B, Z, Y, V, H, W];
                    if (K && function(m, R) {
                        var C = m[1]
                          , T = R[1]
                          , L = C | T
                          , U = L < 131
                          , B = 128 == T && 8 == C || 128 == T && 256 == C && m[7].length <= R[8] || 384 == T && R[7].length <= R[8] && 8 == C;
                        if (U || B) {
                            1 & T && (m[2] = R[2],
                            L |= 1 & C ? 0 : 4);
                            var V = R[3];
                            if (V) {
                                var H = m[3];
                                m[3] = H ? composeArgs(H, V, R[4]) : V,
                                m[4] = H ? replaceHolders(m[3], $) : R[4]
                            }
                            (V = R[5]) && (H = m[5],
                            m[5] = H ? composeArgsRight(H, V, R[6]) : V,
                            m[6] = H ? replaceHolders(m[5], $) : R[6]),
                            (V = R[7]) && (m[7] = V),
                            128 & T && (m[8] = null == m[8] ? R[8] : t1(m[8], R[8])),
                            null == m[9] && (m[9] = R[9]),
                            m[0] = R[0],
                            m[1] = L
                        }
                    }(J, K),
                    m = J[0],
                    R = J[1],
                    C = J[2],
                    T = J[3],
                    B = J[4],
                    (W = J[9] = L === J[9] ? q ? 0 : m.length : t0(J[9] - G, 0)) || !(24 & R) || (R &= -25),
                    R && 1 != R)
                        8 == R || 16 == R ? (X = m,
                        Q = R,
                        ee = W,
                        et = createCtor(X),
                        ep = function wrapper() {
                            for (var m = arguments.length, R = eQ(m), C = m, T = getHolder(wrapper); C--; )
                                R[C] = arguments[C];
                            var U = m < 3 && R[0] !== T && R[m - 1] !== T ? [] : replaceHolders(R, T);
                            return (m -= U.length) < ee ? createRecurry(X, Q, createHybrid, wrapper.placeholder, L, R, U, L, L, ee - m) : apply(this && this !== tT && this instanceof wrapper ? et : X, this, R)
                        }
                        ) : 32 != R && 33 != R || B.length ? ep = createHybrid.apply(L, J) : (er = m,
                        en = R,
                        eo = C,
                        ei = T,
                        ea = 1 & en,
                        es = createCtor(er),
                        ep = function wrapper() {
                            for (var m = -1, R = arguments.length, C = -1, T = ei.length, L = eQ(T + R), U = this && this !== tT && this instanceof wrapper ? es : er; ++C < T; )
                                L[C] = ei[C];
                            for (; R--; )
                                L[C++] = arguments[++m];
                            return apply(U, ea ? eo : this, L)
                        }
                        );
                    else
                        var X, Q, ee, et, er, en, eo, ei, ea, es, el, ec, eu, ef, ed, ep = (el = m,
                        ec = R,
                        eu = C,
                        ef = 1 & ec,
                        ed = createCtor(el),
                        function wrapper() {
                            return (this && this !== tT && this instanceof wrapper ? ed : el).apply(ef ? eu : this, arguments)
                        }
                        );
                    return setWrapToString((K ? ry : rI)(ep, J), m, R)
                }
                function customDefaultsAssignIn(m, R, C, T) {
                    return L === m || eq(m, te[C]) && !tn.call(T, C) ? R : m
                }
                function customDefaultsMerge(m, R, C, T, U, B) {
                    return isObject(m) && isObject(R) && (B.set(R, m),
                    baseMerge(m, R, L, customDefaultsMerge, B),
                    B.delete(R)),
                    m
                }
                function customOmitClone(m) {
                    return isPlainObject(m) ? L : m
                }
                function equalArrays(m, R, C, T, U, B) {
                    var $ = 1 & C
                      , V = m.length
                      , H = R.length;
                    if (V != H && !($ && H > V))
                        return !1;
                    var W = B.get(m)
                      , q = B.get(R);
                    if (W && q)
                        return W == R && q == m;
                    var G = -1
                      , Z = !0
                      , Y = 2 & C ? new SetCache : L;
                    for (B.set(m, R),
                    B.set(R, m); ++G < V; ) {
                        var K = m[G]
                          , J = R[G];
                        if (T)
                            var X = $ ? T(J, K, G, R, m, B) : T(K, J, G, m, R, B);
                        if (L !== X) {
                            if (X)
                                continue;
                            Z = !1;
                            break
                        }
                        if (Y) {
                            if (!arraySome(R, function(m, R) {
                                if (!cacheHas(Y, R) && (K === m || U(K, m, C, T, B)))
                                    return Y.push(R)
                            })) {
                                Z = !1;
                                break
                            }
                        } else if (!(K === J || U(K, J, C, T, B))) {
                            Z = !1;
                            break
                        }
                    }
                    return B.delete(m),
                    B.delete(R),
                    Z
                }
                function flatRest(m) {
                    return rk(overRest(m, L, flatten), m + "")
                }
                function getAllKeys(m) {
                    return baseGetAllKeys(m, keys, rS)
                }
                function getAllKeysIn(m) {
                    return baseGetAllKeys(m, keysIn, rA)
                }
                var r_ = rr ? function(m) {
                    return rr.get(m)
                }
                : noop;
                function getFuncName(m) {
                    for (var R = m.name + "", C = rn[R], T = tn.call(rn, R) ? C.length : 0; T--; ) {
                        var L = C[T]
                          , U = L.func;
                        if (null == U || U == m)
                            return L.name
                    }
                    return R
                }
                function getHolder(m) {
                    return (tn.call(lodash, "placeholder") ? lodash : m).placeholder
                }
                function getIteratee() {
                    var m = lodash.iteratee || iteratee;
                    return m = m === iteratee ? baseIteratee : m,
                    arguments.length ? m(arguments[0], arguments[1]) : m
                }
                function getMapData(m, R) {
                    var C, T = m.__data__;
                    return ("string" == (C = typeof R) || "number" == C || "symbol" == C || "boolean" == C ? "__proto__" !== R : null === R) ? T["string" == typeof R ? "string" : "hash"] : T.map
                }
                function getMatchData(m) {
                    for (var R = keys(m), C = R.length; C--; ) {
                        var T = R[C]
                          , L = m[T];
                        R[C] = [T, L, L == L && !isObject(L)]
                    }
                    return R
                }
                function getNative(m, R) {
                    var C = null == m ? L : m[R];
                    return baseIsNative(C) ? C : L
                }
                var rS = tY ? function(m) {
                    return null == m ? [] : arrayFilter(tY(m = e4(m)), function(R) {
                        return tv.call(m, R)
                    })
                }
                : stubArray
                  , rA = tY ? function(m) {
                    for (var R = []; m; )
                        arrayPush(R, rS(m)),
                        m = th(m);
                    return R
                }
                : stubArray
                  , rO = baseGetTag;
                function hasPath(m, R, C) {
                    R = castPath(R, m);
                    for (var T = -1, L = R.length, U = !1; ++T < L; ) {
                        var B = toKey(R[T]);
                        if (!(U = null != m && C(m, B)))
                            break;
                        m = m[B]
                    }
                    return U || ++T != L ? U : !!(L = null == m ? 0 : m.length) && isLength(L) && isIndex(B, L) && (no(m) || nn(m))
                }
                function initCloneObject(m) {
                    return "function" != typeof m.constructor || isPrototype(m) ? {} : rd(th(m))
                }
                function isFlattenable(m) {
                    return no(m) || nn(m) || !!(tI && m && m[tI])
                }
                function isIndex(m, R) {
                    var C = typeof m;
                    return !!(R = null == R ? 9007199254740991 : R) && ("number" == C || "symbol" != C && eY.test(m)) && m > -1 && m % 1 == 0 && m < R
                }
                function isIterateeCall(m, R, C) {
                    if (!isObject(C))
                        return !1;
                    var T = typeof R;
                    return ("number" == T ? !!(isArrayLike(C) && isIndex(R, C.length)) : "string" == T && R in C) && eq(C[R], m)
                }
                function isKey(m, R) {
                    if (no(m))
                        return !1;
                    var C = typeof m;
                    return !!("number" == C || "symbol" == C || "boolean" == C || null == m || isSymbol(m)) || eC.test(m) || !eR.test(m) || null != R && m in e4(R)
                }
                function isLaziable(m) {
                    var R = getFuncName(m)
                      , C = lodash[R];
                    if ("function" != typeof C || !(R in LazyWrapper.prototype))
                        return !1;
                    if (m === C)
                        return !0;
                    var T = r_(C);
                    return !!T && m === T[0]
                }
                (t8 && rO(new t8(new ArrayBuffer(1))) != ec || t5 && rO(new t5) != Q || t9 && rO(t9.resolve()) != er || t7 && rO(new t7) != eo || re && rO(new re) != es) && (rO = function(m) {
                    var R = baseGetTag(m)
                      , C = R == et ? m.constructor : L
                      , T = C ? toSource(C) : "";
                    if (T)
                        switch (T) {
                        case ro:
                            return ec;
                        case ri:
                            return Q;
                        case ra:
                            return er;
                        case rs:
                            return eo;
                        case rl:
                            return es
                        }
                    return R
                }
                );
                var rw = tt ? isFunction : stubFalse;
                function isPrototype(m) {
                    var R = m && m.constructor;
                    return m === ("function" == typeof R && R.prototype || te)
                }
                function matchesStrictComparable(m, R) {
                    return function(C) {
                        return null != C && C[m] === R && (L !== R || m in e4(C))
                    }
                }
                function overRest(m, R, C) {
                    return R = t0(L === R ? m.length - 1 : R, 0),
                    function() {
                        for (var T = arguments, L = -1, U = t0(T.length - R, 0), B = eQ(U); ++L < U; )
                            B[L] = T[R + L];
                        L = -1;
                        for (var $ = eQ(R + 1); ++L < R; )
                            $[L] = T[L];
                        return $[R] = C(B),
                        apply(m, this, $)
                    }
                }
                function parent(m, R) {
                    return R.length < 2 ? m : baseGet(m, baseSlice(R, 0, -1))
                }
                function safeGet(m, R) {
                    if (("constructor" !== R || "function" != typeof m[R]) && "__proto__" != R)
                        return m[R]
                }
                var rI = shortOut(ry)
                  , rP = tj || function(m, R) {
                    return tT.setTimeout(m, R)
                }
                  , rk = shortOut(rv);
                function setWrapToString(m, R, C) {
                    var T, L, U = R + "";
                    return rk(m, function(m, R) {
                        var C = R.length;
                        if (!C)
                            return m;
                        var T = C - 1;
                        return R[T] = (C > 1 ? "& " : "") + R[T],
                        R = R.join(C > 2 ? ", " : " "),
                        m.replace(ej, "{\n/* [wrapped with " + R + "] */\n")
                    }(U, (T = (L = U.match(eD)) ? L[1].split(eU) : [],
                    arrayEach(W, function(m) {
                        var R = "_." + m[0];
                        C & m[1] && !arrayIncludes(T, R) && T.push(R)
                    }),
                    T.sort())))
                }
                function shortOut(m) {
                    var R = 0
                      , C = 0;
                    return function() {
                        var T = t2()
                          , U = 16 - (T - C);
                        if (C = T,
                        U > 0) {
                            if (++R >= 800)
                                return arguments[0]
                        } else
                            R = 0;
                        return m.apply(L, arguments)
                    }
                }
                function shuffleSelf(m, R) {
                    var C = -1
                      , T = m.length
                      , U = T - 1;
                    for (R = L === R ? T : R; ++C < R; ) {
                        var B = baseRandom(C, U)
                          , $ = m[B];
                        m[B] = m[C],
                        m[C] = $
                    }
                    return m.length = R,
                    m
                }
                var rR = (T = (C = memoize(function(m) {
                    var R = [];
                    return 46 === m.charCodeAt(0) && R.push(""),
                    m.replace(eT, function(m, C, T, L) {
                        R.push(T ? L.replace(eF, "$1") : C || m)
                    }),
                    R
                }, function(m) {
                    return 500 === T.size && T.clear(),
                    m
                })).cache,
                C);
                function toKey(m) {
                    if ("string" == typeof m || isSymbol(m))
                        return m;
                    var R = m + "";
                    return "0" == R && 1 / m == -V ? "-0" : R
                }
                function toSource(m) {
                    if (null != m) {
                        try {
                            return tr.call(m)
                        } catch (m) {}
                        try {
                            return m + ""
                        } catch (m) {}
                    }
                    return ""
                }
                function wrapperClone(m) {
                    if (m instanceof LazyWrapper)
                        return m.clone();
                    var R = new LodashWrapper(m.__wrapped__,m.__chain__);
                    return R.__actions__ = copyArray(m.__actions__),
                    R.__index__ = m.__index__,
                    R.__values__ = m.__values__,
                    R
                }
                var rC = baseRest(function(m, R) {
                    return isArrayLikeObject(m) ? baseDifference(m, baseFlatten(R, 1, isArrayLikeObject, !0)) : []
                })
                  , rT = baseRest(function(m, R) {
                    var C = last(R);
                    return isArrayLikeObject(C) && (C = L),
                    isArrayLikeObject(m) ? baseDifference(m, baseFlatten(R, 1, isArrayLikeObject, !0), getIteratee(C, 2)) : []
                })
                  , rx = baseRest(function(m, R) {
                    var C = last(R);
                    return isArrayLikeObject(C) && (C = L),
                    isArrayLikeObject(m) ? baseDifference(m, baseFlatten(R, 1, isArrayLikeObject, !0), L, C) : []
                });
                function findIndex(m, R, C) {
                    var T = null == m ? 0 : m.length;
                    if (!T)
                        return -1;
                    var L = null == C ? 0 : toInteger(C);
                    return L < 0 && (L = t0(T + L, 0)),
                    baseFindIndex(m, getIteratee(R, 3), L)
                }
                function findLastIndex(m, R, C) {
                    var T = null == m ? 0 : m.length;
                    if (!T)
                        return -1;
                    var U = T - 1;
                    return L !== C && (U = toInteger(C),
                    U = C < 0 ? t0(T + U, 0) : t1(U, T - 1)),
                    baseFindIndex(m, getIteratee(R, 3), U, !0)
                }
                function flatten(m) {
                    return (null == m ? 0 : m.length) ? baseFlatten(m, 1) : []
                }
                function head(m) {
                    return m && m.length ? m[0] : L
                }
                var rL = baseRest(function(m) {
                    var R = arrayMap(m, castArrayLikeObject);
                    return R.length && R[0] === m[0] ? baseIntersection(R) : []
                })
                  , rN = baseRest(function(m) {
                    var R = last(m)
                      , C = arrayMap(m, castArrayLikeObject);
                    return R === last(C) ? R = L : C.pop(),
                    C.length && C[0] === m[0] ? baseIntersection(C, getIteratee(R, 2)) : []
                })
                  , rM = baseRest(function(m) {
                    var R = last(m)
                      , C = arrayMap(m, castArrayLikeObject);
                    return (R = "function" == typeof R ? R : L) && C.pop(),
                    C.length && C[0] === m[0] ? baseIntersection(C, L, R) : []
                });
                function last(m) {
                    var R = null == m ? 0 : m.length;
                    return R ? m[R - 1] : L
                }
                var rj = baseRest(pullAll);
                function pullAll(m, R) {
                    return m && m.length && R && R.length ? basePullAll(m, R) : m
                }
                var rD = flatRest(function(m, R) {
                    var C = null == m ? 0 : m.length
                      , T = baseAt(m, R);
                    return basePullAt(m, arrayMap(R, function(m) {
                        return isIndex(m, C) ? +m : m
                    }).sort(compareAscending)),
                    T
                });
                function reverse(m) {
                    return null == m ? m : t6.call(m)
                }
                var rU = baseRest(function(m) {
                    return baseUniq(baseFlatten(m, 1, isArrayLikeObject, !0))
                })
                  , rB = baseRest(function(m) {
                    var R = last(m);
                    return isArrayLikeObject(R) && (R = L),
                    baseUniq(baseFlatten(m, 1, isArrayLikeObject, !0), getIteratee(R, 2))
                })
                  , r$ = baseRest(function(m) {
                    var R = last(m);
                    return R = "function" == typeof R ? R : L,
                    baseUniq(baseFlatten(m, 1, isArrayLikeObject, !0), L, R)
                });
                function unzip(m) {
                    if (!(m && m.length))
                        return [];
                    var R = 0;
                    return m = arrayFilter(m, function(m) {
                        if (isArrayLikeObject(m))
                            return R = t0(m.length, R),
                            !0
                    }),
                    baseTimes(R, function(R) {
                        return arrayMap(m, baseProperty(R))
                    })
                }
                function unzipWith(m, R) {
                    if (!(m && m.length))
                        return [];
                    var C = unzip(m);
                    return null == R ? C : arrayMap(C, function(m) {
                        return apply(R, L, m)
                    })
                }
                var rF = baseRest(function(m, R) {
                    return isArrayLikeObject(m) ? baseDifference(m, R) : []
                })
                  , rV = baseRest(function(m) {
                    return baseXor(arrayFilter(m, isArrayLikeObject))
                })
                  , rz = baseRest(function(m) {
                    var R = last(m);
                    return isArrayLikeObject(R) && (R = L),
                    baseXor(arrayFilter(m, isArrayLikeObject), getIteratee(R, 2))
                })
                  , rH = baseRest(function(m) {
                    var R = last(m);
                    return R = "function" == typeof R ? R : L,
                    baseXor(arrayFilter(m, isArrayLikeObject), L, R)
                })
                  , rW = baseRest(unzip)
                  , rq = baseRest(function(m) {
                    var R = m.length
                      , C = R > 1 ? m[R - 1] : L;
                    return C = "function" == typeof C ? (m.pop(),
                    C) : L,
                    unzipWith(m, C)
                });
                function chain(m) {
                    var R = lodash(m);
                    return R.__chain__ = !0,
                    R
                }
                function thru(m, R) {
                    return R(m)
                }
                var rG = flatRest(function(m) {
                    var R = m.length
                      , C = R ? m[0] : 0
                      , T = this.__wrapped__
                      , interceptor = function(R) {
                        return baseAt(R, m)
                    };
                    return !(R > 1) && !this.__actions__.length && T instanceof LazyWrapper && isIndex(C) ? ((T = T.slice(C, +C + (R ? 1 : 0))).__actions__.push({
                        func: thru,
                        args: [interceptor],
                        thisArg: L
                    }),
                    new LodashWrapper(T,this.__chain__).thru(function(m) {
                        return R && !m.length && m.push(L),
                        m
                    })) : this.thru(interceptor)
                })
                  , rZ = createAggregator(function(m, R, C) {
                    tn.call(m, C) ? ++m[C] : baseAssignValue(m, C, 1)
                })
                  , rY = createFind(findIndex)
                  , rK = createFind(findLastIndex);
                function forEach(m, R) {
                    return (no(m) ? arrayEach : rp)(m, getIteratee(R, 3))
                }
                function forEachRight(m, R) {
                    return (no(m) ? function(m, R) {
                        for (var C = null == m ? 0 : m.length; C-- && !1 !== R(m[C], C, m); )
                            ;
                        return m
                    }
                    : rh)(m, getIteratee(R, 3))
                }
                var rJ = createAggregator(function(m, R, C) {
                    tn.call(m, C) ? m[C].push(R) : baseAssignValue(m, C, [R])
                })
                  , rX = baseRest(function(m, R, C) {
                    var T = -1
                      , L = "function" == typeof R
                      , U = isArrayLike(m) ? eQ(m.length) : [];
                    return rp(m, function(m) {
                        U[++T] = L ? apply(R, m, C) : baseInvoke(m, R, C)
                    }),
                    U
                })
                  , rQ = createAggregator(function(m, R, C) {
                    baseAssignValue(m, C, R)
                });
                function map(m, R) {
                    return (no(m) ? arrayMap : baseMap)(m, getIteratee(R, 3))
                }
                var r0 = createAggregator(function(m, R, C) {
                    m[C ? 0 : 1].push(R)
                }, function() {
                    return [[], []]
                })
                  , r1 = baseRest(function(m, R) {
                    if (null == m)
                        return [];
                    var C = R.length;
                    return C > 1 && isIterateeCall(m, R[0], R[1]) ? R = [] : C > 2 && isIterateeCall(R[0], R[1], R[2]) && (R = [R[0]]),
                    baseOrderBy(m, baseFlatten(R, 1), [])
                })
                  , r2 = tM || function() {
                    return tT.Date.now()
                }
                ;
                function ary(m, R, C) {
                    return R = C ? L : R,
                    R = m && null == R ? m.length : R,
                    createWrap(m, 128, L, L, L, L, R)
                }
                function before(m, R) {
                    var C;
                    if ("function" != typeof R)
                        throw new e5(U);
                    return m = toInteger(m),
                    function() {
                        return --m > 0 && (C = R.apply(this, arguments)),
                        m <= 1 && (R = L),
                        C
                    }
                }
                var r3 = baseRest(function(m, R, C) {
                    var T = 1;
                    if (C.length) {
                        var L = replaceHolders(C, getHolder(r3));
                        T |= 32
                    }
                    return createWrap(m, T, R, C, L)
                })
                  , r4 = baseRest(function(m, R, C) {
                    var T = 3;
                    if (C.length) {
                        var L = replaceHolders(C, getHolder(r4));
                        T |= 32
                    }
                    return createWrap(R, T, m, C, L)
                });
                function debounce(m, R, C) {
                    var T, B, $, V, H, W, q = 0, G = !1, Z = !1, Y = !0;
                    if ("function" != typeof m)
                        throw new e5(U);
                    function invokeFunc(R) {
                        var C = T
                          , U = B;
                        return T = B = L,
                        q = R,
                        V = m.apply(U, C)
                    }
                    function shouldInvoke(m) {
                        var C = m - W
                          , T = m - q;
                        return L === W || C >= R || C < 0 || Z && T >= $
                    }
                    function timerExpired() {
                        var m, C, T, L = r2();
                        if (shouldInvoke(L))
                            return trailingEdge(L);
                        H = rP(timerExpired, (m = L - W,
                        C = L - q,
                        T = R - m,
                        Z ? t1(T, $ - C) : T))
                    }
                    function trailingEdge(m) {
                        return (H = L,
                        Y && T) ? invokeFunc(m) : (T = B = L,
                        V)
                    }
                    function debounced() {
                        var m, C = r2(), U = shouldInvoke(C);
                        if (T = arguments,
                        B = this,
                        W = C,
                        U) {
                            if (L === H)
                                return q = m = W,
                                H = rP(timerExpired, R),
                                G ? invokeFunc(m) : V;
                            if (Z)
                                return rb(H),
                                H = rP(timerExpired, R),
                                invokeFunc(W)
                        }
                        return L === H && (H = rP(timerExpired, R)),
                        V
                    }
                    return R = toNumber(R) || 0,
                    isObject(C) && (G = !!C.leading,
                    $ = (Z = "maxWait"in C) ? t0(toNumber(C.maxWait) || 0, R) : $,
                    Y = "trailing"in C ? !!C.trailing : Y),
                    debounced.cancel = function() {
                        L !== H && rb(H),
                        q = 0,
                        T = W = B = H = L
                    }
                    ,
                    debounced.flush = function() {
                        return L === H ? V : trailingEdge(r2())
                    }
                    ,
                    debounced
                }
                var r6 = baseRest(function(m, R) {
                    return baseDelay(m, 1, R)
                })
                  , r8 = baseRest(function(m, R, C) {
                    return baseDelay(m, toNumber(R) || 0, C)
                });
                function memoize(m, R) {
                    if ("function" != typeof m || null != R && "function" != typeof R)
                        throw new e5(U);
                    var memoized = function() {
                        var C = arguments
                          , T = R ? R.apply(this, C) : C[0]
                          , L = memoized.cache;
                        if (L.has(T))
                            return L.get(T);
                        var U = m.apply(this, C);
                        return memoized.cache = L.set(T, U) || L,
                        U
                    };
                    return memoized.cache = new (memoize.Cache || MapCache),
                    memoized
                }
                function negate(m) {
                    if ("function" != typeof m)
                        throw new e5(U);
                    return function() {
                        var R = arguments;
                        switch (R.length) {
                        case 0:
                            return !m.call(this);
                        case 1:
                            return !m.call(this, R[0]);
                        case 2:
                            return !m.call(this, R[0], R[1]);
                        case 3:
                            return !m.call(this, R[0], R[1], R[2])
                        }
                        return !m.apply(this, R)
                    }
                }
                memoize.Cache = MapCache;
                var r5 = baseRest(function(m, R) {
                    var C = (R = 1 == R.length && no(R[0]) ? arrayMap(R[0], baseUnary(getIteratee())) : arrayMap(baseFlatten(R, 1), baseUnary(getIteratee()))).length;
                    return baseRest(function(T) {
                        for (var L = -1, U = t1(T.length, C); ++L < U; )
                            T[L] = R[L].call(this, T[L]);
                        return apply(m, this, T)
                    })
                })
                  , r9 = baseRest(function(m, R) {
                    var C = replaceHolders(R, getHolder(r9));
                    return createWrap(m, 32, L, R, C)
                })
                  , r7 = baseRest(function(m, R) {
                    var C = replaceHolders(R, getHolder(r7));
                    return createWrap(m, 64, L, R, C)
                })
                  , ne = flatRest(function(m, R) {
                    return createWrap(m, 256, L, L, L, R)
                });
                function eq(m, R) {
                    return m === R || m != m && R != R
                }
                var nt = createRelationalOperation(baseGt)
                  , nr = createRelationalOperation(function(m, R) {
                    return m >= R
                })
                  , nn = baseIsArguments(function() {
                    return arguments
                }()) ? baseIsArguments : function(m) {
                    return isObjectLike(m) && tn.call(m, "callee") && !tv.call(m, "callee")
                }
                  , no = eQ.isArray
                  , ni = tD ? baseUnary(tD) : function(m) {
                    return isObjectLike(m) && baseGetTag(m) == el
                }
                ;
                function isArrayLike(m) {
                    return null != m && isLength(m.length) && !isFunction(m)
                }
                function isArrayLikeObject(m) {
                    return isObjectLike(m) && isArrayLike(m)
                }
                var na = tK || stubFalse
                  , ns = tU ? baseUnary(tU) : function(m) {
                    return isObjectLike(m) && baseGetTag(m) == Y
                }
                ;
                function isError(m) {
                    if (!isObjectLike(m))
                        return !1;
                    var R = baseGetTag(m);
                    return R == K || "[object DOMException]" == R || "string" == typeof m.message && "string" == typeof m.name && !isPlainObject(m)
                }
                function isFunction(m) {
                    if (!isObject(m))
                        return !1;
                    var R = baseGetTag(m);
                    return R == J || R == X || "[object AsyncFunction]" == R || "[object Proxy]" == R
                }
                function isInteger(m) {
                    return "number" == typeof m && m == toInteger(m)
                }
                function isLength(m) {
                    return "number" == typeof m && m > -1 && m % 1 == 0 && m <= 9007199254740991
                }
                function isObject(m) {
                    var R = typeof m;
                    return null != m && ("object" == R || "function" == R)
                }
                function isObjectLike(m) {
                    return null != m && "object" == typeof m
                }
                var nl = tB ? baseUnary(tB) : function(m) {
                    return isObjectLike(m) && rO(m) == Q
                }
                ;
                function isNumber(m) {
                    return "number" == typeof m || isObjectLike(m) && baseGetTag(m) == ee
                }
                function isPlainObject(m) {
                    if (!isObjectLike(m) || baseGetTag(m) != et)
                        return !1;
                    var R = th(m);
                    if (null === R)
                        return !0;
                    var C = tn.call(R, "constructor") && R.constructor;
                    return "function" == typeof C && C instanceof C && tr.call(C) == ts
                }
                var nc = t$ ? baseUnary(t$) : function(m) {
                    return isObjectLike(m) && baseGetTag(m) == en
                }
                  , nu = tF ? baseUnary(tF) : function(m) {
                    return isObjectLike(m) && rO(m) == eo
                }
                ;
                function isString(m) {
                    return "string" == typeof m || !no(m) && isObjectLike(m) && baseGetTag(m) == ei
                }
                function isSymbol(m) {
                    return "symbol" == typeof m || isObjectLike(m) && baseGetTag(m) == ea
                }
                var nf = tV ? baseUnary(tV) : function(m) {
                    return isObjectLike(m) && isLength(m.length) && !!tO[baseGetTag(m)]
                }
                  , nd = createRelationalOperation(baseLt)
                  , np = createRelationalOperation(function(m, R) {
                    return m <= R
                });
                function toArray(m) {
                    if (!m)
                        return [];
                    if (isArrayLike(m))
                        return isString(m) ? stringToArray(m) : copyArray(m);
                    if (tR && m[tR])
                        return function(m) {
                            for (var R, C = []; !(R = m.next()).done; )
                                C.push(R.value);
                            return C
                        }(m[tR]());
                    var R = rO(m);
                    return (R == Q ? mapToArray : R == eo ? setToArray : values)(m)
                }
                function toFinite(m) {
                    return m ? (m = toNumber(m)) === V || m === -V ? (m < 0 ? -1 : 1) * 17976931348623157e292 : m == m ? m : 0 : 0 === m ? m : 0
                }
                function toInteger(m) {
                    var R = toFinite(m)
                      , C = R % 1;
                    return R == R ? C ? R - C : R : 0
                }
                function toLength(m) {
                    return m ? baseClamp(toInteger(m), 0, 4294967295) : 0
                }
                function toNumber(m) {
                    if ("number" == typeof m)
                        return m;
                    if (isSymbol(m))
                        return H;
                    if (isObject(m)) {
                        var R = "function" == typeof m.valueOf ? m.valueOf() : m;
                        m = isObject(R) ? R + "" : R
                    }
                    if ("string" != typeof m)
                        return 0 === m ? m : +m;
                    m = baseTrim(m);
                    var C = eW.test(m);
                    return C || eZ.test(m) ? tk(m.slice(2), C ? 2 : 8) : eH.test(m) ? H : +m
                }
                function toPlainObject(m) {
                    return copyObject(m, keysIn(m))
                }
                function toString(m) {
                    return null == m ? "" : baseToString(m)
                }
                var nh = createAssigner(function(m, R) {
                    if (isPrototype(R) || isArrayLike(R)) {
                        copyObject(R, keys(R), m);
                        return
                    }
                    for (var C in R)
                        tn.call(R, C) && assignValue(m, C, R[C])
                })
                  , ng = createAssigner(function(m, R) {
                    copyObject(R, keysIn(R), m)
                })
                  , nm = createAssigner(function(m, R, C, T) {
                    copyObject(R, keysIn(R), m, T)
                })
                  , ny = createAssigner(function(m, R, C, T) {
                    copyObject(R, keys(R), m, T)
                })
                  , nv = flatRest(baseAt)
                  , nb = baseRest(function(m, R) {
                    m = e4(m);
                    var C = -1
                      , T = R.length
                      , U = T > 2 ? R[2] : L;
                    for (U && isIterateeCall(R[0], R[1], U) && (T = 1); ++C < T; )
                        for (var B = R[C], $ = keysIn(B), V = -1, H = $.length; ++V < H; ) {
                            var W = $[V]
                              , q = m[W];
                            (L === q || eq(q, te[W]) && !tn.call(m, W)) && (m[W] = B[W])
                        }
                    return m
                })
                  , nE = baseRest(function(m) {
                    return m.push(L, customDefaultsMerge),
                    apply(nw, L, m)
                });
                function get(m, R, C) {
                    var T = null == m ? L : baseGet(m, R);
                    return L === T ? C : T
                }
                function hasIn(m, R) {
                    return null != m && hasPath(m, R, baseHasIn)
                }
                var n_ = createInverter(function(m, R, C) {
                    null != R && "function" != typeof R.toString && (R = ta.call(R)),
                    m[R] = C
                }, constant(identity))
                  , nS = createInverter(function(m, R, C) {
                    null != R && "function" != typeof R.toString && (R = ta.call(R)),
                    tn.call(m, R) ? m[R].push(C) : m[R] = [C]
                }, getIteratee)
                  , nA = baseRest(baseInvoke);
                function keys(m) {
                    return isArrayLike(m) ? arrayLikeKeys(m) : baseKeys(m)
                }
                function keysIn(m) {
                    return isArrayLike(m) ? arrayLikeKeys(m, !0) : function(m) {
                        if (!isObject(m))
                            return function(m) {
                                var R = [];
                                if (null != m)
                                    for (var C in e4(m))
                                        R.push(C);
                                return R
                            }(m);
                        var R = isPrototype(m)
                          , C = [];
                        for (var T in m)
                            "constructor" == T && (R || !tn.call(m, T)) || C.push(T);
                        return C
                    }(m)
                }
                var nO = createAssigner(function(m, R, C) {
                    baseMerge(m, R, C)
                })
                  , nw = createAssigner(function(m, R, C, T) {
                    baseMerge(m, R, C, T)
                })
                  , nI = flatRest(function(m, R) {
                    var C = {};
                    if (null == m)
                        return C;
                    var T = !1;
                    R = arrayMap(R, function(R) {
                        return R = castPath(R, m),
                        T || (T = R.length > 1),
                        R
                    }),
                    copyObject(m, getAllKeysIn(m), C),
                    T && (C = baseClone(C, 7, customOmitClone));
                    for (var L = R.length; L--; )
                        baseUnset(C, R[L]);
                    return C
                })
                  , nP = flatRest(function(m, R) {
                    return null == m ? {} : basePickBy(m, R, function(R, C) {
                        return hasIn(m, C)
                    })
                });
                function pickBy(m, R) {
                    if (null == m)
                        return {};
                    var C = arrayMap(getAllKeysIn(m), function(m) {
                        return [m]
                    });
                    return R = getIteratee(R),
                    basePickBy(m, C, function(m, C) {
                        return R(m, C[0])
                    })
                }
                var nk = createToPairs(keys)
                  , nR = createToPairs(keysIn);
                function values(m) {
                    return null == m ? [] : baseValues(m, keys(m))
                }
                var nC = createCompounder(function(m, R, C) {
                    return R = R.toLowerCase(),
                    m + (C ? capitalize(R) : R)
                });
                function capitalize(m) {
                    return nD(toString(m).toLowerCase())
                }
                function deburr(m) {
                    return (m = toString(m)) && m.replace(eK, tH).replace(ty, "")
                }
                var nT = createCompounder(function(m, R, C) {
                    return m + (C ? "-" : "") + R.toLowerCase()
                })
                  , nx = createCompounder(function(m, R, C) {
                    return m + (C ? " " : "") + R.toLowerCase()
                })
                  , nL = createCaseFirst("toLowerCase")
                  , nN = createCompounder(function(m, R, C) {
                    return m + (C ? "_" : "") + R.toLowerCase()
                })
                  , nM = createCompounder(function(m, R, C) {
                    return m + (C ? " " : "") + nD(R)
                })
                  , nj = createCompounder(function(m, R, C) {
                    return m + (C ? " " : "") + R.toUpperCase()
                })
                  , nD = createCaseFirst("toUpperCase");
                function words(m, R, C) {
                    if (m = toString(m),
                    R = C ? L : R,
                    L === R) {
                        var T;
                        return (T = m,
                        t_.test(T)) ? m.match(tb) || [] : m.match(eB) || []
                    }
                    return m.match(R) || []
                }
                var nU = baseRest(function(m, R) {
                    try {
                        return apply(m, L, R)
                    } catch (m) {
                        return isError(m) ? m : new e1(m)
                    }
                })
                  , nB = flatRest(function(m, R) {
                    return arrayEach(R, function(R) {
                        baseAssignValue(m, R = toKey(R), r3(m[R], m))
                    }),
                    m
                });
                function constant(m) {
                    return function() {
                        return m
                    }
                }
                var n$ = createFlow()
                  , nF = createFlow(!0);
                function identity(m) {
                    return m
                }
                function iteratee(m) {
                    return baseIteratee("function" == typeof m ? m : baseClone(m, 1))
                }
                var nV = baseRest(function(m, R) {
                    return function(C) {
                        return baseInvoke(C, m, R)
                    }
                })
                  , nz = baseRest(function(m, R) {
                    return function(C) {
                        return baseInvoke(m, C, R)
                    }
                });
                function mixin(m, R, C) {
                    var T = keys(R)
                      , L = baseFunctions(R, T);
                    null != C || isObject(R) && (L.length || !T.length) || (C = R,
                    R = m,
                    m = this,
                    L = baseFunctions(R, keys(R)));
                    var U = !(isObject(C) && "chain"in C) || !!C.chain
                      , B = isFunction(m);
                    return arrayEach(L, function(C) {
                        var T = R[C];
                        m[C] = T,
                        B && (m.prototype[C] = function() {
                            var R = this.__chain__;
                            if (U || R) {
                                var C = m(this.__wrapped__);
                                return (C.__actions__ = copyArray(this.__actions__)).push({
                                    func: T,
                                    args: arguments,
                                    thisArg: m
                                }),
                                C.__chain__ = R,
                                C
                            }
                            return T.apply(m, arrayPush([this.value()], arguments))
                        }
                        )
                    }),
                    m
                }
                function noop() {}
                var nH = createOver(arrayMap)
                  , nW = createOver(arrayEvery)
                  , nq = createOver(arraySome);
                function property(m) {
                    return isKey(m) ? baseProperty(toKey(m)) : function(R) {
                        return baseGet(R, m)
                    }
                }
                var nG = createRange()
                  , nZ = createRange(!0);
                function stubArray() {
                    return []
                }
                function stubFalse() {
                    return !1
                }
                var nY = createMathOperation(function(m, R) {
                    return m + R
                }, 0)
                  , nK = createRound("ceil")
                  , nJ = createMathOperation(function(m, R) {
                    return m / R
                }, 1)
                  , nX = createRound("floor")
                  , nQ = createMathOperation(function(m, R) {
                    return m * R
                }, 1)
                  , n0 = createRound("round")
                  , n1 = createMathOperation(function(m, R) {
                    return m - R
                }, 0);
                return lodash.after = function(m, R) {
                    if ("function" != typeof R)
                        throw new e5(U);
                    return m = toInteger(m),
                    function() {
                        if (--m < 1)
                            return R.apply(this, arguments)
                    }
                }
                ,
                lodash.ary = ary,
                lodash.assign = nh,
                lodash.assignIn = ng,
                lodash.assignInWith = nm,
                lodash.assignWith = ny,
                lodash.at = nv,
                lodash.before = before,
                lodash.bind = r3,
                lodash.bindAll = nB,
                lodash.bindKey = r4,
                lodash.castArray = function() {
                    if (!arguments.length)
                        return [];
                    var m = arguments[0];
                    return no(m) ? m : [m]
                }
                ,
                lodash.chain = chain,
                lodash.chunk = function(m, R, C) {
                    R = (C ? isIterateeCall(m, R, C) : L === R) ? 1 : t0(toInteger(R), 0);
                    var T = null == m ? 0 : m.length;
                    if (!T || R < 1)
                        return [];
                    for (var U = 0, B = 0, $ = eQ(tz(T / R)); U < T; )
                        $[B++] = baseSlice(m, U, U += R);
                    return $
                }
                ,
                lodash.compact = function(m) {
                    for (var R = -1, C = null == m ? 0 : m.length, T = 0, L = []; ++R < C; ) {
                        var U = m[R];
                        U && (L[T++] = U)
                    }
                    return L
                }
                ,
                lodash.concat = function() {
                    var m = arguments.length;
                    if (!m)
                        return [];
                    for (var R = eQ(m - 1), C = arguments[0], T = m; T--; )
                        R[T - 1] = arguments[T];
                    return arrayPush(no(C) ? copyArray(C) : [C], baseFlatten(R, 1))
                }
                ,
                lodash.cond = function(m) {
                    var R = null == m ? 0 : m.length
                      , C = getIteratee();
                    return m = R ? arrayMap(m, function(m) {
                        if ("function" != typeof m[1])
                            throw new e5(U);
                        return [C(m[0]), m[1]]
                    }) : [],
                    baseRest(function(C) {
                        for (var T = -1; ++T < R; ) {
                            var L = m[T];
                            if (apply(L[0], this, C))
                                return apply(L[1], this, C)
                        }
                    })
                }
                ,
                lodash.conforms = function(m) {
                    var R, C;
                    return C = keys(R = baseClone(m, 1)),
                    function(m) {
                        return baseConformsTo(m, R, C)
                    }
                }
                ,
                lodash.constant = constant,
                lodash.countBy = rZ,
                lodash.create = function(m, R) {
                    var C = rd(m);
                    return null == R ? C : baseAssign(C, R)
                }
                ,
                lodash.curry = function curry(m, R, C) {
                    R = C ? L : R;
                    var T = createWrap(m, 8, L, L, L, L, L, R);
                    return T.placeholder = curry.placeholder,
                    T
                }
                ,
                lodash.curryRight = function curryRight(m, R, C) {
                    R = C ? L : R;
                    var T = createWrap(m, 16, L, L, L, L, L, R);
                    return T.placeholder = curryRight.placeholder,
                    T
                }
                ,
                lodash.debounce = debounce,
                lodash.defaults = nb,
                lodash.defaultsDeep = nE,
                lodash.defer = r6,
                lodash.delay = r8,
                lodash.difference = rC,
                lodash.differenceBy = rT,
                lodash.differenceWith = rx,
                lodash.drop = function(m, R, C) {
                    var T = null == m ? 0 : m.length;
                    return T ? baseSlice(m, (R = C || L === R ? 1 : toInteger(R)) < 0 ? 0 : R, T) : []
                }
                ,
                lodash.dropRight = function(m, R, C) {
                    var T = null == m ? 0 : m.length;
                    return T ? baseSlice(m, 0, (R = T - (R = C || L === R ? 1 : toInteger(R))) < 0 ? 0 : R) : []
                }
                ,
                lodash.dropRightWhile = function(m, R) {
                    return m && m.length ? baseWhile(m, getIteratee(R, 3), !0, !0) : []
                }
                ,
                lodash.dropWhile = function(m, R) {
                    return m && m.length ? baseWhile(m, getIteratee(R, 3), !0) : []
                }
                ,
                lodash.fill = function(m, R, C, T) {
                    var U = null == m ? 0 : m.length;
                    return U ? (C && "number" != typeof C && isIterateeCall(m, R, C) && (C = 0,
                    T = U),
                    function(m, R, C, T) {
                        var U = m.length;
                        for ((C = toInteger(C)) < 0 && (C = -C > U ? 0 : U + C),
                        (T = L === T || T > U ? U : toInteger(T)) < 0 && (T += U),
                        T = C > T ? 0 : toLength(T); C < T; )
                            m[C++] = R;
                        return m
                    }(m, R, C, T)) : []
                }
                ,
                lodash.filter = function(m, R) {
                    return (no(m) ? arrayFilter : baseFilter)(m, getIteratee(R, 3))
                }
                ,
                lodash.flatMap = function(m, R) {
                    return baseFlatten(map(m, R), 1)
                }
                ,
                lodash.flatMapDeep = function(m, R) {
                    return baseFlatten(map(m, R), V)
                }
                ,
                lodash.flatMapDepth = function(m, R, C) {
                    return C = L === C ? 1 : toInteger(C),
                    baseFlatten(map(m, R), C)
                }
                ,
                lodash.flatten = flatten,
                lodash.flattenDeep = function(m) {
                    return (null == m ? 0 : m.length) ? baseFlatten(m, V) : []
                }
                ,
                lodash.flattenDepth = function(m, R) {
                    return (null == m ? 0 : m.length) ? baseFlatten(m, R = L === R ? 1 : toInteger(R)) : []
                }
                ,
                lodash.flip = function(m) {
                    return createWrap(m, 512)
                }
                ,
                lodash.flow = n$,
                lodash.flowRight = nF,
                lodash.fromPairs = function(m) {
                    for (var R = -1, C = null == m ? 0 : m.length, T = {}; ++R < C; ) {
                        var L = m[R];
                        T[L[0]] = L[1]
                    }
                    return T
                }
                ,
                lodash.functions = function(m) {
                    return null == m ? [] : baseFunctions(m, keys(m))
                }
                ,
                lodash.functionsIn = function(m) {
                    return null == m ? [] : baseFunctions(m, keysIn(m))
                }
                ,
                lodash.groupBy = rJ,
                lodash.initial = function(m) {
                    return (null == m ? 0 : m.length) ? baseSlice(m, 0, -1) : []
                }
                ,
                lodash.intersection = rL,
                lodash.intersectionBy = rN,
                lodash.intersectionWith = rM,
                lodash.invert = n_,
                lodash.invertBy = nS,
                lodash.invokeMap = rX,
                lodash.iteratee = iteratee,
                lodash.keyBy = rQ,
                lodash.keys = keys,
                lodash.keysIn = keysIn,
                lodash.map = map,
                lodash.mapKeys = function(m, R) {
                    var C = {};
                    return R = getIteratee(R, 3),
                    baseForOwn(m, function(m, T, L) {
                        baseAssignValue(C, R(m, T, L), m)
                    }),
                    C
                }
                ,
                lodash.mapValues = function(m, R) {
                    var C = {};
                    return R = getIteratee(R, 3),
                    baseForOwn(m, function(m, T, L) {
                        baseAssignValue(C, T, R(m, T, L))
                    }),
                    C
                }
                ,
                lodash.matches = function(m) {
                    return baseMatches(baseClone(m, 1))
                }
                ,
                lodash.matchesProperty = function(m, R) {
                    return baseMatchesProperty(m, baseClone(R, 1))
                }
                ,
                lodash.memoize = memoize,
                lodash.merge = nO,
                lodash.mergeWith = nw,
                lodash.method = nV,
                lodash.methodOf = nz,
                lodash.mixin = mixin,
                lodash.negate = negate,
                lodash.nthArg = function(m) {
                    return m = toInteger(m),
                    baseRest(function(R) {
                        return baseNth(R, m)
                    })
                }
                ,
                lodash.omit = nI,
                lodash.omitBy = function(m, R) {
                    return pickBy(m, negate(getIteratee(R)))
                }
                ,
                lodash.once = function(m) {
                    return before(2, m)
                }
                ,
                lodash.orderBy = function(m, R, C, T) {
                    return null == m ? [] : (no(R) || (R = null == R ? [] : [R]),
                    no(C = T ? L : C) || (C = null == C ? [] : [C]),
                    baseOrderBy(m, R, C))
                }
                ,
                lodash.over = nH,
                lodash.overArgs = r5,
                lodash.overEvery = nW,
                lodash.overSome = nq,
                lodash.partial = r9,
                lodash.partialRight = r7,
                lodash.partition = r0,
                lodash.pick = nP,
                lodash.pickBy = pickBy,
                lodash.property = property,
                lodash.propertyOf = function(m) {
                    return function(R) {
                        return null == m ? L : baseGet(m, R)
                    }
                }
                ,
                lodash.pull = rj,
                lodash.pullAll = pullAll,
                lodash.pullAllBy = function(m, R, C) {
                    return m && m.length && R && R.length ? basePullAll(m, R, getIteratee(C, 2)) : m
                }
                ,
                lodash.pullAllWith = function(m, R, C) {
                    return m && m.length && R && R.length ? basePullAll(m, R, L, C) : m
                }
                ,
                lodash.pullAt = rD,
                lodash.range = nG,
                lodash.rangeRight = nZ,
                lodash.rearg = ne,
                lodash.reject = function(m, R) {
                    return (no(m) ? arrayFilter : baseFilter)(m, negate(getIteratee(R, 3)))
                }
                ,
                lodash.remove = function(m, R) {
                    var C = [];
                    if (!(m && m.length))
                        return C;
                    var T = -1
                      , L = []
                      , U = m.length;
                    for (R = getIteratee(R, 3); ++T < U; ) {
                        var B = m[T];
                        R(B, T, m) && (C.push(B),
                        L.push(T))
                    }
                    return basePullAt(m, L),
                    C
                }
                ,
                lodash.rest = function(m, R) {
                    if ("function" != typeof m)
                        throw new e5(U);
                    return baseRest(m, R = L === R ? R : toInteger(R))
                }
                ,
                lodash.reverse = reverse,
                lodash.sampleSize = function(m, R, C) {
                    return R = (C ? isIterateeCall(m, R, C) : L === R) ? 1 : toInteger(R),
                    (no(m) ? function(m, R) {
                        return shuffleSelf(copyArray(m), baseClamp(R, 0, m.length))
                    }
                    : function(m, R) {
                        var C = values(m);
                        return shuffleSelf(C, baseClamp(R, 0, C.length))
                    }
                    )(m, R)
                }
                ,
                lodash.set = function(m, R, C) {
                    return null == m ? m : baseSet(m, R, C)
                }
                ,
                lodash.setWith = function(m, R, C, T) {
                    return T = "function" == typeof T ? T : L,
                    null == m ? m : baseSet(m, R, C, T)
                }
                ,
                lodash.shuffle = function(m) {
                    return (no(m) ? function(m) {
                        return shuffleSelf(copyArray(m))
                    }
                    : function(m) {
                        return shuffleSelf(values(m))
                    }
                    )(m)
                }
                ,
                lodash.slice = function(m, R, C) {
                    var T = null == m ? 0 : m.length;
                    return T ? (C && "number" != typeof C && isIterateeCall(m, R, C) ? (R = 0,
                    C = T) : (R = null == R ? 0 : toInteger(R),
                    C = L === C ? T : toInteger(C)),
                    baseSlice(m, R, C)) : []
                }
                ,
                lodash.sortBy = r1,
                lodash.sortedUniq = function(m) {
                    return m && m.length ? baseSortedUniq(m) : []
                }
                ,
                lodash.sortedUniqBy = function(m, R) {
                    return m && m.length ? baseSortedUniq(m, getIteratee(R, 2)) : []
                }
                ,
                lodash.split = function(m, R, C) {
                    return (C && "number" != typeof C && isIterateeCall(m, R, C) && (R = C = L),
                    C = L === C ? 4294967295 : C >>> 0) ? (m = toString(m)) && ("string" == typeof R || null != R && !nc(R)) && !(R = baseToString(R)) && hasUnicode(m) ? castSlice(stringToArray(m), 0, C) : m.split(R, C) : []
                }
                ,
                lodash.spread = function(m, R) {
                    if ("function" != typeof m)
                        throw new e5(U);
                    return R = null == R ? 0 : t0(toInteger(R), 0),
                    baseRest(function(C) {
                        var T = C[R]
                          , L = castSlice(C, 0, R);
                        return T && arrayPush(L, T),
                        apply(m, this, L)
                    })
                }
                ,
                lodash.tail = function(m) {
                    var R = null == m ? 0 : m.length;
                    return R ? baseSlice(m, 1, R) : []
                }
                ,
                lodash.take = function(m, R, C) {
                    return m && m.length ? baseSlice(m, 0, (R = C || L === R ? 1 : toInteger(R)) < 0 ? 0 : R) : []
                }
                ,
                lodash.takeRight = function(m, R, C) {
                    var T = null == m ? 0 : m.length;
                    return T ? baseSlice(m, (R = T - (R = C || L === R ? 1 : toInteger(R))) < 0 ? 0 : R, T) : []
                }
                ,
                lodash.takeRightWhile = function(m, R) {
                    return m && m.length ? baseWhile(m, getIteratee(R, 3), !1, !0) : []
                }
                ,
                lodash.takeWhile = function(m, R) {
                    return m && m.length ? baseWhile(m, getIteratee(R, 3)) : []
                }
                ,
                lodash.tap = function(m, R) {
                    return R(m),
                    m
                }
                ,
                lodash.throttle = function(m, R, C) {
                    var T = !0
                      , L = !0;
                    if ("function" != typeof m)
                        throw new e5(U);
                    return isObject(C) && (T = "leading"in C ? !!C.leading : T,
                    L = "trailing"in C ? !!C.trailing : L),
                    debounce(m, R, {
                        leading: T,
                        maxWait: R,
                        trailing: L
                    })
                }
                ,
                lodash.thru = thru,
                lodash.toArray = toArray,
                lodash.toPairs = nk,
                lodash.toPairsIn = nR,
                lodash.toPath = function(m) {
                    return no(m) ? arrayMap(m, toKey) : isSymbol(m) ? [m] : copyArray(rR(toString(m)))
                }
                ,
                lodash.toPlainObject = toPlainObject,
                lodash.transform = function(m, R, C) {
                    var T = no(m)
                      , L = T || na(m) || nf(m);
                    if (R = getIteratee(R, 4),
                    null == C) {
                        var U = m && m.constructor;
                        C = L ? T ? new U : [] : isObject(m) && isFunction(U) ? rd(th(m)) : {}
                    }
                    return (L ? arrayEach : baseForOwn)(m, function(m, T, L) {
                        return R(C, m, T, L)
                    }),
                    C
                }
                ,
                lodash.unary = function(m) {
                    return ary(m, 1)
                }
                ,
                lodash.union = rU,
                lodash.unionBy = rB,
                lodash.unionWith = r$,
                lodash.uniq = function(m) {
                    return m && m.length ? baseUniq(m) : []
                }
                ,
                lodash.uniqBy = function(m, R) {
                    return m && m.length ? baseUniq(m, getIteratee(R, 2)) : []
                }
                ,
                lodash.uniqWith = function(m, R) {
                    return R = "function" == typeof R ? R : L,
                    m && m.length ? baseUniq(m, L, R) : []
                }
                ,
                lodash.unset = function(m, R) {
                    return null == m || baseUnset(m, R)
                }
                ,
                lodash.unzip = unzip,
                lodash.unzipWith = unzipWith,
                lodash.update = function(m, R, C) {
                    return null == m ? m : baseUpdate(m, R, castFunction(C))
                }
                ,
                lodash.updateWith = function(m, R, C, T) {
                    return T = "function" == typeof T ? T : L,
                    null == m ? m : baseUpdate(m, R, castFunction(C), T)
                }
                ,
                lodash.values = values,
                lodash.valuesIn = function(m) {
                    return null == m ? [] : baseValues(m, keysIn(m))
                }
                ,
                lodash.without = rF,
                lodash.words = words,
                lodash.wrap = function(m, R) {
                    return r9(castFunction(R), m)
                }
                ,
                lodash.xor = rV,
                lodash.xorBy = rz,
                lodash.xorWith = rH,
                lodash.zip = rW,
                lodash.zipObject = function(m, R) {
                    return baseZipObject(m || [], R || [], assignValue)
                }
                ,
                lodash.zipObjectDeep = function(m, R) {
                    return baseZipObject(m || [], R || [], baseSet)
                }
                ,
                lodash.zipWith = rq,
                lodash.entries = nk,
                lodash.entriesIn = nR,
                lodash.extend = ng,
                lodash.extendWith = nm,
                mixin(lodash, lodash),
                lodash.add = nY,
                lodash.attempt = nU,
                lodash.camelCase = nC,
                lodash.capitalize = capitalize,
                lodash.ceil = nK,
                lodash.clamp = function(m, R, C) {
                    return L === C && (C = R,
                    R = L),
                    L !== C && (C = (C = toNumber(C)) == C ? C : 0),
                    L !== R && (R = (R = toNumber(R)) == R ? R : 0),
                    baseClamp(toNumber(m), R, C)
                }
                ,
                lodash.clone = function(m) {
                    return baseClone(m, 4)
                }
                ,
                lodash.cloneDeep = function(m) {
                    return baseClone(m, 5)
                }
                ,
                lodash.cloneDeepWith = function(m, R) {
                    return baseClone(m, 5, R = "function" == typeof R ? R : L)
                }
                ,
                lodash.cloneWith = function(m, R) {
                    return baseClone(m, 4, R = "function" == typeof R ? R : L)
                }
                ,
                lodash.conformsTo = function(m, R) {
                    return null == R || baseConformsTo(m, R, keys(R))
                }
                ,
                lodash.deburr = deburr,
                lodash.defaultTo = function(m, R) {
                    return null == m || m != m ? R : m
                }
                ,
                lodash.divide = nJ,
                lodash.endsWith = function(m, R, C) {
                    m = toString(m),
                    R = baseToString(R);
                    var T = m.length
                      , U = C = L === C ? T : baseClamp(toInteger(C), 0, T);
                    return (C -= R.length) >= 0 && m.slice(C, U) == R
                }
                ,
                lodash.eq = eq,
                lodash.escape = function(m) {
                    return (m = toString(m)) && ew.test(m) ? m.replace(eA, tW) : m
                }
                ,
                lodash.escapeRegExp = function(m) {
                    return (m = toString(m)) && eL.test(m) ? m.replace(ex, "\\$&") : m
                }
                ,
                lodash.every = function(m, R, C) {
                    var T = no(m) ? arrayEvery : baseEvery;
                    return C && isIterateeCall(m, R, C) && (R = L),
                    T(m, getIteratee(R, 3))
                }
                ,
                lodash.find = rY,
                lodash.findIndex = findIndex,
                lodash.findKey = function(m, R) {
                    return baseFindKey(m, getIteratee(R, 3), baseForOwn)
                }
                ,
                lodash.findLast = rK,
                lodash.findLastIndex = findLastIndex,
                lodash.findLastKey = function(m, R) {
                    return baseFindKey(m, getIteratee(R, 3), baseForOwnRight)
                }
                ,
                lodash.floor = nX,
                lodash.forEach = forEach,
                lodash.forEachRight = forEachRight,
                lodash.forIn = function(m, R) {
                    return null == m ? m : rg(m, getIteratee(R, 3), keysIn)
                }
                ,
                lodash.forInRight = function(m, R) {
                    return null == m ? m : rm(m, getIteratee(R, 3), keysIn)
                }
                ,
                lodash.forOwn = function(m, R) {
                    return m && baseForOwn(m, getIteratee(R, 3))
                }
                ,
                lodash.forOwnRight = function(m, R) {
                    return m && baseForOwnRight(m, getIteratee(R, 3))
                }
                ,
                lodash.get = get,
                lodash.gt = nt,
                lodash.gte = nr,
                lodash.has = function(m, R) {
                    return null != m && hasPath(m, R, baseHas)
                }
                ,
                lodash.hasIn = hasIn,
                lodash.head = head,
                lodash.identity = identity,
                lodash.includes = function(m, R, C, T) {
                    m = isArrayLike(m) ? m : values(m),
                    C = C && !T ? toInteger(C) : 0;
                    var L = m.length;
                    return C < 0 && (C = t0(L + C, 0)),
                    isString(m) ? C <= L && m.indexOf(R, C) > -1 : !!L && baseIndexOf(m, R, C) > -1
                }
                ,
                lodash.indexOf = function(m, R, C) {
                    var T = null == m ? 0 : m.length;
                    if (!T)
                        return -1;
                    var L = null == C ? 0 : toInteger(C);
                    return L < 0 && (L = t0(T + L, 0)),
                    baseIndexOf(m, R, L)
                }
                ,
                lodash.inRange = function(m, R, C) {
                    var T, U, B;
                    return R = toFinite(R),
                    L === C ? (C = R,
                    R = 0) : C = toFinite(C),
                    (T = m = toNumber(m)) >= t1(U = R, B = C) && T < t0(U, B)
                }
                ,
                lodash.invoke = nA,
                lodash.isArguments = nn,
                lodash.isArray = no,
                lodash.isArrayBuffer = ni,
                lodash.isArrayLike = isArrayLike,
                lodash.isArrayLikeObject = isArrayLikeObject,
                lodash.isBoolean = function(m) {
                    return !0 === m || !1 === m || isObjectLike(m) && baseGetTag(m) == Z
                }
                ,
                lodash.isBuffer = na,
                lodash.isDate = ns,
                lodash.isElement = function(m) {
                    return isObjectLike(m) && 1 === m.nodeType && !isPlainObject(m)
                }
                ,
                lodash.isEmpty = function(m) {
                    if (null == m)
                        return !0;
                    if (isArrayLike(m) && (no(m) || "string" == typeof m || "function" == typeof m.splice || na(m) || nf(m) || nn(m)))
                        return !m.length;
                    var R = rO(m);
                    if (R == Q || R == eo)
                        return !m.size;
                    if (isPrototype(m))
                        return !baseKeys(m).length;
                    for (var C in m)
                        if (tn.call(m, C))
                            return !1;
                    return !0
                }
                ,
                lodash.isEqual = function(m, R) {
                    return baseIsEqual(m, R)
                }
                ,
                lodash.isEqualWith = function(m, R, C) {
                    var T = (C = "function" == typeof C ? C : L) ? C(m, R) : L;
                    return L === T ? baseIsEqual(m, R, L, C) : !!T
                }
                ,
                lodash.isError = isError,
                lodash.isFinite = function(m) {
                    return "number" == typeof m && tJ(m)
                }
                ,
                lodash.isFunction = isFunction,
                lodash.isInteger = isInteger,
                lodash.isLength = isLength,
                lodash.isMap = nl,
                lodash.isMatch = function(m, R) {
                    return m === R || baseIsMatch(m, R, getMatchData(R))
                }
                ,
                lodash.isMatchWith = function(m, R, C) {
                    return C = "function" == typeof C ? C : L,
                    baseIsMatch(m, R, getMatchData(R), C)
                }
                ,
                lodash.isNaN = function(m) {
                    return isNumber(m) && m != +m
                }
                ,
                lodash.isNative = function(m) {
                    if (rw(m))
                        throw new e1("Unsupported core-js use. Try https://npms.io/search?q=ponyfill.");
                    return baseIsNative(m)
                }
                ,
                lodash.isNil = function(m) {
                    return null == m
                }
                ,
                lodash.isNull = function(m) {
                    return null === m
                }
                ,
                lodash.isNumber = isNumber,
                lodash.isObject = isObject,
                lodash.isObjectLike = isObjectLike,
                lodash.isPlainObject = isPlainObject,
                lodash.isRegExp = nc,
                lodash.isSafeInteger = function(m) {
                    return isInteger(m) && m >= -9007199254740991 && m <= 9007199254740991
                }
                ,
                lodash.isSet = nu,
                lodash.isString = isString,
                lodash.isSymbol = isSymbol,
                lodash.isTypedArray = nf,
                lodash.isUndefined = function(m) {
                    return L === m
                }
                ,
                lodash.isWeakMap = function(m) {
                    return isObjectLike(m) && rO(m) == es
                }
                ,
                lodash.isWeakSet = function(m) {
                    return isObjectLike(m) && "[object WeakSet]" == baseGetTag(m)
                }
                ,
                lodash.join = function(m, R) {
                    return null == m ? "" : tX.call(m, R)
                }
                ,
                lodash.kebabCase = nT,
                lodash.last = last,
                lodash.lastIndexOf = function(m, R, C) {
                    var T = null == m ? 0 : m.length;
                    if (!T)
                        return -1;
                    var U = T;
                    return L !== C && (U = (U = toInteger(C)) < 0 ? t0(T + U, 0) : t1(U, T - 1)),
                    R == R ? function(m, R, C) {
                        for (var T = C + 1; T-- && m[T] !== R; )
                            ;
                        return T
                    }(m, R, U) : baseFindIndex(m, baseIsNaN, U, !0)
                }
                ,
                lodash.lowerCase = nx,
                lodash.lowerFirst = nL,
                lodash.lt = nd,
                lodash.lte = np,
                lodash.max = function(m) {
                    return m && m.length ? baseExtremum(m, identity, baseGt) : L
                }
                ,
                lodash.maxBy = function(m, R) {
                    return m && m.length ? baseExtremum(m, getIteratee(R, 2), baseGt) : L
                }
                ,
                lodash.mean = function(m) {
                    return baseMean(m, identity)
                }
                ,
                lodash.meanBy = function(m, R) {
                    return baseMean(m, getIteratee(R, 2))
                }
                ,
                lodash.min = function(m) {
                    return m && m.length ? baseExtremum(m, identity, baseLt) : L
                }
                ,
                lodash.minBy = function(m, R) {
                    return m && m.length ? baseExtremum(m, getIteratee(R, 2), baseLt) : L
                }
                ,
                lodash.stubArray = stubArray,
                lodash.stubFalse = stubFalse,
                lodash.stubObject = function() {
                    return {}
                }
                ,
                lodash.stubString = function() {
                    return ""
                }
                ,
                lodash.stubTrue = function() {
                    return !0
                }
                ,
                lodash.multiply = nQ,
                lodash.nth = function(m, R) {
                    return m && m.length ? baseNth(m, toInteger(R)) : L
                }
                ,
                lodash.noConflict = function() {
                    return tT._ === this && (tT._ = tl),
                    this
                }
                ,
                lodash.noop = noop,
                lodash.now = r2,
                lodash.pad = function(m, R, C) {
                    m = toString(m);
                    var T = (R = toInteger(R)) ? stringSize(m) : 0;
                    if (!R || T >= R)
                        return m;
                    var L = (R - T) / 2;
                    return createPadding(tZ(L), C) + m + createPadding(tz(L), C)
                }
                ,
                lodash.padEnd = function(m, R, C) {
                    m = toString(m);
                    var T = (R = toInteger(R)) ? stringSize(m) : 0;
                    return R && T < R ? m + createPadding(R - T, C) : m
                }
                ,
                lodash.padStart = function(m, R, C) {
                    m = toString(m);
                    var T = (R = toInteger(R)) ? stringSize(m) : 0;
                    return R && T < R ? createPadding(R - T, C) + m : m
                }
                ,
                lodash.parseInt = function(m, R, C) {
                    return C || null == R ? R = 0 : R && (R = +R),
                    t3(toString(m).replace(eN, ""), R || 0)
                }
                ,
                lodash.random = function(m, R, C) {
                    if (C && "boolean" != typeof C && isIterateeCall(m, R, C) && (R = C = L),
                    L === C && ("boolean" == typeof R ? (C = R,
                    R = L) : "boolean" == typeof m && (C = m,
                    m = L)),
                    L === m && L === R ? (m = 0,
                    R = 1) : (m = toFinite(m),
                    L === R ? (R = m,
                    m = 0) : R = toFinite(R)),
                    m > R) {
                        var T = m;
                        m = R,
                        R = T
                    }
                    if (C || m % 1 || R % 1) {
                        var U = t4();
                        return t1(m + U * (R - m + tP("1e-" + ((U + "").length - 1))), R)
                    }
                    return baseRandom(m, R)
                }
                ,
                lodash.reduce = function(m, R, C) {
                    var T = no(m) ? arrayReduce : baseReduce
                      , L = arguments.length < 3;
                    return T(m, getIteratee(R, 4), C, L, rp)
                }
                ,
                lodash.reduceRight = function(m, R, C) {
                    var T = no(m) ? arrayReduceRight : baseReduce
                      , L = arguments.length < 3;
                    return T(m, getIteratee(R, 4), C, L, rh)
                }
                ,
                lodash.repeat = function(m, R, C) {
                    return R = (C ? isIterateeCall(m, R, C) : L === R) ? 1 : toInteger(R),
                    baseRepeat(toString(m), R)
                }
                ,
                lodash.replace = function() {
                    var m = arguments
                      , R = toString(m[0]);
                    return m.length < 3 ? R : R.replace(m[1], m[2])
                }
                ,
                lodash.result = function(m, R, C) {
                    R = castPath(R, m);
                    var T = -1
                      , U = R.length;
                    for (U || (U = 1,
                    m = L); ++T < U; ) {
                        var B = null == m ? L : m[toKey(R[T])];
                        L === B && (T = U,
                        B = C),
                        m = isFunction(B) ? B.call(m) : B
                    }
                    return m
                }
                ,
                lodash.round = n0,
                lodash.runInContext = runInContext,
                lodash.sample = function(m) {
                    return (no(m) ? arraySample : function(m) {
                        return arraySample(values(m))
                    }
                    )(m)
                }
                ,
                lodash.size = function(m) {
                    if (null == m)
                        return 0;
                    if (isArrayLike(m))
                        return isString(m) ? stringSize(m) : m.length;
                    var R = rO(m);
                    return R == Q || R == eo ? m.size : baseKeys(m).length
                }
                ,
                lodash.snakeCase = nN,
                lodash.some = function(m, R, C) {
                    var T = no(m) ? arraySome : baseSome;
                    return C && isIterateeCall(m, R, C) && (R = L),
                    T(m, getIteratee(R, 3))
                }
                ,
                lodash.sortedIndex = function(m, R) {
                    return baseSortedIndex(m, R)
                }
                ,
                lodash.sortedIndexBy = function(m, R, C) {
                    return baseSortedIndexBy(m, R, getIteratee(C, 2))
                }
                ,
                lodash.sortedIndexOf = function(m, R) {
                    var C = null == m ? 0 : m.length;
                    if (C) {
                        var T = baseSortedIndex(m, R);
                        if (T < C && eq(m[T], R))
                            return T
                    }
                    return -1
                }
                ,
                lodash.sortedLastIndex = function(m, R) {
                    return baseSortedIndex(m, R, !0)
                }
                ,
                lodash.sortedLastIndexBy = function(m, R, C) {
                    return baseSortedIndexBy(m, R, getIteratee(C, 2), !0)
                }
                ,
                lodash.sortedLastIndexOf = function(m, R) {
                    if (null == m ? 0 : m.length) {
                        var C = baseSortedIndex(m, R, !0) - 1;
                        if (eq(m[C], R))
                            return C
                    }
                    return -1
                }
                ,
                lodash.startCase = nM,
                lodash.startsWith = function(m, R, C) {
                    return m = toString(m),
                    C = null == C ? 0 : baseClamp(toInteger(C), 0, m.length),
                    R = baseToString(R),
                    m.slice(C, C + R.length) == R
                }
                ,
                lodash.subtract = n1,
                lodash.sum = function(m) {
                    return m && m.length ? baseSum(m, identity) : 0
                }
                ,
                lodash.sumBy = function(m, R) {
                    return m && m.length ? baseSum(m, getIteratee(R, 2)) : 0
                }
                ,
                lodash.template = function(m, R, C) {
                    var T = lodash.templateSettings;
                    C && isIterateeCall(m, R, C) && (R = L),
                    m = toString(m),
                    R = nm({}, R, T, customDefaultsAssignIn);
                    var U, B, $ = nm({}, R.imports, T.imports, customDefaultsAssignIn), V = keys($), H = baseValues($, V), W = 0, q = R.interpolate || eJ, G = "__p += '", Z = e6((R.escape || eJ).source + "|" + q.source + "|" + (q === ek ? eV : eJ).source + "|" + (R.evaluate || eJ).source + "|$", "g"), Y = "//# sourceURL=" + (tn.call(R, "sourceURL") ? (R.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++tA + "]") + "\n";
                    m.replace(Z, function(R, C, T, L, $, V) {
                        return T || (T = L),
                        G += m.slice(W, V).replace(eX, escapeStringChar),
                        C && (U = !0,
                        G += "' +\n__e(" + C + ") +\n'"),
                        $ && (B = !0,
                        G += "';\n" + $ + ";\n__p += '"),
                        T && (G += "' +\n((__t = (" + T + ")) == null ? '' : __t) +\n'"),
                        W = V + R.length,
                        R
                    }),
                    G += "';\n";
                    var K = tn.call(R, "variable") && R.variable;
                    if (K) {
                        if (e$.test(K))
                            throw new e1("Invalid `variable` option passed into `_.template`")
                    } else
                        G = "with (obj) {\n" + G + "\n}\n";
                    G = (B ? G.replace(eb, "") : G).replace(eE, "$1").replace(e_, "$1;"),
                    G = "function(" + (K || "obj") + ") {\n" + (K ? "" : "obj || (obj = {});\n") + "var __t, __p = ''" + (U ? ", __e = _.escape" : "") + (B ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ";\n") + G + "return __p\n}";
                    var J = nU(function() {
                        return e2(V, Y + "return " + G).apply(L, H)
                    });
                    if (J.source = G,
                    isError(J))
                        throw J;
                    return J
                }
                ,
                lodash.times = function(m, R) {
                    if ((m = toInteger(m)) < 1 || m > 9007199254740991)
                        return [];
                    var C = 4294967295
                      , T = t1(m, 4294967295);
                    R = getIteratee(R),
                    m -= 4294967295;
                    for (var L = baseTimes(T, R); ++C < m; )
                        R(C);
                    return L
                }
                ,
                lodash.toFinite = toFinite,
                lodash.toInteger = toInteger,
                lodash.toLength = toLength,
                lodash.toLower = function(m) {
                    return toString(m).toLowerCase()
                }
                ,
                lodash.toNumber = toNumber,
                lodash.toSafeInteger = function(m) {
                    return m ? baseClamp(toInteger(m), -9007199254740991, 9007199254740991) : 0 === m ? m : 0
                }
                ,
                lodash.toString = toString,
                lodash.toUpper = function(m) {
                    return toString(m).toUpperCase()
                }
                ,
                lodash.trim = function(m, R, C) {
                    if ((m = toString(m)) && (C || L === R))
                        return baseTrim(m);
                    if (!m || !(R = baseToString(R)))
                        return m;
                    var T = stringToArray(m)
                      , U = stringToArray(R)
                      , B = charsStartIndex(T, U)
                      , $ = charsEndIndex(T, U) + 1;
                    return castSlice(T, B, $).join("")
                }
                ,
                lodash.trimEnd = function(m, R, C) {
                    if ((m = toString(m)) && (C || L === R))
                        return m.slice(0, trimmedEndIndex(m) + 1);
                    if (!m || !(R = baseToString(R)))
                        return m;
                    var T = stringToArray(m)
                      , U = charsEndIndex(T, stringToArray(R)) + 1;
                    return castSlice(T, 0, U).join("")
                }
                ,
                lodash.trimStart = function(m, R, C) {
                    if ((m = toString(m)) && (C || L === R))
                        return m.replace(eN, "");
                    if (!m || !(R = baseToString(R)))
                        return m;
                    var T = stringToArray(m)
                      , U = charsStartIndex(T, stringToArray(R));
                    return castSlice(T, U).join("")
                }
                ,
                lodash.truncate = function(m, R) {
                    var C = 30
                      , T = "...";
                    if (isObject(R)) {
                        var U = "separator"in R ? R.separator : U;
                        C = "length"in R ? toInteger(R.length) : C,
                        T = "omission"in R ? baseToString(R.omission) : T
                    }
                    var B = (m = toString(m)).length;
                    if (hasUnicode(m)) {
                        var $ = stringToArray(m);
                        B = $.length
                    }
                    if (C >= B)
                        return m;
                    var V = C - stringSize(T);
                    if (V < 1)
                        return T;
                    var H = $ ? castSlice($, 0, V).join("") : m.slice(0, V);
                    if (L === U)
                        return H + T;
                    if ($ && (V += H.length - V),
                    nc(U)) {
                        if (m.slice(V).search(U)) {
                            var W, q = H;
                            for (U.global || (U = e6(U.source, toString(ez.exec(U)) + "g")),
                            U.lastIndex = 0; W = U.exec(q); )
                                var G = W.index;
                            H = H.slice(0, L === G ? V : G)
                        }
                    } else if (m.indexOf(baseToString(U), V) != V) {
                        var Z = H.lastIndexOf(U);
                        Z > -1 && (H = H.slice(0, Z))
                    }
                    return H + T
                }
                ,
                lodash.unescape = function(m) {
                    return (m = toString(m)) && eO.test(m) ? m.replace(eS, tq) : m
                }
                ,
                lodash.uniqueId = function(m) {
                    var R = ++to;
                    return toString(m) + R
                }
                ,
                lodash.upperCase = nj,
                lodash.upperFirst = nD,
                lodash.each = forEach,
                lodash.eachRight = forEachRight,
                lodash.first = head,
                mixin(lodash, (eM = {},
                baseForOwn(lodash, function(m, R) {
                    tn.call(lodash.prototype, R) || (eM[R] = m)
                }),
                eM), {
                    chain: !1
                }),
                lodash.VERSION = "4.17.21",
                arrayEach(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(m) {
                    lodash[m].placeholder = lodash
                }),
                arrayEach(["drop", "take"], function(m, R) {
                    LazyWrapper.prototype[m] = function(C) {
                        C = L === C ? 1 : t0(toInteger(C), 0);
                        var T = this.__filtered__ && !R ? new LazyWrapper(this) : this.clone();
                        return T.__filtered__ ? T.__takeCount__ = t1(C, T.__takeCount__) : T.__views__.push({
                            size: t1(C, 4294967295),
                            type: m + (T.__dir__ < 0 ? "Right" : "")
                        }),
                        T
                    }
                    ,
                    LazyWrapper.prototype[m + "Right"] = function(R) {
                        return this.reverse()[m](R).reverse()
                    }
                }),
                arrayEach(["filter", "map", "takeWhile"], function(m, R) {
                    var C = R + 1
                      , T = 1 == C || 3 == C;
                    LazyWrapper.prototype[m] = function(m) {
                        var R = this.clone();
                        return R.__iteratees__.push({
                            iteratee: getIteratee(m, 3),
                            type: C
                        }),
                        R.__filtered__ = R.__filtered__ || T,
                        R
                    }
                }),
                arrayEach(["head", "last"], function(m, R) {
                    var C = "take" + (R ? "Right" : "");
                    LazyWrapper.prototype[m] = function() {
                        return this[C](1).value()[0]
                    }
                }),
                arrayEach(["initial", "tail"], function(m, R) {
                    var C = "drop" + (R ? "" : "Right");
                    LazyWrapper.prototype[m] = function() {
                        return this.__filtered__ ? new LazyWrapper(this) : this[C](1)
                    }
                }),
                LazyWrapper.prototype.compact = function() {
                    return this.filter(identity)
                }
                ,
                LazyWrapper.prototype.find = function(m) {
                    return this.filter(m).head()
                }
                ,
                LazyWrapper.prototype.findLast = function(m) {
                    return this.reverse().find(m)
                }
                ,
                LazyWrapper.prototype.invokeMap = baseRest(function(m, R) {
                    return "function" == typeof m ? new LazyWrapper(this) : this.map(function(C) {
                        return baseInvoke(C, m, R)
                    })
                }),
                LazyWrapper.prototype.reject = function(m) {
                    return this.filter(negate(getIteratee(m)))
                }
                ,
                LazyWrapper.prototype.slice = function(m, R) {
                    m = toInteger(m);
                    var C = this;
                    return C.__filtered__ && (m > 0 || R < 0) ? new LazyWrapper(C) : (m < 0 ? C = C.takeRight(-m) : m && (C = C.drop(m)),
                    L !== R && (C = (R = toInteger(R)) < 0 ? C.dropRight(-R) : C.take(R - m)),
                    C)
                }
                ,
                LazyWrapper.prototype.takeRightWhile = function(m) {
                    return this.reverse().takeWhile(m).reverse()
                }
                ,
                LazyWrapper.prototype.toArray = function() {
                    return this.take(4294967295)
                }
                ,
                baseForOwn(LazyWrapper.prototype, function(m, R) {
                    var C = /^(?:filter|find|map|reject)|While$/.test(R)
                      , T = /^(?:head|last)$/.test(R)
                      , U = lodash[T ? "take" + ("last" == R ? "Right" : "") : R]
                      , B = T || /^find/.test(R);
                    U && (lodash.prototype[R] = function() {
                        var R = this.__wrapped__
                          , $ = T ? [1] : arguments
                          , V = R instanceof LazyWrapper
                          , H = $[0]
                          , W = V || no(R)
                          , interceptor = function(m) {
                            var R = U.apply(lodash, arrayPush([m], $));
                            return T && q ? R[0] : R
                        };
                        W && C && "function" == typeof H && 1 != H.length && (V = W = !1);
                        var q = this.__chain__
                          , G = !!this.__actions__.length
                          , Z = B && !q
                          , Y = V && !G;
                        if (!B && W) {
                            R = Y ? R : new LazyWrapper(this);
                            var K = m.apply(R, $);
                            return K.__actions__.push({
                                func: thru,
                                args: [interceptor],
                                thisArg: L
                            }),
                            new LodashWrapper(K,q)
                        }
                        return Z && Y ? m.apply(this, $) : (K = this.thru(interceptor),
                        Z ? T ? K.value()[0] : K.value() : K)
                    }
                    )
                }),
                arrayEach(["pop", "push", "shift", "sort", "splice", "unshift"], function(m) {
                    var R = e9[m]
                      , C = /^(?:push|sort|unshift)$/.test(m) ? "tap" : "thru"
                      , T = /^(?:pop|shift)$/.test(m);
                    lodash.prototype[m] = function() {
                        var m = arguments;
                        if (T && !this.__chain__) {
                            var L = this.value();
                            return R.apply(no(L) ? L : [], m)
                        }
                        return this[C](function(C) {
                            return R.apply(no(C) ? C : [], m)
                        })
                    }
                }),
                baseForOwn(LazyWrapper.prototype, function(m, R) {
                    var C = lodash[R];
                    if (C) {
                        var T = C.name + "";
                        tn.call(rn, T) || (rn[T] = []),
                        rn[T].push({
                            name: R,
                            func: C
                        })
                    }
                }),
                rn[createHybrid(L, 2).name] = [{
                    name: "wrapper",
                    func: L
                }],
                LazyWrapper.prototype.clone = function() {
                    var m = new LazyWrapper(this.__wrapped__);
                    return m.__actions__ = copyArray(this.__actions__),
                    m.__dir__ = this.__dir__,
                    m.__filtered__ = this.__filtered__,
                    m.__iteratees__ = copyArray(this.__iteratees__),
                    m.__takeCount__ = this.__takeCount__,
                    m.__views__ = copyArray(this.__views__),
                    m
                }
                ,
                LazyWrapper.prototype.reverse = function() {
                    if (this.__filtered__) {
                        var m = new LazyWrapper(this);
                        m.__dir__ = -1,
                        m.__filtered__ = !0
                    } else
                        m = this.clone(),
                        m.__dir__ *= -1;
                    return m
                }
                ,
                LazyWrapper.prototype.value = function() {
                    var m = this.__wrapped__.value()
                      , R = this.__dir__
                      , C = no(m)
                      , T = R < 0
                      , L = C ? m.length : 0
                      , U = function(m, R, C) {
                        for (var T = -1, L = C.length; ++T < L; ) {
                            var U = C[T]
                              , B = U.size;
                            switch (U.type) {
                            case "drop":
                                m += B;
                                break;
                            case "dropRight":
                                R -= B;
                                break;
                            case "take":
                                R = t1(R, m + B);
                                break;
                            case "takeRight":
                                m = t0(m, R - B)
                            }
                        }
                        return {
                            start: m,
                            end: R
                        }
                    }(0, L, this.__views__)
                      , B = U.start
                      , $ = U.end
                      , V = $ - B
                      , H = T ? $ : B - 1
                      , W = this.__iteratees__
                      , q = W.length
                      , G = 0
                      , Z = t1(V, this.__takeCount__);
                    if (!C || !T && L == V && Z == V)
                        return baseWrapperValue(m, this.__actions__);
                    var Y = [];
                    e: for (; V-- && G < Z; ) {
                        for (var K = -1, J = m[H += R]; ++K < q; ) {
                            var X = W[K]
                              , Q = X.iteratee
                              , ee = X.type
                              , et = Q(J);
                            if (2 == ee)
                                J = et;
                            else if (!et) {
                                if (1 == ee)
                                    continue e;
                                break e
                            }
                        }
                        Y[G++] = J
                    }
                    return Y
                }
                ,
                lodash.prototype.at = rG,
                lodash.prototype.chain = function() {
                    return chain(this)
                }
                ,
                lodash.prototype.commit = function() {
                    return new LodashWrapper(this.value(),this.__chain__)
                }
                ,
                lodash.prototype.next = function() {
                    L === this.__values__ && (this.__values__ = toArray(this.value()));
                    var m = this.__index__ >= this.__values__.length
                      , R = m ? L : this.__values__[this.__index__++];
                    return {
                        done: m,
                        value: R
                    }
                }
                ,
                lodash.prototype.plant = function(m) {
                    for (var R, C = this; C instanceof baseLodash; ) {
                        var T = wrapperClone(C);
                        T.__index__ = 0,
                        T.__values__ = L,
                        R ? U.__wrapped__ = T : R = T;
                        var U = T;
                        C = C.__wrapped__
                    }
                    return U.__wrapped__ = m,
                    R
                }
                ,
                lodash.prototype.reverse = function() {
                    var m = this.__wrapped__;
                    if (m instanceof LazyWrapper) {
                        var R = m;
                        return this.__actions__.length && (R = new LazyWrapper(this)),
                        (R = R.reverse()).__actions__.push({
                            func: thru,
                            args: [reverse],
                            thisArg: L
                        }),
                        new LodashWrapper(R,this.__chain__)
                    }
                    return this.thru(reverse)
                }
                ,
                lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = function() {
                    return baseWrapperValue(this.__wrapped__, this.__actions__)
                }
                ,
                lodash.prototype.first = lodash.prototype.head,
                tR && (lodash.prototype[tR] = function() {
                    return this
                }
                ),
                lodash
            }();
            tT._ = tG,
            L !== (T = (function() {
                return tG
            }
            ).call(R, C, R, m)) && (m.exports = T)
        }
        ).call(this)
    },
    88306: function(m, R, C) {
        var T = C(83369);
        function memoize(m, R) {
            if ("function" != typeof m || null != R && "function" != typeof R)
                throw TypeError("Expected a function");
            var memoized = function() {
                var C = arguments
                  , T = R ? R.apply(this, C) : C[0]
                  , L = memoized.cache;
                if (L.has(T))
                    return L.get(T);
                var U = m.apply(this, C);
                return memoized.cache = L.set(T, U) || L,
                U
            };
            return memoized.cache = new (memoize.Cache || T),
            memoized
        }
        memoize.Cache = T,
        m.exports = memoize
    },
    7771: function(m, R, C) {
        var T = C(55639);
        m.exports = function() {
            return T.Date.now()
        }
    },
    36968: function(m, R, C) {
        var T = C(10611);
        m.exports = function(m, R, C) {
            return null == m ? m : T(m, R, C)
        }
    },
    95062: function(m) {
        m.exports = function() {
            return !1
        }
    },
    23493: function(m, R, C) {
        var T = C(23279)
          , L = C(13218);
        m.exports = function(m, R, C) {
            var U = !0
              , B = !0;
            if ("function" != typeof m)
                throw TypeError("Expected a function");
            return L(C) && (U = "leading"in C ? !!C.leading : U,
            B = "trailing"in C ? !!C.trailing : B),
            T(m, R, {
                leading: U,
                maxWait: R,
                trailing: B
            })
        }
    },
    14841: function(m, R, C) {
        var T = C(27561)
          , L = C(13218)
          , U = C(33448)
          , B = 0 / 0
          , $ = /^[-+]0x[0-9a-f]+$/i
          , V = /^0b[01]+$/i
          , H = /^0o[0-7]+$/i
          , W = parseInt;
        m.exports = function(m) {
            if ("number" == typeof m)
                return m;
            if (U(m))
                return B;
            if (L(m)) {
                var R = "function" == typeof m.valueOf ? m.valueOf() : m;
                m = L(R) ? R + "" : R
            }
            if ("string" != typeof m)
                return 0 === m ? m : +m;
            m = T(m);
            var C = V.test(m);
            return C || H.test(m) ? W(m.slice(2), C ? 2 : 8) : $.test(m) ? B : +m
        }
    },
    79833: function(m, R, C) {
        var T = C(80531);
        m.exports = function(m) {
            return null == m ? "" : T(m)
        }
    },
    83454: function(m, R, C) {
        "use strict";
        var T, L;
        m.exports = (null == (T = C.g.process) ? void 0 : T.env) && "object" == typeof (null == (L = C.g.process) ? void 0 : L.env) ? C.g.process : C(77663)
    },
    6840: function(m, R, C) {
        (window.__NEXT_P = window.__NEXT_P || []).push(["/_app", function() {
            return C(10333)
        }
        ])
    },
    61036: function(m, R, C) {
        "use strict";
        C.d(R, {
            Bf: function() {
                return handleShare
            },
            Fc: function() {
                return getSpeckMapId
            },
            HX: function() {
                return cached
            },
            J2: function() {
                return getItemImage
            },
            Kt: function() {
                return formatDisplayInfo
            },
            Zo: function() {
                return formatTimeRemaining
            },
            je: function() {
                return Capitalize
            },
            x9: function() {
                return duration
            },
            xn: function() {
                return arrayToMap
            }
        });
        var T = C(34853)
          , L = C(70247)
          , U = C(83928)
          , B = C(80535)
          , $ = C(77497);
        function duration(m) {
            let {days: R=0, hours: C=0, minutes: T=0, seconds: L=0, ms: U=0} = m;
            return U + 1e3 * L + 6e4 * T + 36e5 * C + 864e5 * R
        }
        let V = {};
        async function cached(m, R) {
            var C;
            let T = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : duration({
                minutes: 2
            })
              , L = (null === (C = V[m]) || void 0 === C ? void 0 : C.timestamp) || 0;
            if (Date.now() - L > T) {
                let C = await R()
                  , T = Date.now();
                V[m] = {
                    result: C,
                    timestamp: T
                }
            }
            return V[m].result
        }
        function formatDisplayInfo(m) {
            var R, C;
            let L = null == m ? void 0 : null === (R = m.displayInfo) || void 0 === R ? void 0 : R.format;
            return L && (L = T.ZP.t(L, {
                ns: "ui"
            }),
            null === (C = m.displayInfo.values) || void 0 === C || C.forEach((m,R)=>{
                L = L.replace("{".concat(R, "}"), null == m ? void 0 : m.toString())
            }
            )),
            L
        }
        let formatTimeAsString = (m,R,C,T)=>{
            let L = "";
            return m > 0 && (L += "".concat(m, "d ")),
            R > 0 && (L += "".concat(R, "h ")),
            C > 0 && (L += "".concat(C, "m ")),
            0 === m && 0 === R && 0 === C && T < 60 && T >= 0 && (L = "".concat(T, "s")),
            L
        }
        ;
        function formatTimeRemaining(m) {
            return m < 0 || "number" != typeof m || Number.isNaN(m) ? "..." : formatTimeAsString(Math.floor(m / 86400), Math.floor(m / 3600 % 24), Math.floor(m / 60 % 60), Math.floor(m % 60))
        }
        function Capitalize(m) {
            return m[0].toUpperCase() + m.slice(1)
        }
        function arrayToMap(m, R) {
            let C = new Map;
            return m.forEach(m=>{
                C.set(m[R].toString(), m)
            }
            ),
            C
        }
        function getItemImage(m, R) {
            let C = {
                width: 32,
                height: 32,
                image: null == m ? void 0 : m.image,
                scale: 3
            };
            if (m && R) {
                var T, B, $, V;
                if (null === (T = m.onUse) || void 0 === T ? void 0 : T.placeObject) {
                    let R = L.Z.getGameObject(m.onUse.placeObject);
                    (null == R ? void 0 : null === (B = R.sprite) || void 0 === B ? void 0 : B.image) && (C.image = R.sprite.image,
                    C.width = null === ($ = R.sprite.size) || void 0 === $ ? void 0 : $.width,
                    C.height = null === (V = R.sprite.size) || void 0 === V ? void 0 : V.height,
                    C.height <= 40 && C.width <= 40 ? C.scale = 3 : C.height <= 90 && C.width <= 90 ? C.scale = 2 : C.scale = 1)
                }
            }
            return C.image = (0,
            U.b7)(C.image),
            C
        }
        let handleShare = (m,R)=>{
            navigator.share ? navigator.share({
                ...R ? {
                    title: R
                } : {},
                url: m
            }).then(()=>{}
            ).catch(console.error) : navigator.clipboard && (navigator.clipboard.writeText(m),
            B.e.set($.W_, [{
                source: "other",
                text: {
                    id: "Link Copied to Clipboard"
                }
            }]))
        }
          , getSpeckMapId = m=>null == m ? void 0 : m.find(m=>/rent/gi.test(m))
    },
    42379: function(m, R, C) {
        "use strict";
        C.d(R, {
            LB: function() {
                return U
            },
            Yx: function() {
                return L
            },
            oQ: function() {
                return T
            }
        });
        let T = !0
          , L = !1
          , U = "".concat("https", "://").concat("pixels-server.pixels.xyz")
    },
    71343: function(m, R, C) {
        "use strict";
        var T, L;
        C.d(R, {
            m: function() {
                return T
            }
        }),
        (L = T || (T = {})).timeSync = "timeSync",
        L.joinRoom = "joinRoom",
        L.sendMapLibrary = "sendMapLibrary",
        L.moveSelfPlayer = "mv",
        L.swapOrCombineInventorySlots = "swapOrCombineInventorySlots",
        L.changeEquipmentBar = "changeEquipmentBar",
        L.addMessageToChat = "addMessageToChat",
        L.setTypingState = "setTypingState",
        L.setTosAccepted = "setTosAccepted",
        L.playerNotification = "playerNotification",
        L.receiveMessageInChat = "receiveMessageInChat",
        L.setAvatar = "setAvatar",
        L.setPet = "setPet",
        L.setPetName = "setPetName",
        L.useItem = "ui",
        L.useItemError = "useItemError",
        L.talkToNPC = "talkToNPC",
        L.clickEntity = "clickEntity",
        L.closeDialog = "closeDialog",
        L.collideWithObject = "collideWithObject",
        L.teleportPlayer = "teleportPlayer",
        L.timerCheck = "timerCheck",
        L.collectMailboxItem = "collectMailboxItem",
        L.fetchMailbox = "fetchMailbox",
        L.subscribe = "subscribe",
        L.rentFarm = "rentFarm",
        L.buyStoreItem = "buyStoreItem",
        L.sellStoreItem = "sellStoreItem",
        L.updateMapMembers = "updateMapMembers",
        L.updateRolesAndPermissions = "updateRolesAndPermissions",
        L.updateRoomRestrictions = "updateRoomRestrictions",
        L.updateMapListing = "updateMapListing",
        L.claimNftMap = "claimNftMap",
        L.updateRoomName = "updateRoomName",
        L.updatePlayer = "updatePlayer",
        L.bookmarkMap = "bookmarkMap",
        L.buildObject = "buildObject",
        L.buildTile = "buildTile",
        L.buildEntity = "buildEntity",
        L.upgradeFarm = "upgradeFarm",
        L.presentUI = "presentUI",
        L.clientCmd = "clientCmd",
        L.playerAction = "playerAction",
        L.trade = "trade",
        L.marketplace = "marketplace",
        L.reportPlayer = "reportPlayer",
        L.mintUgc = "mintUgc",
        L.findNFTs = "findNFTs",
        L.sellOrders = "sellOrders",
        L.sellOrderFill = "sellOrderFill",
        L.sellOrderFetch = "sellOrderFetch",
        L.sellOrderReset = "sellOrderReset"
    },
    79274: function(m, R, C) {
        "use strict";
        var T, L;
        C.d(R, {
            eA: function() {
                return V
            },
            h3: function() {
                return U
            },
            nA: function() {
                return B
            },
            oi: function() {
                return $
            }
        }),
        (L = T || (T = {})).forge = "forge",
        L.cooking = "cooking",
        L.woodwork = "woodwork",
        L.windmill = "windmill",
        L.textile_mill = "textile_mill",
        L.kiln = "kiln",
        L.quantum_recombinator = "quantum_recombinator",
        L.winery = "winery",
        L.industries = "industries",
        L.gridcraftManufacturing = "gridcraftManufacturing",
        L.gridcraftPacking = "gridcraftPacking",
        L.pattyMaker = "pattyMaker",
        L.foodProcessor = "foodProcessor",
        L.grill = "grill",
        L.assemblyTable = "assemblyTable",
        L.deepFryer = "deepFryer";
        let U = Object.keys(T)
          , B = ["farming", "cooking", "woodwork", "granger", "forestry", "ceramicist", "beekeeping", "textiler", "aviculture", "redifferentiator", "slugger", "winemaking", "mining", "business", "petcare", "fishing", "exploration"]
          , $ = {
            forge: "ceramicist",
            cooking: "cooking",
            woodwork: "woodwork",
            windmill: "granger",
            textile_mill: "textiler",
            kiln: "ceramicist",
            quantum_recombinator: "redifferentiator",
            winery: "winemaking",
            industries: "redifferentiator",
            gridcraftManufacturing: "business",
            gridcraftPacking: "business",
            pattyMaker: "cooking",
            foodProcessor: "cooking",
            grill: "cooking",
            assemblyTable: "cooking",
            deepFryer: "cooking"
        }
          , V = {
            ceramicist: !0,
            cooking: !0,
            woodwork: !0,
            granger: !0,
            textiler: !0,
            redifferentiator: !0,
            winemaking: !0,
            forestry: !0,
            beekeeping: !0,
            aviculture: !0,
            farming: !0,
            mining: !0,
            slugger: !0,
            business: !0,
            petcare: !0,
            fishing: !0,
            exploration: !0
        }
    },
    51465: function(m, R, C) {
        "use strict";
        var T, L;
        C.d(R, {
            m: function() {
                return T
            }
        }),
        (L = T || (T = {}))[L.loop = 1] = "loop",
        L[L.click = 2] = "click",
        L[L.approach = 4] = "approach",
        L[L.approachloop = 5] = "approachloop"
    },
    64939: function(m, R, C) {
        "use strict";
        C.d(R, {
            m3: function() {
                return T.m
            },
            vn: function() {
                return L
            },
            jK: function() {
                return U
            }
        });
        var T = C(51465);
        let L = 3
          , U = 1e3
    },
    16562: function(m, R, C) {
        "use strict";
        let T;
        C.d(R, {
            l: function() {
                return GameStateManager
            }
        });
        var L, U, B = C(7767), $ = C(34377), V = C(71343), H = C(70247), W = C(60604), q = C(23493), G = C.n(q);
        let UndoAction = class UndoAction {
            constructor(m, R) {
                this.command = m,
                this.payload = R
            }
        }
        ;
        let EditorUndoList = class EditorUndoList {
            pushNewObject(m) {
                for (let C = 0; C < this.queue.length; C++) {
                    var R;
                    let T = this.queue[C];
                    if (T.command !== V.m.buildObject || "remove" !== T.payload.type || (null === (R = T.payload.remove) || void 0 === R ? void 0 : R._id))
                        console.log("no match");
                    else {
                        T.payload.remove._id = m;
                        break
                    }
                }
            }
            pushNewEntity(m) {
                for (let C = 0; C < this.queue.length; C++) {
                    var R;
                    let T = this.queue[C];
                    if (T.command === V.m.buildEntity && "remove" === T.payload.action && !(null === (R = T.payload.remove) || void 0 === R ? void 0 : R._id)) {
                        T.payload.remove._id = m;
                        break
                    }
                }
            }
            popObject() {
                return this.queue.pop()
            }
            pushObject(m) {
                let R;
                let C = {
                    type: "update"
                };
                switch (m.type) {
                case "update":
                    if (C.type = "update",
                    !m.update || !(R = H.Z.getMapObject(m.update._id)))
                        return !1;
                    C.update = {
                        _id: m.update._id
                    },
                    Object.keys(m.update).forEach(m=>{
                        C.update[m] = R[m]
                    }
                    );
                    break;
                case "add":
                    C.type = "remove",
                    C.remove = {
                        _id: ""
                    };
                    break;
                case "remove":
                    if (C.type = "add",
                    !m.remove || !(R = H.Z.getMapObject(m.remove._id)))
                        return !1;
                    C.add = {
                        ...R
                    }
                }
                this.queue.push(new UndoAction(V.m.buildObject,C))
            }
            pushEntity(m, R) {
                let C;
                let T = {
                    action: "move"
                };
                switch (m.action) {
                case "move":
                    if (T.action = "move",
                    !m.move || !R || !(C = R.get(m.move._id)))
                        return !1;
                    T.move = {
                        _id: m.move._id,
                        label: C.label,
                        x: C.position.x,
                        y: C.position.y
                    };
                    break;
                case "add":
                    T.action = "remove",
                    T.remove = {
                        _id: ""
                    };
                    break;
                case "remove":
                    if (T.action = "add",
                    !m.remove || !R || !(C = R.get(m.remove._id)))
                        return !1;
                    T.add = {
                        _id: m.remove._id,
                        x: C.position.x,
                        y: C.position.y,
                        entity: C.entity,
                        label: C.label
                    }
                }
                this.queue.push(new UndoAction(V.m.buildEntity,T))
            }
            pushTiles(m, R) {
                let C = {
                    action: "update"
                };
                C.update = m.map(m=>{
                    let C = null == R ? void 0 : R[m._id];
                    return C ? {
                        _id: m._id,
                        tileset: m.tileset,
                        x: C.x,
                        y: C.y,
                        width: C.width,
                        index: C.index,
                        indexes: C.indexes ? [...C.indexes] : void 0
                    } : {
                        _id: m._id,
                        tileset: m.tileset,
                        x: m.x,
                        y: m.y,
                        width: 0,
                        indexes: []
                    }
                }
                ),
                this.queue.push(new UndoAction(V.m.buildTile,C))
            }
            constructor() {
                this.queue = []
            }
        }
        ;
        var Z = C(95047);
        // var eW = C(42379)
        // console.log(new Z.API(eW.LB,"v1"))
        // console.log(Z.API.axiosget("itm_popberryLoaf","6572eaec4bba74cc55f03b7b"));
        let calculateAllOnlinePlayers = m=>{
            let R = []
              , C = [];
            try {
                return null == m || m.forEach(m=>{
                    var C, T, L;
                    null !== (L = null === (T = m.metadata) || void 0 === T ? void 0 : null === (C = T.worlds) || void 0 === C ? void 0 : C.length) && void 0 !== L && L && m.metadata.worlds.forEach((m,C)=>{
                        var T;
                        null !== m && (R[C] = (null !== (T = R[C]) && void 0 !== T ? T : 0) + m)
                    }
                    )
                }
                ),
                chooseAvailableWorlds(R)
            } catch (m) {
                return console.log("worlds lookup", m),
                {
                    total: 0,
                    maxPlayersPerWorld: 1e3,
                    numberOfWorlds: C.length,
                    worlds: C
                }
            }
        }
          , chooseAvailableWorlds = m=>{
            let R = 0
              , C = []
              , T = 0
              , L = 0;
            try {
                "function" == typeof (null == m ? void 0 : m.forEach) && m.forEach((m,U)=>{
                    0 === U || null === m || 99 === U || U > 500 || (C.push({
                        id: U,
                        name: "World " + U,
                        players: Math.max(0, m)
                    }),
                    m < 1600 && T++,
                    m <= 0 && L++,
                    R += m)
                }
                );
                for (let R = 1; R <= 4; R++)
                    (void 0 === m[R] || null === m[R]) && (C.push({
                        id: R,
                        name: "World " + R,
                        players: 0
                    }),
                    T++,
                    L++);
                if (0 === L && T < 2) {
                    C.sort((m,R)=>m.id - R.id);
                    let m = 0;
                    for (; m < C.length && !(C[m].id > m + 1); m++)
                        ;
                    if (m + 1 < 80) {
                        let R = (m + 1).toString();
                        C.push({
                            id: R,
                            name: "World " + R,
                            players: 0
                        })
                    }
                }
                return {
                    total: R,
                    numberOfWorlds: C.length,
                    maxPlayersPerWorld: 2e3,
                    worlds: C
                }
            } catch (m) {
                return console.log("worlds lookup", m),
                0 === C.length && C.push({
                    id: 9,
                    name: "Wiggly World",
                    players: 100
                }),
                {
                    total: R,
                    maxPlayersPerWorld: 2e3,
                    numberOfWorlds: C.length,
                    worlds: C
                }
            }
        }
        ;
        let WorldService = class WorldService {
            async fetchWorldData() {
                try {
                    let m = await Z.Z.getWorldTotals()
                      , R = chooseAvailableWorlds(null != m ? m : []);
                    return R
                } catch (m) {
                    console.log("worlds error", m)
                }
                return calculateAllOnlinePlayers([])
            }
            constructor(m) {
                this.client = m
            }
        }
        ;
        var Y = C(80535)
          , K = C(77497)
          , J = C(6354);
        (L = U || (U = {}))[L.ROOM_UNINITIALIZED = 4008] = "ROOM_UNINITIALIZED",
        L[L.DISCONNECTED = 4009] = "DISCONNECTED",
        L[L.INVALID_TELEPORT = 4010] = "INVALID_TELEPORT",
        L[L.INVALID_JOIN = 4011] = "INVALID_JOIN",
        L[L.JOIN_IN_PROGRESS = 4013] = "JOIN_IN_PROGRESS",
        L[L.DUPLICATE_ROOM = 4242] = "DUPLICATE_ROOM",
        L[L.PLAYER_NOT_FOUND = 4501] = "PLAYER_NOT_FOUND",
        L[L.INVALID_SESSION = 4503] = "INVALID_SESSION",
        L[L.ROOM_FULL = 4504] = "ROOM_FULL",
        L[L.INVALID_AVATAR = 4505] = "INVALID_AVATAR",
        L[L.INVALID_USERNAME = 4506] = "INVALID_USERNAME",
        L[L.AUTHENTICATION_FAILED = 4507] = "AUTHENTICATION_FAILED",
        L[L.INCORRECT_CLIENT_VERSION = 4509] = "INCORRECT_CLIENT_VERSION",
        L[L.NEED_RECAPTCHA = 4511] = "NEED_RECAPTCHA",
        L[L.AUTHENTICATION_EXPIRED = 4512] = "AUTHENTICATION_EXPIRED",
        L[L.PLAYER_BANNED = 4521] = "PLAYER_BANNED",
        L[L.BAD_RECAPTCHA = 4567] = "BAD_RECAPTCHA",
        L[L.ROOM_DISPOSING = 4595] = "ROOM_DISPOSING",
        L[L.VELOCITY_CONTROL = 4596] = "VELOCITY_CONTROL",
        L[L.SERVER_MAINTENANCE = 4597] = "SERVER_MAINTENANCE",
        L[L.INVALID_WORLD = 4777] = "INVALID_WORLD",
        L[L.INVALID_MAP = 4978] = "INVALID_MAP",
        L[L.LOGGING_OUT = 4997] = "LOGGING_OUT",
        L[L.ABANDONED = 4998] = "ABANDONED",
        L[L.LOGGED_IN = 4999] = "LOGGED_IN";
        let X = "".concat("wss", "://").concat("pixels-server.pixels.xyz")
          , Q = {
            [$.Yi.PLAYER_MOVING]: {
                command: V.m.moveSelfPlayer,
                throttle: !0,
                adapter: m=>{
                    let R = -4 & Math.floor(Date.now() / 1e5)
                      , C = Math.round(m.position.x) * (R % 1e3) + Math.round(m.position.y) * (R % 23) + R % 111;
                    return [C, m.position.x, m.position.y, m.velocity.x, m.velocity.y]
                }
            },
            [$.qM.PLAYER_USED_ITEM]: {
                command: V.m.useItem,
                adapter: m=>{
                    var R, C, T, L, U, B, $;
                    return {
                        id: null === (R = m.item) || void 0 === R ? void 0 : R.id,
                        type: null === (C = m.target) || void 0 === C ? void 0 : C.type,
                        slot: null === (T = m.item) || void 0 === T ? void 0 : T.inventorySlot,
                        mid: null === (L = m.target) || void 0 === L ? void 0 : L.mid,
                        x: null === (U = m.target) || void 0 === U ? void 0 : U.x,
                        y: null === (B = m.target) || void 0 === B ? void 0 : B.y,
                        tiles: null === ($ = m.target) || void 0 === $ ? void 0 : $.tiles
                    }
                }
            },
            [V.m.clickEntity]: {
                command: V.m.clickEntity
            },
            [V.m.timerCheck]: {
                command: V.m.timerCheck,
                throttle: !0
            },
            [$.qM.PLAYER_CLICKED_NPC]: {
                command: V.m.talkToNPC,
                adapter: m=>m
            },
            [$.Yi.NPCDIALOG_CLOSE]: {
                command: V.m.closeDialog,
                adapter: m=>m
            },
            [$.Yi.TRIGGER_EVENT]: {
                command: V.m.collideWithObject,
                adapter: m=>({
                    objectId: m.targetId,
                    trigger: m.trigger
                })
            },
            [$.Yi.NFT_SELECTED]: {
                command: V.m.setAvatar,
                adapter: m=>m
            },
            [$.Yi.PET_SELECTED]: {
                command: V.m.setPet
            },
            [$.Yi.PET_RENAME]: {
                command: V.m.setPetName
            },
            [$.Yi.CHAT_MESSAGE_SEND]: {
                command: V.m.addMessageToChat
            },
            [$.Yi.SET_TYPING_STATE]: {
                command: V.m.setTypingState,
                throttle: !0
            },
            [$.fb.SET_TOS_ACCEPTED]: {
                command: V.m.setTosAccepted
            },
            [$.Yi.FARM_CLAIM]: {
                command: V.m.rentFarm
            },
            [$.Yi.FIND_NFT]: {
                command: V.m.findNFTs
            },
            [$.Yi.PUSH_SUBSCRIBE]: {
                command: V.m.subscribe
            },
            [$.Yi.BUY_STORE_ITEM]: {
                command: V.m.buyStoreItem
            },
            [$.Yi.SELL_STORE_ITEM]: {
                command: V.m.sellStoreItem
            },
            [$.fb.BOOKMARK_MAP]: {
                command: V.m.bookmarkMap
            },
            [$.qM.BUILD_OBJECT]: {
                command: V.m.buildObject,
                adapter: m=>(T || (T = new EditorUndoList),
                T.pushObject(m),
                m)
            },
            [$.qM.BUILD_TILE]: {
                command: V.m.buildTile,
                adapter: m=>(T || (T = new EditorUndoList),
                m)
            },
            [$.qM.BUILD_ENTITY]: {
                command: V.m.buildEntity,
                adapter: m=>(T || (T = new EditorUndoList),
                T.pushEntity(m, GameStateManager.getInstance().getMapEntities()),
                m)
            },
            [$.qM.UPGRADE_FARM]: {
                command: V.m.upgradeFarm
            },
            [$.qM.ROOM_RESTRICTIONS]: {
                command: V.m.updateRoomRestrictions
            },
            [$.qM.ROOM_PERMISSIONS]: {
                command: V.m.updateRolesAndPermissions
            },
            [$.qM.ROOM_OWNERSHIP]: {
                command: V.m.updateMapListing
            },
            [$.qM.CLAIM_NFTMAP]: {
                command: V.m.claimNftMap,
                adapter: m=>m
            },
            [$.qM.ROOM_MEMBERS]: {
                command: V.m.updateMapMembers
            },
            [$.qM.ROOM_NAME]: {
                command: V.m.updateRoomName,
                adapter: m=>({
                    name: m
                })
            },
            [$.fb.TRADE_SEND]: {
                command: V.m.trade
            },
            [$.fb.MARKETPLACE_SEND]: {
                command: V.m.marketplace
            },
            [$.fb.REPORT_PLAYER]: {
                command: V.m.reportPlayer
            },
            [$.Yi.FETCH_MAIL]: {
                command: V.m.fetchMailbox
            },
            [$.Yi.COLLECT_MAIL_ITEM]: {
                command: V.m.collectMailboxItem
            },
            [$.Yi.MINT_UGC]: {
                command: V.m.mintUgc
            }
        };
        let GameStateManager = class GameStateManager {
            get chatMessages() {
                var m;
                return null === (m = this.room) || void 0 === m ? void 0 : m.state.chatMessages
            }
            get mapLabels() {
                var m;
                return null === (m = this.room) || void 0 === m ? void 0 : m.state.labels
            }
            get mapTraits() {
                var m, R, C;
                return null === (m = null === (C = this.room) || void 0 === C ? void 0 : null === (R = C.state) || void 0 === R ? void 0 : R.nft) || void 0 === m ? void 0 : m.traits
            }
            get currentPlayer() {
                var m, R;
                return {
                    core: null === (R = this.room) || void 0 === R ? void 0 : R.state.players.get(null === (m = this.room) || void 0 === m ? void 0 : m.sessionId),
                    full: this.selfPlayer
                }
            }
            get mapId() {
                var m;
                return (null === (m = this.room) || void 0 === m ? void 0 : m.state.id) || ""
            }
            get mapStorageId() {
                var m;
                return (null === (m = this.room) || void 0 === m ? void 0 : m.state.mid) || ""
            }
            get marketPlaceSellLimit() {
                var m, R;
                return null !== (R = null === (m = this.room) || void 0 === m ? void 0 : m.state.mpSell) && void 0 !== R ? R : 1500
            }
            get marketPlaceBuyLimit() {
                var m, R;
                return null !== (R = null === (m = this.room) || void 0 === m ? void 0 : m.state.mpBuy) && void 0 !== R ? R : 700
            }
            static getInstance() {
                return GameStateManager.singleton || (GameStateManager.singleton = new GameStateManager),
                GameStateManager.singleton
            }
            getMapEntities() {
                var m, R;
                return null === (m = null === (R = this.room) || void 0 === R ? void 0 : R.state) || void 0 === m ? void 0 : m.entities
            }
            getEntityByUniqueId(m) {
                var R, C;
                return (null === (R = this.getMapEntities()) || void 0 === R ? void 0 : R.get(m)) || (null === (C = this.selfPlayer) || void 0 === C ? void 0 : C.entities.get(m))
            }
            getPlayerSessionIdByMid(m) {
                var R, C;
                if (!m)
                    return;
                let T = null === (C = this.room) || void 0 === C ? void 0 : null === (R = C.state) || void 0 === R ? void 0 : R.players;
                if (T) {
                    for (let[R,C] of T.entries())
                        if (C.mid === m)
                            return R
                }
            }
            getPlayerCoreBySessionId(m) {
                var R, C;
                if (this.isSelfPlayer(m))
                    return this.currentPlayer.core;
                let T = null === (R = this.room) || void 0 === R ? void 0 : R.state.players.get(m);
                if (T)
                    return null === (C = this.players) || void 0 === C ? void 0 : C.get(T.mid)
            }
            getSessionId() {
                var m;
                return null === (m = this.room) || void 0 === m ? void 0 : m.sessionId
            }
            getMapStorage() {
                var m;
                return null === (m = this.room) || void 0 === m ? void 0 : m.state.storage
            }
            addMapEntity(m) {
                let R = this.getMapEntities();
                R && R.set(m.mid, m)
            }
            getSoilEntity(m) {
                return this.getEntityByUniqueId(m)
            }
            hasJoystick() {
                var m;
                return !!(null === (m = this.scene) || void 0 === m ? void 0 : m.hasJoystick())
            }
            peekLeftMap() {
                let m = this.mapId
                  , R = null == m ? void 0 : m.match(/NFT.*-(\d+)/)
                  , C = !!R && !!R[1] && parseInt(R[1]);
                if (C)
                    1 === C ? C = 5e3 : C--;
                else {
                    let m = (Date.now() - this.serverTimeDelta) / 1e3 % 86400;
                    C = 1 + Math.floor(m / 17.28) % 5e3
                }
                return "pixelsNFTFarm-".concat(C)
            }
            peekRightMap() {
                let m = this.mapId
                  , R = null == m ? void 0 : m.match(/NFT.*-(\d+)/)
                  , C = !!R && !!R[1] && parseInt(R[1]);
                if (C)
                    5e3 === C ? C = 1 : C++;
                else {
                    let m = ((Date.now() - this.serverTimeDelta) / 1e3 + 43200) % 86400;
                    C = 1 + Math.floor(m / 17.28) % 5e3
                }
                return "pixelsNFTFarm-".concat(C)
            }
            registerEvents() {
                let sendCommand = async (e, t, r) => {
                    if (!r || !this.room || this.room.sessionId !== r) {
                        console.log("Message ignored because room not loaded", e);
                        return;
                    }
                    let delayMin;
                    let delayMax;

                    if (window.game.fastFarm !== undefined){
                        delayMin = 100
                        delayMax = 150
                    }else{
                        delayMin = 150
                        delayMax = 200

                    }
                    
                    // Check if e is "mv" and the last two items of the t array are not zero
                    if (e === "mv" && (((t[1] === 3119 && t[2] === 2855) || (t[1] === 3284 && t[2] === 2829)) && t[3] === 0 && t[4] === 0)) {
                        console.log("Message ignored because conditions not met", e, t);
                        return;
                    }
                    
                    // Check if e is "ui" and t.id is "itm_rustyWateringCan"
                    if (e === "ui" && !t.id.includes("Fruit")) {
                        // Check if t.id is one of the seed items
                        if (
                            (t.id === "itm_wintermintSeeds" ||
                            t.id === "itm_cloverSeeds" ||
                            t.id === "itm_popberrySeeds" ||
                            t.id === "itm_perfectPopberrySeeds") && window.game.clickedSeed === undefined
                        ) {
                            
                            window.game.clickedSeed = true
                            // Additional code for seeds goes here
                            // Get the number from window.game.plantQnt
                            let plantQnt;
                            if (window.game.plantQnt === undefined && t.id === "itm_perfectPopberrySeeds"){
                                plantQnt = 1;
                            }else if (window.game.plantQnt === undefined){
                                plantQnt = 60;
                            }else{
                                plantQnt = window.game.plantQnt;
                            }
                            const delay = ms => new Promise(resolve => setTimeout(resolve, ms));

                            // Get all entities with entityType equal to "soil"
                            
                            // const cropMids = Object.values(window.game.scene.scenes[1].crops)
                            // .flatMap(crop => crop.mid);
                            
                            // // Filter out soil entities that are already in crops based on mid
                            // const unusedSoilEntities = soilEntities.filter(entityMid =>
                            //     !cropMids.includes(entityMid)
                            // );
                            const sentEntityMids = new Set();
                            const soilEntities = Array.from(window.game.scene.scenes[1].entities.entries())
                                .filter(([entityId, entity]) => {
                                    return entity.entityType === "soil" && entity.state === "normal";
                                })
                                .map(([entityId, entity]) => entity.mid);
                            // Iterate through the list with a delay of 0.2s for each
                            console.log('plant qnt')
                            console.log(plantQnt)
                            while (Array.from(window.game.scene.scenes[1].crops.entries()).length < plantQnt){
                                const soilEntities = Array.from(window.game.scene.scenes[1].entities.entries())
                                .filter(([entityId, entity]) => {
                                    return entity.entityType === "soil" && entity.state === "normal";
                                })
                                .map(([entityId, entity]) => entity.mid);
                                
                                for (let i = soilEntities.length - 1; i > 0; i--) {
                                    const j = Math.floor(Math.random() * (i + 1));
                                    [soilEntities[i], soilEntities[j]] = [soilEntities[j], soilEntities[i]];
                                }
                                for (let i = 0; i <  Math.min(plantQnt, soilEntities.length); i++) {
                                    // Check if the entity mid was not sent before
                                    if (!sentEntityMids.has(soilEntities[i])) {
                                        // Send room request with modified mid
                                        // (replace the next line with the actual logic for sending the room request)
                                        t.mid = soilEntities[i];
                                        t.type = "entity";
                                        t.x = undefined;
                                        t.y = undefined;
                                        this.room.send(e, t);
                                        console.log(sentEntityMids)

                                        sentEntityMids.add(soilEntities[i]);
                                        // Add a delay for each request
                                        await delay(Math.floor(Math.random() * (delayMax - delayMin + 1)) + delayMin);
                                    }else{
                                        console.log(soilEntities[i])
                                    }
                                    // continue
                                }
                                await delay(1500);
                                console.log("size after loop: " + soilEntities.length);
                                const excludedSoilEntities = Array.from(window.game.scene.scenes[1].entities.entries())
                                    .filter(([entityId, entity]) => {
                                        return soilEntities.includes(entityId) && entity.state === "normal" && entity.entityType === "soil";
                                    })
                                    .map(([entityId, entity]) => entityId);
                                
                                excludedSoilEntities.forEach(excludedEntity => sentEntityMids.delete(excludedEntity));
                                console.log('planted entities excluded from sent')
                                console.log(excludedSoilEntities)
                                // Remove the excluded soil entities from the sentEntityMids set
                                  
                            } 
                            window.game.clickedSeed = undefined
                            
                        } else if (t.id === "itm_shears" && window.game.clickedShears === undefined) {

                            
                            const delay = ms => new Promise(resolve => setTimeout(resolve, ms));
                            if (window.game.sellitems !== undefined){
                                let itemsMap = window.game.scene.scenes[1].stateManager.playerSerializer.state.inventory.slots.$items;

                                // Find items with specific IDs
                                let targetItemIds = ["itm_wintermintFruit", "itm_clover4LeafFruit", "itm_cloverFruit"];

                                // Iterate through maps with specific item IDs
                                for (let itemId of targetItemIds) {
                                    for (let [key, value] of itemsMap) {
                                        if (value.hasOwnProperty('item') && value.item === itemId) {
                                            // Get quantity and slot properties
                                            let quantity = value.quantity;
                                            let slot = value.slot; // Assuming the key is the slot property

                                            // Log or perform operations with quantity and slot
                                            console.log(`Item ID: ${itemId}, Quantity: ${quantity}, Slot: ${slot}`);

                                            // Check if window.game.sellitems is defined and perform actions
                                            let e = "sellStoreItem";
                                            let t = {
                                            itemId: itemId,
                                            quantity: quantity,
                                            slot: slot,
                                            storeId: "str_bucksGalore"
                                            };
                                            this.room.send(e, t);
                                        }
                                    }
                                }
                                window.game.sellitems = undefined
                                return
                            }else if (window.game.buyitems !== undefined){
                                let e = "buyStoreItem"
                                this.room.send(e, window.game.buyitemsObj)
                                window.game.buyitems = undefined
                                return
                            }else if (window.game.swapItems !== undefined){
                                let itemsMap = window.game.scene.scenes[1].stateManager.playerSerializer.state.inventory.slots.$items;

                                // Items to search for
                                let targetItems = ["itm_wintermintSeeds", "itm_cloverSeeds"];

                                // Initialize variables to store quantities
                                let winterQuantity = 0;
                                let cloverQuantity = 0;
                                let cloverSlot = undefined
                                let winterSlot = undefined

                                // Iterate through the map entries
                                for (let [key, entry] of itemsMap) {
                                    if (entry.hasOwnProperty('item') && targetItems.includes(entry.item)) {
                                        // Check if the item is wintermintSeeds or cloverSeeds
                                        if (entry.item === "itm_wintermintSeeds") {
                                            winterQuantity += entry.quantity;
                                            winterSlot = entry.slot;
                                        } else if (entry.item === "itm_cloverSeeds") {
                                            cloverQuantity += entry.quantity;
                                            cloverSlot = entry.slot;
                                        }
                                    }
                                }
                                if (cloverQuantity > 0) {
                                    // console.log(cloverQuantity);
                                    // console.log(cloverSlot);
                                    if (cloverSlot !== 2){
                                        let k = "swapOrCombineInventorySlots"
                                        let j = {
                                            sourceContainer: undefined,
                                            sourceIndex: cloverSlot,
                                            targetIndex: 2
                                        }
                                        
                                        this.room.send(k, j)
                                    }
                                } else if (window.game.scene.scenes[1].stateManager.playerSerializer.state.levels.get("farming").level >= 11) {
                                    // console.log(winterQuantity);
                                    // console.log(winterSlot);
                                    if (winterSlot !== 2){
                                        let k = "swapOrCombineInventorySlots"
                                        let j = {
                                            sourceContainer: undefined,
                                            sourceIndex: winterSlot,
                                            targetIndex: 2
                                        }
                                        
                                        this.room.send(k, j)
                                    }
                                }else{
                                    // console.log(0);
                                    // console.log(cloverSlot);
                                    if (cloverSlot !== 2){
                                        let k = "swapOrCombineInventorySlots"
                                        let j = {
                                            sourceContainer: undefined,
                                            sourceIndex: cloverSlot,
                                            targetIndex: 2
                                        }
                                        
                                        this.room.send(k, j)
                                    }
                                }
                                window.game.swapItems = undefined
                                return
                            }else if (window.game.marketplace !== undefined){
                                let e = "marketplace"
                                let t = {
                                    listingId: "6568ecee4a4e955736a0a95c",
                                    quantity: 1,
                                    subcommand: "purchase"
                                }
                                this.room.send(e, t)
                                window.game.marketplace = undefined
                                return
                            }else if (window.game.tasks !== undefined){
                                let e = "sellOrderFill"
                                for (let i=0;i<9;i++){
                                    let t = {
                                        sellOrderIndex: i,
                                        storeId: "str_bucksGalore"
                                    };
                                    this.room.send(e, t);

                                    await delay(Math.floor(Math.random() * (2000 - 1400 + 1)) + 1400);
                                    console.log(Date.now())
                                }
                                
                                window.game.tasks = undefined
                                return
                            }else if (window.game.market !== undefined){
                                let e = "sellOrderFetch"
                                let t = {
                                    storeId: "str_bucksGalore"
                                };
                                await this.room.send(e, t);
                                
                                
                                // console.log(await window.jooj.fetchMarketplaceListingsForItem("itm_cloverFruit","6572eaec4bba74cc55f03b7b"))
                                window.game.market = undefined
                                await delay(2000);
                                sellOrders.forEach((sellOrder, index) => sellOrder.originalIndex = index);
                                console.log(window.sellOrders)
                                sellOrders.sort((a, b) => {
                                    const aHasPixelReward = a.reward && a.reward.currency && a.reward.currency.currencyId === "cur_pixel";
                                    const bHasPixelReward = b.reward && b.reward.currency && b.reward.currency.currencyId === "cur_pixel";
                                
                                    if (aHasPixelReward && !bHasPixelReward) {
                                      return -1; // Move sell order with "cur_pixel" reward to the beginning
                                    } else if (!aHasPixelReward && bHasPixelReward) {
                                      return 1; // Move sell order without "cur_pixel" reward to the end
                                    } else {
                                      return 0; // No priority difference if both have the same currency or neither have rewards
                                    }
                                  });
                                  
                                console.log(window.sellOrders)
                                let playerInventory = window.game.scene.scenes[1].stateManager.playerSerializer.state.inventory.slots.$items;
                                // await delay(30000)
                                for (let i = 0; i < sellOrders.length; i++) {
                                    const sellOrder = sellOrders[i];
                                    const requestedItemId = sellOrder.request.itemId;
                                    const requestedQuantity = sellOrder.request.quantity;

                                    let playerItem = null; // Initialize to avoid potential undefined errors

                                    // Loop through player inventory (key-value pairs)
                                    for (let [key, entry] of playerInventory) {
                                        if (entry.hasOwnProperty('item') && requestedItemId === entry.item && !sellOrder.hasOwnProperty('completedAt')) {
                                            playerItem = entry;
                                            break; // Exit the loop after finding the item
                                        }
                                    }
                                    if (playerItem && playerItem.quantity >= requestedQuantity) {
                                        // Player has enough items to fulfill the order
                                        console.log(`Sell order ${i + 1} of ${requestedItemId} can be fulfilled from inventory.`);
                                        let e = "sellOrderFill"
                                        let t = {
                                            sellOrderIndex: sellOrder.originalIndex,
                                            storeId: "str_bucksGalore"
                                        };
                                        this.room.send(e, t);
                                    } else if (!sellOrder.hasOwnProperty('completedAt')){
                                        // Player needs to buy the item
                                        
                                        console.log(`Sell order ${i + 1} requires buying ${requestedQuantity} of ${requestedItemId}.`);
                                        try {
                                            let listingsFetched = await window.jooj.fetchMarketplaceListingsForItem(requestedItemId, "6572eaec4bba74cc55f03b7b");

                                            // Check if first listing's price exceeds budget
                                            if (listingsFetched.listings.length > 0 && (listingsFetched.listings[0].price * requestedQuantity > 3000 || window.game.scene.scenes[1].stateManager.playerSerializer.state.coinInventory.$items.get(8).balance < listingsFetched.listings[0].price * requestedQuantity) && !(window.game.scene.scenes[1].stateManager.playerSerializer.state.coinInventory.$items.get(8).balance >= listingsFetched.listings[0].price * requestedQuantity && sellOrder.reward.currency.currencyId === "cur_pixel")) {
                                                console.log(`Cheapest listing exceeds budget for sell order ${i + 1}.`);
                                                continue; // Skip to the next sell order if budget is exceeded
                                            }
                                            let qnt;
                                            if (playerItem && playerItem.quantity > 0){
                                                qnt = requestedQuantity - playerItem.quantity;
                                            }else{
                                                qnt = requestedQuantity;
                                            }

                                            while (true){
                                                listingsFetched = await window.jooj.fetchMarketplaceListingsForItem(requestedItemId, "6572eaec4bba74cc55f03b7b");
                                                // Iterate over listings for suitable purchase option
                                                for (let listing of listingsFetched.listings) {
                                                    if (listing.quantity >= requestedQuantity && ((listing.price * requestedQuantity <= 3000 && window.game.scene.scenes[1].stateManager.playerSerializer.state.coinInventory.$items.get(8).balance >= listing.price * requestedQuantity) || window.game.scene.scenes[1].stateManager.playerSerializer.state.coinInventory.$items.get(8).balance >= listing.price * requestedQuantity && sellOrder.reward.currency.currencyId === "cur_pixel")) {
                                                        
                                                        console.log(`Attempting to buy ${requestedQuantity} of ${requestedItemId} from listing: Id: ${listing._id}, Qnt: ${listing.quantity}`);
                                                        let e = "marketplace"
                                                        let t = {
                                                            listingId: listing._id,
                                                            quantity: qnt,
                                                            subcommand: "purchase"
                                                        };
                                                        this.room.send(e, t);
                                                        
                                                        break; // Exit the loop after a suitable purchase option is found
                                                    }
                                                }
                                                let bougthSuccess = false;
                                                await delay(3500);
                                                for (let [key, entry] of window.game.scene.scenes[1].stateManager.playerSerializer.state.inventory.slots.$items) {
                                                    if (entry.hasOwnProperty('item') && requestedItemId === entry.item && requestedQuantity <= entry.quantity) {
                                                        bougthSuccess = true; // Exit the loop after finding the item
                                                    }
                                                }
                                                if (bougthSuccess){
                                                    break;
                                                }
                                                // if (window.game.notification !== 'marketplace-purchase-failed'){
                                                //     break;
                                                // }
                                                console.error(`Purshase of ${requestedItemId} failed.`)
                                            }
                                            let e = "sellOrderFill"
                                            let t = {
                                                sellOrderIndex: sellOrder.originalIndex,
                                                storeId: "str_bucksGalore"
                                            };
                                            this.room.send(e, t);
                                            if (!listingsFetched.listings.some(listing => listing.quantity >= requestedQuantity && listing.price * requestedQuantity <= 3000)) {
                                                console.log(`No listings found for ${requestedItemId} that meet requirements.`);
                                            }
                                        } catch (error) {
                                            console.error("Error fetching marketplace listings:", error);
                                        }
                                    }
                                    await delay(Math.floor(Math.random() * (2000 - 1400 + 1)) + 1400);
                                    console.log(Date.now())
                                }


                                return
                            }
                            window.game.clickedShears = true
                            const filteredCrops = Array.from(window.game.scene.scenes[1].crops.entries())
                                .filter(([cropId, crop]) => {
                                    const cropState = crop.state;
                                    return cropState === "ripe" || cropState === "dead" || cropState === "deadSeed";
                                })
                                .map(([cropId, crop]) => cropId);
                            

                            while (filteredCrops.length > 0) {
                                for (let i = filteredCrops.length - 1; i > 0; i--) {
                                    const j = Math.floor(Math.random() * (i + 1));
                                    [filteredCrops[i], filteredCrops[j]] = [filteredCrops[j], filteredCrops[i]];
                                }
                                
                                for (let i = 0; i < filteredCrops.length; i++) {
                                    
                                    // Send room request with modified mid
                                    // Replace the next line with the actual logic for sending the room request
                                    t.mid = filteredCrops[i];
                                    t.type = "entity";
                                    t.x = undefined;
                                    t.y = undefined;
                    
                                    this.room.send(e, t);
                                    await delay(Math.floor(Math.random() * (delayMax - delayMin + 1)) + delayMin);
                                }
                                    
                    
                                // Optional: Add a delay before the next iteration of the while loop
                                // delay(500);
                                
                                await delay(500);
                                // Update filtered crops for the next iteration
                                const updatedFilteredCrops = Array.from(window.game.scene.scenes[1].crops.entries())
                                .filter(([cropId, crop]) => {
                                    const cropState = crop.state;
                                    return cropState === "ripe" || cropState === "dead" || cropState === "deadSeed";
                                })
                                .map(([cropId, crop]) => cropId);
                                
                                filteredCrops.length = updatedFilteredCrops.length;
                                for (let i = 0; i < updatedFilteredCrops.length; i++) {
                                    filteredCrops[i] = updatedFilteredCrops[i];
                                }
                            }
                            window.game.clickedShears = undefined
                            // e = "closeDialog"
                            // t = {}
                            // t.dialogId = "evt_barneyTutorial_step11_6"
                            // t.event = "evt_barneyTutorial_step11"
                            // t.npcId = "ent_npcBarney"
                            // for (let i = 0; i < 10; i++) {
                            //     this.room.send(e, t);
                            // }
                        } else if (t.id === "itm_rustyWateringCan" && window.game.clickedWater === undefined){
                            window.game.clickedWater = true
                            const delay = ms => new Promise(resolve => setTimeout(resolve, ms));
                            let cropsNeedingWater = Array.from(window.game.scene.scenes[1].crops.entries())
                                .filter(([cropId, crop]) => crop.needsWater)
                                .map(([cropId, crop]) => cropId);
                            
                            // Iterate until no crop needs water

                            while (cropsNeedingWater.length > 0) {
                                for (let i = cropsNeedingWater.length - 1; i > 0; i--) {
                                    const j = Math.floor(Math.random() * (i + 1));
                                    [cropsNeedingWater[i], cropsNeedingWater[j]] = [cropsNeedingWater[j], cropsNeedingWater[i]];
                                }
                                // Iterate through the list with a delay of 0.1 for each
                                for (let i = 0; i < cropsNeedingWater.length; i++) {
                                    // Send room request with modified mid
                                    // Replace t.mid with the current mid from the list
                                    t.mid = cropsNeedingWater[i];
                                    t.type = "entity"
                                    t.x = undefined
                                    t.y = undefined
                                    this.room.send(e, t);
                                    await delay(Math.floor(Math.random() * (delayMax - delayMin + 1)) + delayMin);
                                }

                                await delay(500);
                                // Update the list of crops needing water
                                cropsNeedingWater = Array.from(window.game.scene.scenes[1].crops.entries())
                                .filter(([cropId, crop]) => crop.needsWater)
                                .map(([cropId, crop]) => cropId);

                                // Optional: Add a delay before checking again
                                // You can adjust the delay based on your requirements
                                
                            }
                            window.game.clickedWater = undefined
                        } else if(t.id === "itm_fertilizer"){
                            const filteredCrops = Object.keys(window.game.scene.scenes[1].crops)
                            t.mid = filteredCrops[0];
                            t.type = "entity";
                            t.x = undefined;
                            t.y = undefined;
            
                            this.room.send(e, t);
                        }else {
                            // Proceed with the send for other cases
                            console.log(t);
                            this.room.send(e, t);
                            
                        }
                    }
                    else {
                        // Proceed with the send for other cases
                        console.log(t);
                        
                        this.room.send(e, t);
                        
                    }
                }
                ;
                Object.entries(Q).forEach(m=>{
                    let[R,C] = m
                      , T = C.throttle ? G()(sendCommand, 250) : sendCommand;
                    $.ZP.registerEventListener(R, m=>{
                        var R;
                        T(C.command, C.adapter ? C.adapter(m) : m, null === (R = this.room) || void 0 === R ? void 0 : R.sessionId)
                    }
                    )
                }
                );
                let registerTypedEvent = (m,R)=>{
                    let C = R.throttle ? G()(sendCommand, 250) : sendCommand;
                    m.subscribe(m=>{
                        var T;
                        let L = R.adapter ? R.adapter(m) : m;
                        C(R.command, L, null === (T = this.room) || void 0 === T ? void 0 : T.sessionId)
                    }
                    )
                }
                ;
                registerTypedEvent($.rV.inventory.swapItems, {
                    command: V.m.swapOrCombineInventorySlots
                }),
                registerTypedEvent($.rV.inventory.changeActiveRow, {
                    command: V.m.changeEquipmentBar,
                    throttle: !0
                }),
                registerTypedEvent($.rV.sellOrders.fetch, {
                    command: V.m.sellOrderFetch
                }),
                registerTypedEvent($.rV.sellOrders.fill, {
                    command: V.m.sellOrderFill
                }),
                registerTypedEvent($.rV.sellOrders.reset, {
                    command: V.m.sellOrderReset
                })
            }
            undoCommand() {
                if (T) {
                    console.log("undo list exists");
                    let R = T.popObject();
                    if (R) {
                        var m;
                        console.log("sending undo", R.command, R.payload),
                        null === (m = this.room) || void 0 === m || m.send(R.command, R.payload)
                    }
                }
            }
            isSelfPlayer(m) {
                var R;
                return m === (null === (R = this.room) || void 0 === R ? void 0 : R.sessionId)
            }
            initPlayers() {
                var m, R, C;
                if (this.players = new Map,
                "private" === this.room.state.type || "tutorial" === this.room.state.type) {
                    let R = this.currentPlayer;
                    R && (null === (m = this.players) || void 0 === m || m.set(R.core.mid, R.core))
                } else
                    null === (C = this.room) || void 0 === C || null === (R = C.state) || void 0 === R || R.players.forEach((m,R)=>{
                        var C;
                        null === (C = this.players) || void 0 === C || C.set(m.mid, m),
                        this.isSelfPlayer(R) || this.setupOtherPlayer(m, R)
                    }
                    )
            }
            handleDisconnect() {
                var m;
                null === (m = this.room) || void 0 === m || m.onLeave(m=>{
                    if ($.ZP.sendEvent($.fb.ROOM_LEAVE),
                    this.room) {
                        var R;
                        if (console.log("disconnected, code=", m),
                        this.room.removeAllListeners(),
                        null === (R = this.playerSerializer) || void 0 === R || R.teardown(),
                        this.playerSerializer = void 0,
                        this.selfPlayer = void 0,
                        this.room = void 0,
                        4999 === m) {
                            $.ZP.sendEvent($.fb.SVR_CANNOTCONNECT, {
                                message: ["playerKicked", "We offer our humble apologies. You have been disconnected from the game server as a result of joining from another device or browser window. Multiple connections are not permitted."]
                            });
                            return
                        }
                        $.ZP.sendEvent($.fb.SVR_CANNOTCONNECT, {
                            message: "lostConnection"
                        })
                    }
                }
                )
            }
            handleRoomEvents() {
                var m;
                this.room && (this.room.onMessage(V.m.timeSync, m=>{
                    (null == m ? void 0 : m.ms) && (this.serverTimeDelta = Date.now() - m.ms,
                    console.log("time delta ".concat(this.serverTimeDelta, "ms")))
                }
                ),
                this.room.state.listen("ownerAddress", m=>{
                    $.ZP.sendEvent($.fb.ROOM_OWNER_CHANGED, m)
                }
                ),
                this.room.state.listen("name", ()=>{
                    this.room && $.ZP.sendEvent($.fb.ROOM_NAME_CHANGED, this.room.state.name)
                }
                ),
                this.room.state.listen("guild", ()=>{
                    this.room && $.ZP.sendEvent($.fb.ROOM_GUILD_CHANGED, this.room.state.guild)
                }
                ),
                this.room.state.permissions.onChange(()=>{
                    if (!this.room)
                        return;
                    let m = JSON.parse(JSON.stringify(this.room.state.permissions));
                    $.ZP.sendEvent($.fb.ROOM_PERMISSIONS_CHANGED, m)
                }
                ),
                this.room.state.restrictions.onChange(()=>{
                    if (!this.room)
                        return;
                    let m = JSON.parse(JSON.stringify(this.room.state.restrictions));
                    $.ZP.sendEvent($.fb.ROOM_RESTRICTIONS_CHANGED, m)
                }
                ),
                this.room.state.ownership && this.room.state.ownership.onChange(()=>{
                    if (!this.room)
                        return;
                    let m = JSON.parse(JSON.stringify(this.room.state.ownership));
                    $.ZP.sendEvent($.fb.ROOM_OWNERSHIP_CHANGED, m)
                }
                ),
                this.room.state.members.onAdd(()=>{
                    if (!this.room)
                        return;
                    let m = JSON.parse(JSON.stringify(this.room.state.members));
                    $.ZP.sendEvent($.fb.ROOM_MEMBERS_CHANGED, m)
                }
                ),
                this.room.state.members.onRemove(()=>{
                    if (!this.room)
                        return;
                    let m = JSON.parse(JSON.stringify(this.room.state.members));
                    $.ZP.sendEvent($.fb.ROOM_MEMBERS_CHANGED, m)
                }
                ),
                null === (m = this.room) || void 0 === m || m.onMessage("*", (m,R)=>{
                    if (this.room)
                        try {
                            var C, L, U, B, W, q, G, Z, X, Q, ee, et, er, en, eo;
                            switch (m) {
                            case V.m.updatePlayer:
                                null === (C = this.playerSerializer) || void 0 === C || C.patch(R),
                                this.applyStateChanges();
                                break;
                            case V.m.talkToNPC:
                                $.ZP.sendEvent($.fb.NPC_SPEAKS, R);
                                break;
                            case V.m.receiveMessageInChat:
                                $.ZP.sendEvent($.fb.CHAT_MESSAGE_RCV, {
                                    ...R,
                                    whisper: !0
                                });
                                break;
                            case V.m.buildObject:
                                T && "add" === R.action && T.pushNewObject(R._id),
                                "add" === R.action || "update" === R.action ? H.Z.addMapObject(R) : "remove" === R.action && H.Z.removeMapObject(R),
                                $.ZP.sendEvent($.fb.SERVER_BUILD_NODE, {
                                    ...R,
                                    type: "object"
                                });
                                break;
                            case V.m.buildTile:
                                R.update && (T && "update" !== R.action && T.pushTiles(R.update, H.Z.getMapTiles()),
                                H.Z.updateMapTiles(R.update)),
                                $.ZP.sendEvent($.fb.SERVER_BUILD_NODE, {
                                    type: "tile",
                                    ...R
                                });
                                break;
                            case V.m.useItem:
                                $.ZP.postEvent("CONFIRM_USEITEM", R),
                                null === (L = this.scene) || void 0 === L || L.playerUsedItem(R);
                                break;
                            case V.m.useItemError:
                                if ("cannot-overwater" === R.message)
                                    break;
                                $.rV.playSound.emit("snd_ui_error");
                                let ei = R.item && (null === (U = H.Z.getGameItem(R.item)) || void 0 === U ? void 0 : U.image)
                                  , ea = {
                                    source: "item",
                                    icon: ei,
                                    text: {
                                        id: R.message
                                    },
                                    deduplicationKey: R.message
                                };
                                Y.e.set(K.W_, [ea]);
                                break;
                            case V.m.teleportPlayer:
                                $.ZP.sendEvent($.fb.ROOM_WARP, {
                                    mapId: R.mapId,
                                    spawn: R.spawn,
                                    source: R.source,
                                    abort: R.abort
                                });
                                break;
                            case V.m.playerAction:
                                "play" === R.action ? (R.sound && $.rV.playSound.emit(R.sound),
                                (null === (B = R.animation) || void 0 === B ? void 0 : B.name) && (R.target && "self" !== R.target ? null === (q = this.scene) || void 0 === q || q.playNodeAnimation({
                                    mid: R.target,
                                    animation: R.animation.name,
                                    position: R.animation.position,
                                    emoji: R.emoji,
                                    pet: !1
                                }) : null === (W = this.scene) || void 0 === W || W.playPlayerAnimation(R.animation.name))) : "stop" === R.action ? R.sound && (console.log("stopping sound ".concat(R.sound)),
                                $.ZP.postEvent("STOP_SOUND", R.sound)) : "petplay" === R.action ? R.emoji && (null === (X = this.scene) || void 0 === X || X.playNodeAnimation({
                                    mid: null !== (Q = R.target) && void 0 !== Q ? Q : "",
                                    animation: null !== (ee = null === (G = R.animation) || void 0 === G ? void 0 : G.name) && void 0 !== ee ? ee : "",
                                    position: null === (Z = R.animation) || void 0 === Z ? void 0 : Z.position,
                                    emoji: R.emoji,
                                    pet: !0
                                })) : "tween" === R.action && R.tweenTo && (null === (et = this.scene) || void 0 === et || et.playNodeAnimation({
                                    mid: null !== (er = R.target) && void 0 !== er ? er : "",
                                    animation: null !== (en = R.tweenTo.animation) && void 0 !== en ? en : "",
                                    position: {
                                        x: R.tweenTo.x,
                                        y: R.tweenTo.y
                                    },
                                    tween: {
                                        duration: R.tweenTo.ms,
                                        easing: null !== (eo = R.tweenTo.ease) && void 0 !== eo ? eo : "cubic"
                                    }
                                }));
                                break;
                            case V.m.playerNotification:
                                window.game.notification = R.deduplicationKey
                                Y.e.set(K.W_, [R]);
                                break;
                            case V.m.sellOrders:
                                console.log(R.str_bucksGalore);
                                window['sellOrders'] = R.str_bucksGalore.orders
                                window['sellOrders'].forEach((sellOrder, index) => sellOrder.originalIndex = index);
                                window['sellOrders'].sort((a, b) => {
                                    const aHasPixelReward = a.reward && a.reward.currency && a.reward.currency.currencyId === "cur_pixel";
                                    const bHasPixelReward = b.reward && b.reward.currency && b.reward.currency.currencyId === "cur_pixel";
                                
                                    if (aHasPixelReward && !bHasPixelReward) {
                                      return -1; // Move sell order with "cur_pixel" reward to the beginning
                                    } else if (!aHasPixelReward && bHasPixelReward) {
                                      return 1; // Move sell order without "cur_pixel" reward to the end
                                    } else {
                                      return 0; // No priority difference if both have the same currency or neither have rewards
                                    }
                                  });
                                  
                                Y.e.set(J.v, R);
                                break;
                            case V.m.clientCmd:
                                $.ZP.sendEvent($.fb.CLIENT_CMD, R);
                                break;
                            case V.m.presentUI:
                                $.ZP.sendEvent($.fb.PRESENT_UI, R);
                                break;
                            case V.m.trade:
                                $.ZP.sendEvent($.fb.TRADE_RECEIVE, R);
                                break;
                            case V.m.marketplace:
                                $.ZP.sendEvent($.fb.MARKETPLACE_RECEIVE, R);
                                break;
                            case V.m.setAvatar:
                                $.ZP.sendEvent($.fb.PLAYER_AVATAR, R);
                                break;
                            case V.m.bookmarkMap:
                                $.ZP.sendEvent($.fb.BOOKMARK_MAP, R);
                                break;
                            case V.m.fetchMailbox:
                                $.ZP.sendEvent($.fb.RECEIVE_MAIL, R);
                                break;
                            case V.m.collectMailboxItem:
                                $.ZP.sendEvent($.fb.COLLECT_MAIL_ITEM_RESPONSE, R);
                                break;
                            case V.m.findNFTs:
                                $.ZP.sendEvent($.Yi.FOUND_NFT, R);
                                break;
                            default:
                                console.warn("Unhandled server message", m, R)
                            }
                        } catch (C) {
                            console.error("exception in message", C, "from message", m, R)
                        }
                }
                ),
                this.handleDisconnect())
            }
            applyStateChanges() {
                this.updatedEntities.forEach(m=>{
                    this.entityUpdated(m)
                }
                ),
                this.updatedEntities.clear(),
                this.updatedPet && (this.selfPetupdate(),
                this.updatedPet = !1),
                this.updatedInventory && (this.inventoryChanged(),
                this.updatedInventory = !1)
            }
            handleRoomUpdates() {
                if (!this.room)
                    return;
                this.room.onStateChange(()=>{
                    this.applyStateChanges()
                }
                ),
                this.room.state.entities.forEach(m=>{
                    this.monitorEntity(m)
                }
                ),
                this.room.state.entities.onAdd(m=>{
                    var R;
                    null === (R = this.scene) || void 0 === R || R.addEntityElement(void 0, m.toJSON()),
                    T && T.pushNewEntity(m.mid),
                    this.monitorEntity(m),
                    $.ZP.sendEvent($.fb.SERVER_BUILD_NODE, {
                        _id: m.mid,
                        action: "add",
                        type: "entity"
                    })
                }
                , !1),
                this.room.state.entities.onRemove(m=>{
                    var R;
                    let C = H.Z.getGameEntity(m.entity);
                    null === (R = this.scene) || void 0 === R || R.removeEntityElement(m.mid, null == C ? void 0 : C.type),
                    $.ZP.sendEvent($.fb.SERVER_BUILD_NODE, {
                        _id: m.mid,
                        action: "remove",
                        type: "entity"
                    })
                }
                ),
                this.room.state.chatMessages.onAdd(m=>{
                    var R;
                    (null === (R = this.room) || void 0 === R ? void 0 : R.state) && "private" !== this.room.state.type && "tutorial" !== this.room.state.type && $.ZP.sendEvent($.fb.CHAT_MESSAGE_RCV, {
                        ...m
                    })
                }
                , !1);
                let m = this.room.state.storage;
                (null == m ? void 0 : m.slots) && (m.slots.onAdd(m=>{
                    this.monitorSlot(m)
                }
                ),
                m.slots.onRemove(()=>this.updatedInventory = !0)),
                this.room.state.levels.onAdd((m,R)=>{
                    let C = JSON.parse(JSON.stringify(m));
                    $.ZP.sendEvent($.fb.ROOM_LEVEL_ADD, {
                        key: R,
                        level: C
                    }),
                    this.monitorLevel(R, m, "room")
                }
                ),
                this.room.state.players.onAdd((m,R)=>{
                    var C, T, L;
                    this.room && ((null === (C = this.room.state) || void 0 === C ? void 0 : C.type) === "private" || (null === (T = this.room.state) || void 0 === T ? void 0 : T.type) === "tutorial" || (null === (L = this.players) || void 0 === L || L.set(m.mid, m),
                    $.ZP.sendEvent($.fb.PLAYER_JOINED, {
                        username: m.username,
                        sessionId: R,
                        id: m.mid
                    }),
                    this.isSelfPlayer(R) || setTimeout(()=>this.setupOtherPlayer(m, R), 10)))
                }
                , !1),
                this.room.state.players.onRemove((m,R)=>{
                    var C, T, L, U;
                    this.room && (null === (C = this.room.state) || void 0 === C ? void 0 : C.type) !== "private" && (null === (T = this.room.state) || void 0 === T ? void 0 : T.type) !== "tutorial" && (null === (L = this.players) || void 0 === L || L.delete(m.mid),
                    $.ZP.sendEvent($.fb.PLAYER_REMOVED, {
                        username: m.username,
                        id: m.mid
                    }),
                    null === (U = this.scene) || void 0 === U || U.playerLeave(R, m.mid))
                }
                )
            }
            async disconnect() {
                var m, R;
                if (!this.room)
                    return Promise.resolve(-1);
                let {room: C} = this;
                this.room.removeAllListeners(),
                null === (m = this.playerSerializer) || void 0 === m || m.teardown(),
                this.playerSerializer = void 0,
                this.selfPlayer = void 0,
                this.room = void 0;
                let T = C.leave(!0);
                return null === (R = this.players) || void 0 === R || R.clear(),
                this.scene = void 0,
                $.ZP.sendEvent($.fb.ROOM_LEAVE),
                T
            }
            doJoin(m) {
                return new Promise((R,C)=>{
                    let T = 1
                      , L = ""
                      , retryJoin = async()=>{
                        if ("need-recaptcha" !== L || m.recaptcha)
                            T > 1 && $.ZP.postEvent($.fb.SLOW_LOAD, {
                                retry: T
                            });
                        else {
                            let R = Z.Z.getStytchTelemetry().then(R=>{
                                m.telemetryId = R
                            }
                            ).catch()
                              , T = window.grecaptcha.enterprise.execute("6Le2_BoiAAAAADeY39xwjDr8P-_AAtJJBW0hWX9M", {
                                action: "join_room"
                            }).then(R=>{
                                m.recaptcha = R
                            }
                            ).catch();
                            if (await Promise.all([R, T]),
                            !m.recaptcha) {
                                C({
                                    message: "no-recaptcha-available"
                                });
                                return
                            }
                            if (!m.telemetryId) {
                                C({
                                    message: "no-telemetryId-available"
                                });
                                return
                            }
                        }
                        Z.Z.getRoomId(m.mapId, m.world).then(U=>{
                            this.client.joinById(U, m).then(m=>R(m)).catch(m=>{
                                console.error("error from colyseus", JSON.stringify(m)),
                                L = null == m ? void 0 : m.message,
                                GameStateManager.permanentErrors.includes(null == m ? void 0 : m.message) ? C(m) : GameStateManager.retryErrors.includes(null == m ? void 0 : m.message) && T < 8 ? (setTimeout(retryJoin, 5e3),
                                T += 1) : T >= 2 ? C(m) : (setTimeout(retryJoin, 3e3),
                                T += 1)
                            }
                            )
                        }
                        ).catch(m=>{
                            console.error("error from getRoomId", JSON.stringify(m)),
                            L = null == m ? void 0 : m.message,
                            GameStateManager.permanentErrors.includes(null == m ? void 0 : m.message) ? C(m) : T >= 2 ? C(m) : (setTimeout(retryJoin, 3e3),
                            T += 1)
                        }
                        )
                    }
                    ;
                    retryJoin()
                }
                )
            }
            async connect(m, R, C, L, V, q, G, Z, Y) {
                var K, J;
                this.scene = L,
                this.firstLoad && (this.registerEvents(),
                this.firstLoad = !1);
                let X = {};
                if (C) {
                    let m = C.split(",");
                    X.label = m[0],
                    m.length >= 3 && (X.offset = {
                        x: parseInt(m[1], 10),
                        y: parseInt(m[2], 10)
                    })
                }
                T = void 0;
                try {
                    this.room && (console.log("double join happened!"),
                    await this.disconnect()),
                    console.log("joining map ".concat(m, ": ").concat(Y)),
                    this.room = await this.doJoin({
                        mapId: m,
                        token: V || "iamguest",
                        isGuest: !V,
                        cryptoWallet: {},
                        username: G,
                        playerId: Z,
                        world: R,
                        ver: W.WX,
                        ...X,
                        avatar: V || !q ? "" : JSON.stringify(q),
                        lastSavedAt: Y
                    })
                } catch (m) {
                    if ((null == m ? void 0 : m.code) === U.SERVER_MAINTENANCE)
                        $.ZP.sendEvent($.fb.SVR_CANNOTCONNECT, {
                            message: null !== (K = m.message) && void 0 !== K ? K : "server-maintenance"
                        });
                    else if ((null == m ? void 0 : m.code) === U.PLAYER_BANNED) {
                        let R = m.message.split("+|=|+")
                          , C = "playerIsBanned"
                          , T = "It's cool to be in a band. Not so cool to get BANNED. You can find the appeal form in our help center";
                        R.length > 1 && R[1] && (C = R[1],
                        T = R[1]),
                        $.ZP.sendEvent($.fb.SVR_CANNOTCONNECT, {
                            message: [C, T]
                        })
                    } else
                        (null == m ? void 0 : m.message) ? "room-is-full" === m.message ? $.ZP.sendEvent($.fb.SVR_CANNOTCONNECT, {
                            message: "roomFull"
                        }) : "join-in-progress" === m.message ? $.ZP.sendEvent($.fb.SVR_CANNOTCONNECT, {
                            message: ["joinInProgress", "Your account was in process of joining a room already. You cannot be connected until the prior attempt completes"]
                        }) : "user-logging-out" === m.message ? $.ZP.sendEvent($.fb.SVR_CANNOTCONNECT, {
                            message: ["userLoggingOut", "Sorry, it is taking longer than expected to save your progress from the previous location. You can try again in a few seconds"]
                        }) : "velocity-control" === m.message ? $.ZP.sendEvent($.fb.SVR_CANNOTCONNECT, {
                            message: ["velocityControl", "The room you tried to join has too many players. Try choosing a different world."]
                        }) : "invalid-token" === m.message || "player-not-found" === m.message || "could-not-authenticate" === m.message ? $.ZP.sendEvent($.fb.SVR_CANNOTCONNECT, {
                            message: ["authenticationFailed", "To say you are who you are may be contrary to fact. Your authentication was not so authenticated."]
                        }) : "authentication-expired" === m.message ? $.ZP.sendEvent($.fb.SVR_CANNOTCONNECT, {
                            message: ["authenticationExpired", "You were there, now you are here. My head is spinning. Just...try again, please."]
                        }) : "invalid-permissions" === m.message ? $.ZP.sendEvent($.fb.SVR_CANNOTCONNECT, {
                            message: ["invalidPermissionsToJoinRoom", "The room owner did not let you in. Did you remember to knock nicely? Permission denied!"]
                        }) : "user-already-logged-in" === m.message ? $.ZP.sendEvent($.fb.SVR_CANNOTCONNECT, {
                            message: "alreadyLoggedIn"
                        }) : "transfer-in-progress" === m.message ? $.ZP.sendEvent($.fb.SVR_CANNOTCONNECT, {
                            message: ["transferInProgress", "There is a lot at stake, so you must take a break, and wait for your transfer to take"]
                        }) : "invalid-client-version" === m.message ? $.ZP.sendEvent($.fb.SVR_CANNOTCONNECT, {
                            message: ["updateClient", "No matter how hard you try to avoid it, things change. And so do you. Please refresh page for a new beginning."]
                        }) : "no-recaptcha-available" === m.message || "no-telemetryId-available" === m.message ? $.ZP.sendEvent($.fb.SVR_CANNOTCONNECT, {
                            message: ["noRecaptcha", "Dude, where's my server? Please disable ad blockers or other plugins"]
                        }) : "invalid-map" === m.message ? $.ZP.sendEvent($.fb.SVR_CANNOTCONNECT, {
                            message: ["mapNotFound", "I see you brought your ticket to the dance, but there is no dancehall here. invalid-map"]
                        }) : $.ZP.sendEvent($.fb.SVR_CANNOTCONNECT, {
                            message: [m.message, "Sorry, we couldn't enter you into the game. Care to try again? (".concat(m.message, ")")]
                        }) : $.ZP.sendEvent($.fb.SVR_CANNOTCONNECT, {
                            message: ["joinFailed", "It appears likely your destination failed to exist. If you attempt to join again, who knows where you might land? Get it? L-A-N-D. Me, neither."]
                        });
                    return
                }
                this.playerSerializer = new B.mV;
                let Q = new Promise(m=>{
                    var R;
                    null === (R = this.room) || void 0 === R || R.onMessage("joinRoom", R=>{
                        H.Z.setMapLibrary(R.config),
                        this.playerSerializer.handshake(R.handshake),
                        this.playerSerializer.setState(R.serialPlayer);
                        let C = this.playerSerializer.getState();
                        m(C)
                    }
                    )
                }
                );
                this.handleRoomEvents();
                let ee = new Promise(m=>{
                    this.room.onStateChange.once(()=>{
                        let R = this.room.state.players.get(this.room.sessionId);
                        m(R)
                    }
                    )
                }
                );
                await Promise.all([ee, Q]),
                this.selfPlayer = await Q;
                let et = await ee;
                if (await H.Z.scanGameLibrary(this.room.state.entities),
                this.selfPlayer) {
                    let m = JSON.parse(JSON.stringify(this.currentPlayer));
                    (null === (J = m.full.pet) || void 0 === J ? void 0 : J.avatar) || delete m.full.pet,
                    this.initPlayers(),
                    this.setupSelfPlayerListeners(this.selfPlayer, et),
                    this.scene.initSelfPlayerState(m),
                    $.ZP.sendEvent($.fb.ROOM_LOADED, {
                        player: m,
                        roomType: this.room.state.type,
                        mapId: this.room.state.id,
                        guild: this.room.state.guild,
                        roomName: this.room.state.name,
                        ownerAddress: this.room.state.ownerAddress,
                        sessionId: this.room.sessionId,
                        messages: JSON.parse(JSON.stringify(this.room.state.chatMessages)),
                        templateName: this.room.state.templateName
                    }),
                    $.ZP.sendEvent($.fb.ROOM_NAME_CHANGED, this.room.state.name),
                    $.ZP.sendEvent($.fb.PLAYER_ENERGY_CHANGE, {
                        energy: JSON.parse(JSON.stringify(this.selfPlayer.energy))
                    })
                }
                return this.handleRoomUpdates(),
                this.currentPlayer
            }
            entityUpdated(m) {
                let R = this.getEntityByUniqueId(m);
                if (R) {
                    var C;
                    let m = R.toJSON();
                    $.ZP.sendEvent($.fb.ENTITY_UPDATE, m),
                    null === (C = this.scene) || void 0 === C || C.updateEntity(m)
                } else
                    console.error("entity ".concat(m, " changed but not found"))
            }
            monitorEntity(m) {
                var R;
                let C = m.mid
                  , T = H.Z.getGameEntity(m.entity);
                (null == T ? void 0 : T.type) && m[T.type] && m.storage && m.storage.slots && (m.storage.slots.onAdd(m=>{
                    this.monitorSlot(m)
                }
                ),
                m.storage.slots.onRemove(()=>this.updatedInventory = !0)),
                null === (R = m.position) || void 0 === R || R.onChange(()=>{
                    this.updatedEntities.add(C)
                }
                ),
                m.onChange(()=>{
                    this.updatedEntities.add(C)
                }
                ),
                m.generic && (m.generic.onChange(()=>{
                    this.updatedEntities.add(C)
                }
                ),
                m.generic.displayInfo.onChange(()=>{
                    this.updatedEntities.add(C)
                }
                ),
                m.generic.statics && (m.generic.statics.onChange(()=>{
                    this.updatedEntities.add(C)
                }
                ),
                m.generic.statics.onAdd(()=>{
                    this.updatedEntities.add(C)
                }
                , !1),
                m.generic.statics.onRemove(()=>{
                    this.updatedEntities.add(C)
                }
                )),
                m.generic.trackers && (m.generic.trackers.onChange(()=>{
                    this.updatedEntities.add(C)
                }
                ),
                m.generic.trackers.onAdd(()=>{
                    this.updatedEntities.add(C)
                }
                , !1),
                m.generic.trackers.onRemove(()=>{
                    this.updatedEntities.add(C)
                }
                )))
            }
            monitorAchievements(m) {
                let R = m.achievementId;
                m.onChange(()=>{
                    let m = JSON.parse(JSON.stringify(this.selfPlayer.achievements.get(R)));
                    $.ZP.sendEvent($.fb.PLAYER_ACHIEVEMENT_CHANGED, {
                        achievement: m
                    })
                }
                )
            }
            monitorLevel(m, R) {
                let C = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "player";
                R.onChange(()=>{
                    var R, T, L;
                    if ("player" === C) {
                        if (this.selfPlayer) {
                            let R = JSON.parse(JSON.stringify(this.selfPlayer.levels.get(m)));
                            $.ZP.sendEvent($.fb.PLAYER_LEVEL_CHANGED, {
                                key: m,
                                level: R
                            })
                        }
                    } else if (null === (T = this.room) || void 0 === T ? void 0 : null === (R = T.state) || void 0 === R ? void 0 : R.levels) {
                        let R = JSON.parse(JSON.stringify(null === (L = this.room) || void 0 === L ? void 0 : L.state.levels.get(m)));
                        $.ZP.sendEvent($.fb.ROOM_LEVEL_CHANGED, {
                            key: m,
                            level: R
                        })
                    }
                }
                )
            }
            inventoryChanged() {
                if (this.selfPlayer) {
                    let m = JSON.parse(JSON.stringify(this.selfPlayer.inventory));
                    $.ZP.sendEvent("PLAYER_INVENTORY_CHANGE", {
                        inventory: m
                    })
                }
            }
            monitorSlot(m) {
                this.updatedInventory = !0,
                m.onChange(()=>{
                    this.updatedInventory = !0
                }
                )
            }
            monitorCoinSlot(m) {
                m.onChange(m=>{
                    let R = m.find(m=>"balance" === m.field && m.value > m.previousValue)
                      , C = JSON.parse(JSON.stringify(this.selfPlayer.coinInventory));
                    $.ZP.sendEvent("PLAYER_COIN_INVENTORY_CHANGE", {
                        coinInventory: C,
                        added: R ? R.value - R.previousValue : 0
                    })
                }
                )
            }
            selfPetupdate() {
                var m;
                let R = null === (m = this.selfPlayer) || void 0 === m ? void 0 : m.pet;
                if (R) {
                    let m = JSON.parse(JSON.stringify(R));
                    $.ZP.sendEvent($.fb.PLAYER_PET_UPDATE, {
                        full: {
                            pet: m
                        }
                    })
                }
            }
            monitorPet(m) {
                m.inventory && (m.inventory.slots.onAdd(m=>this.monitorSlot(m)),
                m.inventory.slots.onRemove(()=>this.updatedInventory = !0)),
                m.scriptInstance && m.scriptInstance.onChange(()=>this.updatedPet = !0),
                m.avatar && (m.avatar.listen("name", ()=>this.updatedPet = !0),
                m.avatar.listen("fade", ()=>this.updatedPet = !0))
            }
            petChange() {
                let m = this.currentPlayer
                  , R = null == m ? void 0 : m.full.pet;
                if (null == R ? void 0 : R.avatar) {
                    let C = JSON.parse(JSON.stringify(R));
                    $.ZP.sendEvent($.fb.PLAYER_PET_CHANGE, {
                        core: {
                            petAvatar: C.avatar,
                            position: {
                                x: m.core.position.x,
                                y: m.core.position.y
                            }
                        },
                        full: {
                            pet: C
                        }
                    }),
                    this.monitorPet(R)
                } else
                    $.ZP.sendEvent($.fb.PLAYER_PET_CHANGE, {
                        core: {
                            petAvatar: void 0
                        },
                        full: {
                            pet: void 0
                        }
                    })
            }
            setupSelfPlayerListeners(m, R) {
                var C, T;
                m.inventory.onChange(()=>{
                    let m = JSON.parse(JSON.stringify(this.selfPlayer.inventory));
                    $.ZP.sendEvent("PLAYER_INVENTORY_CHANGE", {
                        inventory: m
                    })
                }
                ),
                (null === (C = m.pet) || void 0 === C ? void 0 : C.avatar) && this.monitorPet(m.pet),
                m.listen("pet", ()=>this.petChange()),
                m.energy.onChange(()=>{
                    let m = JSON.parse(JSON.stringify(this.selfPlayer.energy));
                    $.ZP.sendEvent("PLAYER_ENERGY_CHANGE", {
                        energy: m
                    })
                }
                ),
                R.currentAvatar.onChange(()=>{
                    let m = R.currentAvatar.toJSON();
                    $.ZP.sendEvent("PLAYER_CURRENTAVATAR_CHANGE", {
                        currentAvatar: m
                    })
                }
                );
                let membershipChange = ()=>{
                    let m = R.memberships.toJSON();
                    $.ZP.sendEvent("PLAYER_MEMBERSHIPS_CHANGE", {
                        memberships: m
                    })
                }
                ;
                R.memberships.onChange(membershipChange),
                R.memberships.onAdd(membershipChange, !1),
                R.memberships.onRemove(membershipChange);
                let moidifierChange = ()=>{
                    let m = R.modifiers.toJSON();
                    $.ZP.sendEvent("PLAYER_MODIFIERS_CHANGE", {
                        modifiers: m
                    })
                }
                ;
                R.modifiers.onChange(moidifierChange),
                R.modifiers.onRemove(moidifierChange),
                R.modifiers.onAdd(moidifierChange, !1),
                R.listen("username", m=>{
                    "mute" !== R.status && "restrict" !== R.status && "block" !== R.status && $.ZP.sendEvent("PLAYER_USERNAME_CHANGE", {
                        username: m
                    })
                }
                ),
                R.listen("status", m=>{
                    $.ZP.sendEvent("PLAYER_USERNAME_CHANGE", {
                        username: "mute" === m || "restrict" === m || "block" === m ? "(muted)" : R.username
                    })
                }
                ),
                m.listen("messages", m=>{
                    $.ZP.sendEvent($.fb.MAIL_UPDATE, {
                        messages: m
                    })
                }
                ),
                m.achievements.onAdd(m=>{
                    let R = JSON.parse(JSON.stringify(m));
                    $.ZP.sendEvent($.fb.PLAYER_ACHIEVEMENT_ADD, {
                        achievement: R
                    }),
                    this.monitorAchievements(m)
                }
                ),
                m.achievements.onRemove(m=>{
                    let R = JSON.parse(JSON.stringify(m));
                    $.ZP.sendEvent($.fb.PLAYER_ACHIEVEMENT_REMOVED, {
                        achievement: R
                    })
                }
                ),
                m.levels.onAdd((m,R)=>{
                    let C = JSON.parse(JSON.stringify(m));
                    $.ZP.sendEvent($.fb.PLAYER_LEVEL_ADD, {
                        key: R,
                        level: C
                    }),
                    this.monitorLevel(R, m)
                }
                ),
                null === (T = m.entities) || void 0 === T || T.forEach(m=>{
                    this.monitorEntity(m)
                }
                ),
                m.entities.onAdd(m=>{
                    var R;
                    let C = m.toJSON();
                    this.monitorEntity(m),
                    $.ZP.sendEvent($.fb.ENTITY_ADD, C),
                    null === (R = this.scene) || void 0 === R || R.addPlayerEntityNodes(C)
                }
                , !1),
                m.entities.onRemove(m=>{
                    var R;
                    null === (R = this.scene) || void 0 === R || R.removeEntity(m)
                }
                ),
                m.farms.onAdd(()=>{
                    var m;
                    let R = JSON.parse(JSON.stringify(null === (m = this.selfPlayer) || void 0 === m ? void 0 : m.farms));
                    $.ZP.sendEvent("PLAYER_FARMS_CHANGE", {
                        farms: R
                    })
                }
                , !1),
                m.farms.onRemove(()=>{
                    var m;
                    let R = JSON.parse(JSON.stringify(null === (m = this.selfPlayer) || void 0 === m ? void 0 : m.farms));
                    $.ZP.sendEvent("PLAYER_FARMS_CHANGE", {
                        farms: R
                    })
                }
                ),
                m.inventory.slots.onAdd(m=>{
                    this.monitorSlot(m)
                }
                ),
                m.inventory.slots.onRemove(()=>this.updatedInventory = !0),
                m.coinInventory.onAdd(m=>{
                    this.monitorCoinSlot(m)
                }
                ),
                m.levels.onChange(()=>{
                    let m = JSON.parse(JSON.stringify(this.selfPlayer.levels));
                    $.ZP.sendEvent("PLAYER_EXP_CHANGE", {
                        levels: m
                    })
                }
                ),
                this.questsUpdated(),
                m.quests.forEach(m=>{
                    m.onChange(()=>this.questsUpdated())
                }
                ),
                m.quests.onAdd(m=>{
                    m.onChange(()=>this.questsUpdated()),
                    this.questsUpdated()
                }
                , !1)
            }
            questsUpdated() {
                if (this.selfPlayer) {
                    let m = JSON.parse(JSON.stringify(this.selfPlayer.quests));
                    $.ZP.sendEvent("PLAYER_QUESTPROGRESS_ADDED", {
                        quests: m
                    })
                }
            }
            transformPlayerCore(m) {
                var R;
                let C = JSON.parse(JSON.stringify(m));
                return (null === (R = C.petAvatar) || void 0 === R ? void 0 : R.id) || delete C.petAvatar,
                C
            }
            setupOtherPlayer(m, R) {
                var C;
                let T = this.transformPlayerCore(m)
                  , L = null === (C = this.scene) || void 0 === C ? void 0 : C.playerJoin(T, R)
                  , updatePlayer = ()=>{
                    if (!this.room)
                        return;
                    let m = this.getPlayerCoreBySessionId(R);
                    if (m) {
                        var C;
                        T = this.transformPlayerCore(m),
                        null === (C = this.scene) || void 0 === C || C.playerJoin(T, R),
                        m.petAvatar && m.petAvatar.onChange(updatePlayer)
                    }
                }
                ;
                L && (m.velocity.onChange(()=>{
                    let m = this.getPlayerCoreBySessionId(R);
                    m && L.move(m.velocity, m.position)
                }
                ),
                m.currentAvatar.onChange(updatePlayer),
                m.modifiers.onChange(updatePlayer),
                m.listen("petAvatar", updatePlayer),
                m.listen("username", m=>{
                    m !== T.username && updatePlayer()
                }
                ),
                m.listen("status", m=>{
                    m !== T.status && updatePlayer()
                }
                ),
                m.listen("typingTimestamp", m=>{
                    m && L.showChatTyping()
                }
                ),
                m.petAvatar && m.petAvatar.onChange(updatePlayer))
            }
            constructor() {
                this.client = new B.KU(X),
                this.updateMap = !1,
                this.firstLoad = !0,
                this.serverTimeDelta = 0,
                this.worldService = new WorldService(this.client),
                this.updatedEntities = new Set,
                this.updatedPet = !1,
                this.updatedInventory = !1
            }
        }
        ;
        GameStateManager.unwantedFarmNumbers = [0],
        GameStateManager.permanentErrors = ["room-is-full", "invalid-token", "could-not-authenticate", "player-not-found", "invalid-permissions", "bad-recaptca", "bad-telemetry-data", "invalid-map", "invalid-client-version", "player-is-banned", "authentication-expired", "invalid-world", "server-maintenance", "transfer-in-progress", "teleport-unauthorized", "join-in-progress"],
        GameStateManager.retryErrors = ["user-logging-out", "velocity-control"]
    },
    60604: function(m, R, C) {
        "use strict";
        C.d(R, {
            A$: function() {
                return Y
            },
            BA: function() {
                return ee
            },
            B_: function() {
                return q
            },
            D9: function() {
                return J
            },
            DY: function() {
                return W
            },
            Kp: function() {
                return en
            },
            LI: function() {
                return $
            },
            Oe: function() {
                return el
            },
            WS: function() {
                return et
            },
            WX: function() {
                return T
            },
            XX: function() {
                return X
            },
            Y: function() {
                return eo
            },
            Z6: function() {
                return ea
            },
            ZD: function() {
                return Q
            },
            aU: function() {
                return H
            },
            fX: function() {
                return es
            },
            fd: function() {
                return ef
            },
            je: function() {
                return eu
            },
            ji: function() {
                return G
            },
            m6: function() {
                return er
            },
            p$: function() {
                return ei
            },
            pZ: function() {
                return ec
            },
            qO: function() {
                return U
            },
            rq: function() {
                return Z
            },
            sD: function() {
                return K
            },
            sV: function() {
                return L
            },
            tU: function() {
                return B
            },
            uT: function() {
                return V
            }
        });
        let T = 6.71
          , L = 1676498533e3
          , U = "game-container"
          , B = "players"
          , $ = 144
          , V = 188
          , H = 1
          , W = 2
          , q = 3e3
          , G = 1250
          , Z = 2e3
          , Y = 1
          , K = 30
          , J = 32
          , X = 21
          , Q = 90
          , ee = {
            top: 0,
            left: 0,
            right: 6e3,
            bottom: 6e3
        }
          , et = {
            width: ee.right - ee.left,
            height: ee.bottom - ee.top
        }
          , er = 2
          , en = .05
          , eo = 100
          , ei = .4
          , ea = 2
          , es = 3 / eo
          , el = ["https://pixels.xyz", "https://pixels.online"]
          , ec = "https://d31ss916pli4td.cloudfront.net"
          , eu = "https://mesh-online-assets.s3.us-east-2.amazonaws.com"
          , ef = "".concat(ec, "/game/ui/skills/skills_icon_")
    },
    34377: function(m, R, C) {
        "use strict";
        C.d(R, {
            Vh: function() {
                return B
            },
            fb: function() {
                return $
            },
            Yi: function() {
                return H
            },
            qM: function() {
                return V
            },
            ZP: function() {
                return Y
            },
            rV: function() {
                return Z
            },
            d6: function() {
                return sendEnhancedControlEvent
            },
            lY: function() {
                return sendJoystickControlEvent
            },
            D9: function() {
                return sendSoundControlEvent
            }
        });
        var T, L, U, B, $, V, H, W = C(80535);
        (B || (B = {})).RESIZE = "RESIZE",
        (T = $ || ($ = {})).INIT_GAME = "INIT_GAME",
        T.GAME_OBJECT_CLICKED = "GAME_OBJECT_CLICKED",
        T.GAME_INITIATED = "GAME_INITIATED",
        T.GAME_CONNECTED = "GAME_CONNECTED",
        T.ROOM_LOADED = "ROOM_LOADED",
        T.ROOM_LEAVE = "ROOM_LEAVE",
        T.PLAYER_JOINED = "PLAYER_JOINED",
        T.PLAYER_CLICKED = "PLAYER_CLICKED",
        T.PLAYER_DRAGGING = "PLAYER_DRAGGING",
        T.PLAYER_REMOVED = "PLAYER_REMOVED",
        T.PLAYER_ENERGY_CHANGE = "PLAYER_ENERGY_CHANGE",
        T.PLAYER_QUESTS_ADDED = "PLAYER_QUESTS_ADDED",
        T.PLAYER_ENTITIES_ADDED = "PLAYER_ENTITIES_ADDED",
        T.PLAYER_QUESTS_REMOVED = "PLAYER_QUESTS_REMOVED",
        T.PLAYER_ENTITIES_REMOVED = "PLAYER_ENTITIES_REMOVED",
        T.PLAYER_AVATAR = "PLAYER_AVATAR",
        T.PLAYER_PET_CHANGE = "PLAYER_PET_CHANGE",
        T.PLAYER_PET_UPDATE = "PLAYER_PET_UPDATE",
        T.PLAYER_COLLIDED_WITH_OBJECT = "PLAYER_COLLIDED_WITH_OBJECT",
        T.PLAYER_UNCOLLIDED_WITH_OBJECT = "PLAYER_UNCOLLIDED_WITH_OBJECT",
        T.NPC_SPEAKS = "NPC_SPEAKS",
        T.PLAYER_INVENTORY_CHANGE = "PLAYER_INVENTORY_CHANGE",
        T.PLAYER_COIN_INVENTORY_CHANGE = "PLAYER_COIN_INVENTORY_CHANGE",
        T.PLAYER_QUESTPROGRESS_ADDED = "PLAYER_QUESTPROGRESS_ADDED",
        T.PLAYER_EXP_CHANGE = "PLAYER_EXP_CHANGE",
        T.PLAYER_OPEN_STORAGE = "PLAYER_OPEN_STORAGE",
        T.CHAT_MESSAGE_RCV = "CHAT_MESSAGE_RCV",
        T.SERVICE_COMMAND = "SERVICE_COMMAND",
        T.SET_TOS_ACCEPTED = "SET_TOS_ACCEPTED",
        T.REPORT_PLAYER = "REPORT_PLAYER",
        T.SVR_CANNOTCONNECT = "SVR_CANNOTCONNECT",
        T.GAME_OBJECT_MOUSEOVER = "GAME_OBJECT_MOUSEOVER",
        T.GAME_OBJECT_MOUSEOUT = "GAME_OBJECT_MOUSEOUT",
        T.LINK_OPEN = "LINK_OPEN",
        T.ROOM_WARP = "ROOM_WARP",
        T.LIBRARY = "LIBRARY",
        T.BOOKMARK_MAP = "BOOKMARK_MAP",
        T.SLOW_LOAD = "SLOW_LOAD",
        T.ENTITY_UPDATE = "ENTITY_UPDATE",
        T.ENTITY_REMOVE = "ENTITY_REMOVE",
        T.ENTITY_ADD = "ENTITY_ADD",
        T.ROOM_PERMISSIONS_CHANGED = "ROOM_PERMISSIONS_CHANGED",
        T.ROOM_RESTRICTIONS_CHANGED = "ROOM_RESTRICTIONS_CHANGED",
        T.ROOM_OWNERSHIP_CHANGED = "ROOM_OWNERSHIP_CHANGED",
        T.ROOM_MEMBERS_CHANGED = "ROOM_MEMBERS_CHANGED",
        T.ROOM_OWNER_CHANGED = "ROOM_OWNER_CHANGED",
        T.ROOM_NAME_CHANGED = "ROOM_NAME_CHANGED",
        T.ROOM_GUILD_CHANGED = "ROOM_GUILD_CHANGED",
        T.ROOM_LEVEL_CHANGED = "ROOM_LEVEL_CHANGED",
        T.ROOM_LEVEL_ADD = "ROOM_LEVEL_ADD",
        T.PLAYER_ACHIEVEMENT_ADD = "PLAYER_ACHIEVEMENT_ADD",
        T.PLAYER_ACHIEVEMENT_CHANGED = "PLAYER_ACHIEVEMENT_CHANGED",
        T.PLAYER_ACHIEVEMENT_REMOVED = "PLAYER_ACHIEVEMENT_REMOVED",
        T.PLAYER_LEVEL_CHANGED = "PLAYER_LEVEL_CHANGED",
        T.PLAYER_LEVEL_ADD = "PLAYER_LEVEL_ADD",
        T.PRESENT_FARM_DETAILS = "PRESENT_FARM_DETAILS",
        T.DISMISS_FARM_DETAILS = "DISMISS_FARM_DETAILS",
        T.PRESENT_UI = "PRESENT_UI",
        T.CLIENT_CMD = "CLIENT_CMD",
        T.TRADE_SEND = "TRADE_SEND",
        T.TRADE_RECEIVE = "TRADE_RECEIVE",
        T.MARKETPLACE_SEND = "MARKETPLACE_SEND",
        T.MARKETPLACE_RECEIVE = "MARKETPLACE_RECEIVE",
        T.SERVER_BUILD_NODE = "SERVER_BUILD_NODE",
        T.RECEIVE_MAIL = "RECEIVE_MAIL",
        T.COLLECT_MAIL_ITEM_RESPONSE = "COLLECT_MAIL_ITEM_RESPONSE",
        T.MAIL_UPDATE = "MAIL_UPDATE",
        (L = V || (V = {})).BUILD_OBJECT = "BUILD_OBJECT",
        L.SET_CATEGORY = "SET_CATEGORY",
        L.SET_MODE = "SET_MODE",
        L.SELECT_ENTITY = "SELECT_ENTITY",
        L.ROOM_RESTRICTIONS = "ROOM_RESTRICTIONS",
        L.ROOM_PERMISSIONS = "ROOM_PERMISSIONS",
        L.ROOM_OWNERSHIP = "ROOM_OWNERSHIP",
        L.ROOM_MEMBERS = "ROOM_MEMBERS",
        L.CLAIM_NFTMAP = "CLAIM_NFTMAP",
        L.BUILD_TILE = "BUILD_TILE",
        L.BUILD_ENTITY = "BUILD_ENTITY",
        L.UPGRADE_FARM = "UPGRADE_FARM",
        L.ROOM_NAME = "ROOM_NAME",
        L.RELEASE_FROM_CURSOR = "RELEASE_FROM_CURSOR",
        L.PLAYER_CLICKED_NPC = "PLAYER_CLICKED_NPC",
        L.PLAYER_USED_ITEM = "PLAYER_USED_ITEM",
        (U = H || (H = {})).TRIGGER_EVENT = "TRIGGER_EVENT",
        U.FETCH_MAIL = "FETCH_MAIL",
        U.COLLECT_MAIL_ITEM = "COLLECT_MAIL_ITEM",
        U.NFT_SELECTED = "NFT_SELECTED",
        U.PET_SELECTED = "PET_SELECTED",
        U.PET_RENAME = "PET_RENAME",
        U.SET_TYPING_STATE = "SET_TYPING_STATE",
        U.CHAT_MESSAGE_SEND = "CHAT_MESSAGE_SEND",
        U.PLAYER_MOVING = "PLAYER_MOVING",
        U.FARM_CLAIM = "FARM_CLAIM",
        U.BUY_STORE_ITEM = "BUY_STORE_ITEM",
        U.SELL_STORE_ITEM = "SELL_STORE_ITEM",
        U.MINT_UGC = "MINT_UGC",
        U.FIND_NFT = "FIND_NFT",
        U.FOUND_NFT = "FOUND_NFT",
        U.PUSH_SUBSCRIBE = "PUSH_SUBSCRIBE",
        U.NPCDIALOG_CLOSE = "NPCDIALOG_CLOSE";
        let q = new class {
            get intialized() {
                return !!this.phaserEventEmitter
            }
            async init() {
                let m = await C.e(989).then(C.t.bind(C, 82260, 23));
                this.phaserEventEmitter || (this.phaserEventEmitter = new m.Events.EventEmitter,
                Object.values($).forEach(m=>{
                    this.registerEventListener(m, R=>{
                        W.h.dispatch({
                            type: "game/".concat(m),
                            payload: R
                        })
                    }
                    )
                }
                ))
            }
            registerEventListener(m, R) {
                var C;
                null === (C = this.phaserEventEmitter) || void 0 === C || C.on(m, R)
            }
            removeEventListerner(m, R) {
                var C;
                null === (C = this.phaserEventEmitter) || void 0 === C || C.removeListener(m, R)
            }
            sendEvent(m, R) {
                var C;
                null === (C = this.phaserEventEmitter) || void 0 === C || C.emit(m, R)
            }
            postEvent(m, R) {
                setTimeout(()=>{
                    this.sendEvent(m, R)
                }
                )
            }
        }
          , G = 0;
        function createEvent() {
            let m, R, {debugName: C, emitterAtom: T} = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, L = [], unsubscribe = R=>{
                let T = L.indexOf(R);
                if (T < 0)
                    throw Error("Subscriber not found for '".concat(null != C ? C : U.id, "'. Did you already remove it?"));
                L.splice(T, 1),
                m && !L.length && m()
            }
            , U = {
                id: "event_".concat(++G),
                emit: m=>L.forEach(R=>R(m)),
                emitDeferred: m=>setTimeout(()=>U.emit(m)),
                subscribe: R=>(T && !m && (m = W.e.sub(T, ()=>U.emit(W.e.get(T)))),
                L.push(R),
                ()=>unsubscribe(R)),
                subscribeAtom: m=>U.subscribe(R=>W.e.set(m, R)),
                subscribeScene: (m,R)=>{
                    let C = U.subscribe(R);
                    return m.events.once("destroy", C),
                    ()=>{
                        m.events.off("destroy", C),
                        C()
                    }
                }
                ,
                addReduxCase: (m,C)=>{
                    R || (R = U.subscribe(m=>W.h.dispatch({
                        type: U.id,
                        payload: m
                    }))),
                    m.addCase(U.id, C)
                }
            };
            return U
        }
        let Z = {
            playSound: createEvent(),
            soundControl: createEvent(),
            enhancedControl: createEvent(),
            joystickControl: createEvent(),
            blur: createEvent(),
            attachToCursor: createEvent(),
            editor: {
                on: createEvent(),
                off: createEvent()
            },
            inventory: {
                swapItems: createEvent(),
                changeActiveRow: createEvent()
            },
            sellOrders: {
                fetch: createEvent(),
                fill: createEvent(),
                reset: createEvent()
            }
        };
        function sendSoundControlEvent(m) {
            Z.soundControl.emitDeferred(m)
        }
        function sendEnhancedControlEvent(m) {
            Z.enhancedControl.emitDeferred(m)
        }
        function sendJoystickControlEvent(m) {
            Z.joystickControl.emitDeferred(m)
        }
        var Y = q
    },
    82485: function(m, R, C) {
        "use strict";
        C.d(R, {
            ML: function() {
                return IsRemoveOrMoveItem
            },
            N8: function() {
                return CropStageGrowTime
            },
            SB: function() {
                return CropRemainingGrowTime
            },
            ZZ: function() {
                return CanUseItem
            },
            q7: function() {
                return CropNeedsWater
            },
            yC: function() {
                return HasEnergy
            }
        });
        var T = C(96486)
          , L = C.n(T)
          , U = C(70247);
        function HasEnergy(m, R) {
            var C, T, L;
            return R.full.energy.level >= -(null !== (L = null === (T = m.onUse) || void 0 === T ? void 0 : null === (C = T.energy) || void 0 === C ? void 0 : C.value) && void 0 !== L ? L : 0)
        }
        function CropNeedsWater(m, R) {
            var C;
            let T = null === (C = m.crop) || void 0 === C ? void 0 : C.states;
            if (!T || R.canHarvest)
                return !1;
            let L = T[R.state];
            return (null == L ? void 0 : L.onGrow) && R.waterLevel < 50
        }
        function CropRemainingGrowTime(m, R) {
            var C, T;
            let L = null === (C = m.crop) || void 0 === C ? void 0 : C.states;
            if (!L || R.canHarvest)
                return 0;
            let U = -R.ageMinutes
              , B = L[R.state];
            for (; (null == B ? void 0 : B.onGrow) && (null == B ? void 0 : null === (T = B.onGrow[0]) || void 0 === T ? void 0 : T.state) && "ripe" !== B.state; )
                U += B.minutesRequired,
                B = L[B.onGrow[0].state];
            return U
        }
        function CropStageGrowTime(m, R) {
            var C, T, L;
            let U = null === (C = m.crop) || void 0 === C ? void 0 : C.states;
            return !U || R.canHarvest ? 0 : -R.ageMinutes + (null !== (L = null === (T = U[R.state]) || void 0 === T ? void 0 : T.minutesRequired) && void 0 !== L ? L : 0)
        }
        function CanUseItem(m, R, C, T) {
            var B;
            let $;
            if ("string" == typeof m) {
                let R = U.Z.getGameItem(m);
                if (!R)
                    return !1;
                m = R
            }
            let V = null == m ? void 0 : m.useTargets;
            if (!V)
                return !1;
            let H = null === (B = m.onUse) || void 0 === B ? void 0 : B.types.every(m=>{
                var L, B, V;
                switch (m) {
                case "harvest":
                    if ($ = U.Z.getGameEntity(R),
                    !T || !(null == $ ? void 0 : null === (L = $.crop) || void 0 === L ? void 0 : L.states))
                        return !1;
                    {
                        let m = $.crop;
                        if (!m.states[T] || !m.states[T].onHarvest)
                            return !1
                    }
                    break;
                case "fertilize":
                    if ($ = U.Z.getGameEntity(R),
                    !T || !(null == $ ? void 0 : null === (B = $.crop) || void 0 === B ? void 0 : B.states))
                        return !1;
                    {
                        let m = $.crop;
                        if (!m.states[T] || !m.states[T].onGrow || 0 === m.states[T].onGrow.length)
                            return console.log("cannot fertilize ".concat(R)),
                            !1
                    }
                    break;
                case "removeEntity":
                    let H = U.Z.getGameEntity(R);
                    if (H && !(null == H ? void 0 : H.onRemove))
                        return !1;
                    break;
                case "removeObject":
                    let W = U.Z.getGameObject(R);
                    if (W && !(null == W ? void 0 : W.onRemove))
                        return !1;
                    break;
                case "move":
                    if ("crop" === C)
                        return !1;
                    let q = null !== (V = U.Z.getGameEntity(R)) && void 0 !== V ? V : U.Z.getGameObject(R);
                    if (null == q ? void 0 : q.immovable)
                        return !1
                }
                return !0
            }
            );
            return !!H && (null == V ? void 0 : V.types.some(m=>{
                var T, B, $, H, W;
                if ("entities" === m)
                    return null === (T = V.entities) || void 0 === T ? void 0 : T.includes(R);
                if ("entityTypes" === m)
                    return !!C && (null === (B = V.entityTypes) || void 0 === B ? void 0 : B.includes(C));
                if ("entityLabels" === m) {
                    let m = U.Z.getGameEntity(R);
                    if (null == m ? void 0 : m.labels)
                        return L().isEmpty(L().xor(V.entityLabels, m.labels))
                } else if ("playerEntityTypes" === m)
                    return !!C && (null === ($ = V.playerEntityTypes) || void 0 === $ ? void 0 : $.includes(C));
                else if ("ground" === m)
                    return "ground" === C;
                else if ("pet" === m)
                    return "pet" === R;
                else if ("objects" === m)
                    return null === (H = V.objects) || void 0 === H ? void 0 : H.includes(R);
                else if ("objectTypes" === m) {
                    let m = U.Z.getGameObject(R);
                    return null == m ? void 0 : null === (W = m.types) || void 0 === W ? void 0 : W.every(m=>{
                        var R;
                        return null === (R = V.objectTypes) || void 0 === R ? void 0 : R.includes(m)
                    }
                    )
                } else if ("self" === m)
                    return "self" === R;
                return !1
            }
            ))
        }
        function IsRemoveOrMoveItem(m, R, C, T) {
            if ("string" == typeof m) {
                let R = U.Z.getGameItem(m);
                if (!R)
                    return !1;
                m = R
            }
            return !!(m.onUse && CanUseItem(m, R, C, T)) && (m.onUse.types.includes("removeEntity") || m.onUse.types.includes("removeObject") || m.onUse.types.includes("move"))
        }
        R.ZP = CanUseItem
    },
    79750: function(m, R, C) {
        "use strict";
        C.d(R, {
            F5: function() {
                return getTenantID
            },
            GU: function() {
                return getTenantInfo
            },
            lf: function() {
                return getDefaultMap
            },
            q4: function() {
                return switchTenant
            }
        });
        var T = C(70247);
        let L = {
            id: "pixels",
            name: "pixels",
            map: "terravilla",
            mapPrefix: "pixelsNFTFarm-",
            twitter: "",
            defaultCurrency: "cur_coins"
        };
        function getTenantID() {
            try {
                let m = window.location.pathname.split("/")[1];
                if ("nucyber" === m && (m = "gridcraft"),
                !m || "map" === m)
                    return L.id;
                return m.toLowerCase().trim()
            } catch (m) {
                return L.id
            }
        }
        function switchTenant(m) {
            let R = T.Z.getTenants();
            if (!R)
                return !1;
            let C = Object.values(R).find(R=>R.name === m);
            if (!C || (null == C ? void 0 : C.id) === getTenantID())
                return !1;
            let L = "".concat(window.location.origin, "/").concat(C.id);
            return window.history.replaceState(null, "", L),
            !0
        }
        function getDefaultMap() {
            let m = getTenantInfo();
            return m.map
        }
        function getTenantInfo() {
            var m, R;
            let C = getTenantID()
              , U = T.Z.getTenants();
            return null !== (R = null !== (m = null == U ? void 0 : U[C]) && void 0 !== m ? m : null == U ? void 0 : U.pixels) && void 0 !== R ? R : L
        }
    },
    83928: function(m, R, C) {
        "use strict";
        C.d(R, {
            Uk: function() {
                return assetCDN
            },
            KG: function() {
                return ceilCurrency
            },
            Ky: function() {
                return checkLinkRedirect
            },
            Ye: function() {
                return checkVersion
            },
            r$: function() {
                return clearWagmiLocalState
            },
            Fp: function() {
                return convertDashboardURL
            },
            zB: function() {
                return dirtyWordies
            },
            Ir: function() {
                return favIconPath
            },
            FL: function() {
                return filterDirtyWordies
            },
            TP: function() {
                return findProvider
            },
            aR: function() {
                return floorCurrency
            },
            xG: function() {
                return formatCurrency
            },
            uf: function() {
                return formatNumber
            },
            _O: function() {
                return getAngle
            },
            fI: function() {
                return isExternalURL
            },
            T1: function() {
                return isRelativeURL
            },
            Ul: function() {
                return localState
            },
            r5: function() {
                return mapDisplayName
            },
            Sj: function() {
                return maxCurrencyDecimals
            },
            DJ: function() {
                return pointDistanceSquared
            },
            pt: function() {
                return preloadImage
            },
            pp: function() {
                return radiusSquared
            },
            En: function() {
                return sanitizeMapId
            },
            b7: function() {
                return stripURLSchema
            }
        });
        var T, L, U = C(60604);
        /*! js-cookie v3.0.5 | MIT */
        function js_cookie_assign(m) {
            for (var R = 1; R < arguments.length; R++) {
                var C = arguments[R];
                for (var T in C)
                    m[T] = C[T]
            }
            return m
        }
        var B = function init(m, R) {
            function set(C, T, L) {
                if ("undefined" != typeof document) {
                    "number" == typeof (L = js_cookie_assign({}, R, L)).expires && (L.expires = new Date(Date.now() + 864e5 * L.expires)),
                    L.expires && (L.expires = L.expires.toUTCString()),
                    C = encodeURIComponent(C).replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent).replace(/[()]/g, escape);
                    var U = "";
                    for (var B in L)
                        L[B] && (U += "; " + B,
                        !0 !== L[B] && (U += "=" + L[B].split(";")[0]));
                    return document.cookie = C + "=" + m.write(T, C) + U
                }
            }
            return Object.create({
                set,
                get: function(R) {
                    if ("undefined" != typeof document && (!arguments.length || R)) {
                        for (var C = document.cookie ? document.cookie.split("; ") : [], T = {}, L = 0; L < C.length; L++) {
                            var U = C[L].split("=")
                              , B = U.slice(1).join("=");
                            try {
                                var $ = decodeURIComponent(U[0]);
                                if (T[$] = m.read(B, $),
                                R === $)
                                    break
                            } catch (m) {}
                        }
                        return R ? T[R] : T
                    }
                },
                remove: function(m, R) {
                    set(m, "", js_cookie_assign({}, R, {
                        expires: -1
                    }))
                },
                withAttributes: function(m) {
                    return init(this.converter, js_cookie_assign({}, this.attributes, m))
                },
                withConverter: function(m) {
                    return init(js_cookie_assign({}, this.converter, m), this.attributes)
                }
            }, {
                attributes: {
                    value: Object.freeze(R)
                },
                converter: {
                    value: Object.freeze(m)
                }
            })
        }({
            read: function(m) {
                return '"' === m[0] && (m = m.slice(1, -1)),
                m.replace(/(%[\dA-F]{2})+/gi, decodeURIComponent)
            },
            write: function(m) {
                return encodeURIComponent(m).replace(/%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g, decodeURIComponent)
            }
        }, {
            path: "/"
        });
        let favIconPath = ()=>{
            var m;
            switch (null !== (m = "production".toString()) && void 0 !== m ? m : "local") {
            case "production":
                return "/favicon";
            case "staging":
                return "/favicon_staging";
            case "preview":
                return "/favicon_preview";
            default:
                return "/favicon_development"
            }
        }
          , isExternalURL = m=>!(!m || isRelativeURL(m)) && !U.Oe.reduce((R,C)=>R || m.startsWith(C), !1)
          , isRelativeURL = m=>(null == m ? void 0 : m.startsWith("/")) && !(null == m ? void 0 : m.startsWith("//"))
          , convertDashboardURL = m=>{
            if (null == m ? void 0 : m.includes("dashboard.pixels")) {
                let R = window.location.hostname;
                if ("dev.pixels.xyz" === R)
                    return m.replace("dashboard.pixels", "dashboard-dev.pixels");
                if ("preview.pixels.xyz" === R)
                    return m.replace("dashboard.pixels", "dashboard-preview.pixels");
                if ("staging.pixels.xyz" === R)
                    return m.replace("dashboard.pixels", "dashboard-staging.pixels")
            } else if ((null == m ? void 0 : m.startsWith("/dashboard/")) || "/dashboard" === m) {
                let R = window.location.hostname
                  , C = m.replace("/dashboard", "");
                return "dev.pixels.xyz" === R ? "//dashboard-dev.pixels.xyz".concat(C) : R.includes("localhost") ? "//localhost:3001/".concat(C) : "preview.pixels.xyz" === R ? "//dashboard-preview.pixels.xyz".concat(C) : "staging.pixels.xyz" === R ? "//dashboard-staging.pixels.xyz".concat(C) : "//dashboard.pixels.xyz".concat(C)
            }
            return m
        }
          , findProvider = m=>{
            switch (m) {
            case "metamask":
                return findWallet("isMetaMask");
            case "coinbase":
                return findWallet("isCoinbaseWallet") || window.coinbaseWalletExtension;
            case "okx":
                return window.okxwallet;
            case "trust":
                return window.trustwallet;
            case "ronin":
                var R;
                return null === (R = window.ronin) || void 0 === R ? void 0 : R.provider
            }
        }
          , findWallet = m=>{
            var R;
            if (window.ethereum) {
                if (!window.ethereum.isOkxWallet && window.ethereum[m] && !window.ethereum.providers)
                    return window.ethereum;
                if (null === (R = window.ethereum.providers) || void 0 === R ? void 0 : R.length) {
                    let R = window.ethereum.providers.find(R=>null == R ? void 0 : R[m]);
                    if (R)
                        return R
                }
                if (window[m])
                    return window[m];
                console.log("Couldn't find wallet provider for ".concat(m))
            }
        }
          , $ = {}
          , localState = (m,R)=>{
            if ("pixels-session" === m) {
                let m = "pixels-session";
                if (void 0 === R)
                    return B.get(m);
                if (null === R)
                    B.remove(m, {
                        domain: "pixels.xyz"
                    });
                else {
                    let C = new Date;
                    C.setFullYear(C.getFullYear() + 10),
                    B.set(m, R, {
                        expires: C,
                        secure: !0,
                        sameSite: "strict",
                        domain: "pixels.xyz"
                    })
                }
                return
            }
            if (void 0 === R)
                return $[m] ? $[m] : window.localStorage.getItem(m);
            if (null === R)
                delete $[m],
                window.localStorage.removeItem(m);
            else {
                $[m] = R;
                try {
                    window.localStorage.setItem(m, R)
                } catch (m) {}
            }
        }
          , clearWagmiLocalState = ()=>{
            Object.keys(localStorage).filter(m=>m.startsWith("wc@2:") || m.startsWith("wagmi.") || m.startsWith("-walletlink:")).forEach(m=>localStorage.removeItem(m))
        }
          , formatNumber = function(m) {
            let R = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
            return (null != m ? m : 0).toLocaleString(void 0, {
                maximumFractionDigits: R
            })
        }
          , formatCurrency = (m,R)=>{
            var C, T;
            let L = null !== (T = null == R ? void 0 : R.roundDecimalPlaces) && void 0 !== T ? T : Math.floor(Math.log10(2 ** (null !== (C = null == R ? void 0 : R.roundBinaryPlaces) && void 0 !== C ? C : 0)));
            return formatNumber(m, L)
        }
          , maxCurrencyDecimals = m=>{
            var R;
            return (null == m ? void 0 : m.roundDecimalPlaces) ? null == m ? void 0 : m.roundDecimalPlaces : Math.floor(Math.log10(2 ** (null !== (R = null == m ? void 0 : m.roundBinaryPlaces) && void 0 !== R ? R : 0)))
        }
          , ceilCurrency = (m,R)=>{
            var C;
            let T = (null == R ? void 0 : R.roundDecimalPlaces) ? 10 ** R.roundDecimalPlaces : 2 ** (null !== (C = null == R ? void 0 : R.roundBinaryPlaces) && void 0 !== C ? C : 0);
            return Math.ceil(m * T) / T
        }
          , floorCurrency = (m,R)=>{
            var C;
            let T = (null == R ? void 0 : R.roundDecimalPlaces) ? 10 ** R.roundDecimalPlaces : 2 ** (null !== (C = null == R ? void 0 : R.roundBinaryPlaces) && void 0 !== C ? C : 0);
            return Math.floor(m * T) / T
        }
          , getAngle = (m,R)=>Math.atan2(R.y - m.y, R.x - m.x)
          , pointDistanceSquared = (m,R)=>(R.x - m.x) ** 2 + (R.y - m.y) ** 2
          , radiusSquared = m=>{
            let {selfPlayer: R, world: C, object: T, useType: L} = m;
            if (!R)
                return 1e4;
            if ("self" === L || "pet" === L)
                return 0;
            if (T) {
                let m = Math.max(0, Math.abs(R.y - T.y) - T.height / 2) ** 2 + Math.max(0, Math.abs(R.x - T.x) - T.width / 2) ** 2;
                return m
            }
            return (R.y - C.y) * (R.y - C.y) + (R.x - C.x) * (R.x - C.x)
        }
          , preloadImage = m=>window.fetch(m, {
            mode: "cors",
            credentials: "omit"
        })
          , checkVersion = async()=>{
            try {
                return await window.fetch("/api/ver").then(m=>m.json())
            } catch (m) {
                return {
                    error: m,
                    version: -1
                }
            }
        }
          , V = {}
          , checkLinkRedirect = async m=>{
            try {
                if (V[m])
                    return V[m];
                let R = encodeURIComponent(m)
                  , C = await window.fetch("/api/expand?url=" + R).then(m=>m.json());
                if (null == C ? void 0 : C.url)
                    return V[m] = C.url,
                    C.url
            } catch (m) {
                console.error("error looking up redirect", m)
            }
            return m
        }
          , H = /fuck|shit|cunt|cock|fcuk|nigger|5hit/i
          , W = /\b(4r5e|5h1t|5hit|a55|hitler|anal|anus|ar5e|arrse|arse|ass|asshole|asswhole|a_s_s|b!tch|b00bs|b17ch|b1tch|ballbag|balls|ballsack|bastard|beastial|beastiality|bellend|bestial|bestiality|bi\+ch|biatch|bitch|bitcher|bitchers|bitches|bitchin|bitching|bloody|blow job|blowjob|boiolas|bollock|bollok|boner|boob|booob|boooob|booooob|booooooob|breasts|buceta|bugger|bum|butthole|buttmunch|buttplug|c0ck|c0cksucker|carpet muncher|cawk|chink|cipa|cl1t|clit|clitoris|cnut|cock|cok|coon|cox|crap|cum|cummer|cumming|cums|cumshot|cunilingus|cunillingus|cunnilingus|cunt|cyalis|cyberfuc|d1ck|damn|dick|dickhead|dildo|dink|dinks|dirsa|dlck|doggin|dogging|donkeyribber|doosh|duche|dyke|ejaculat|ejakulate|f u c k|f u c k e r|f4nny|fag|fanny|fannyflaps|fanyy|fatass|fcuk|fcuker|fcuking|feck|fecker|felching|fellate|fellatio|flange|fook|fooker|fudge packer|fudgepacker|fuk|fuker|fukker|fukkin|fuks|fukwhit|fukwit|fux|fux0r|f_u_c_k|gangbang|gangbanged|gangbangs|gaylord|gaysex|goatse|God|god-dam|god-damned|goddamn|goddamned|hardcoresex|heshe|hoare|hoer|homo|hore|horniest|horny|hotsex|jack-off|jackoff|jap|jerk-off|jism|jiz|jizm|jizz|kawk|knob|knobead|knobed|knobend|knobhead|knobjocky|knobjokey|kock|kondum|kondums|kum|kummer|kumming|kums|kunilingus|l3i\+ch|l3itch|labia|lust|lusting|m0f0|m0fo|m45terbate|ma5terb8|ma5terbate|masochist|master-bate|masterb8|masterbat*|masterbat3|masterbat|masturbate|mo-fo|mof0|mofo|mothafuck|mother fuck|motherfuck|muff|mutha|muthafeck|muthafuckk|muther|n1gga|n1gger|nazi|nigg3r|nigg4h|nigga|niggah|niggas|niggaz|nigger|niggers|nob|nob jokey|nobhead|nobjocky|nobjokey|numbnuts|nutsack|orgasim|orgasims|orgasm|orgasms|p0rn|pawn|pecker|penis|penisfucker|phonesex|phuck|phuk|phuked|phuking|phukked|phukking|phuks|phuq|pigfucker|pimpis|piss|poop|porn|prick|pron|pube|pusse|pussi|pussy|rectum|retard|rimjaw|rimming|s hit|s.o.b.|sadist|schlong|screwing|scroat|scrote|scrotum|semen|sex|sh!\+|sh!t|sh1t|shag|shagger|shaggin|shagging|shemale|shi\+|skank|slut|sluts|smegma|smut|snatch|son-of-a-bitch|spunk|s_h_i_t|t1tt1e|teets|teez|testical|testicle|titfuck|tits|titt|titwank|tosser|turd|tw4t|twat|twathead|twatty|v14gra|v1gra|vagina|viagra|vulva|w00se|wang|wank|wanker|wanky|whoar|whore|xrated|xxx|kkk)/gi
          , q = (null === (L = window.navigator) || void 0 === L ? void 0 : null === (T = L.languages) || void 0 === T ? void 0 : T.some(m=>null == m ? void 0 : m.startsWith("tl"))) ? /fuck|shit|cunt|cock|fcuk|hitler|[-._+,;:'`#^/\\]+[A-Za-z]+[-._+,;:'`#^/\\]|putang|asshole|asswhole|gago|bastard|beastial|punyeta|ulol|tae|hayop|bi\+ch|biatch|bitch|bitcher|bitchers|bitches|lintik|pakshet|bloody|blowjob|boiolas|bollock|bollok|boo+b|bogo|breasts|buceta|bugger|butthole|buttmunch|buttplug|c0ck|c0cksucker|carpet muncher|bobo|chink|cl1t|clit|clitoris|cnut|cock|cok|cox|cummer|cumming|cumshot|cunilingus|cunillingus|cunnilingus|cunt|cyalis|cyberfuc|d1ck|dickhead|dildo|dinks|dirsa|dlck|donkeyribber|doosh|duche|dyke|ejaculat|ejakulate|f u c k|f u c k e r|f4nny|fanny|fanyy|fatass|fcuk|fcuker|fcuking|fecker|felching|fellate|fellatio|flange|fudge packer|fudgepacker|fuk|fuker|fukker|fukkin|fuks|fukwhit|fukwit|fux0r|gangbang|gangbanged|gangbangs|gaylord|gaysex|god-dam|god-damned|goddamn|goddamned|hardcoresex|hoare|horniest|horny|hotsex|jack-off|jackoff|jerk-off|jism|jizm|jizz|kawk|puta|knobed|knobend|knobhead|knobjocky|knobjokey|kondum|kondums|kummer|kumming|kunilingus|l3i\+ch|l3itch|labia|m0f0|m0fo|m45terbate|ma5terb8|ma5terbate|masochist|master-bate|masterb8|masterbat|mo-fo|mof0|mothafuck|mother fucker|motherfuck|muthafeck|muthafuck|n1gga|n1gger|nazi|nigg3r|nigg4h|nigga|niggah|niggas|niggaz|nigger|niggers|numbnuts|nutsack|orgasim|orgasims|orgasm|orgasms|p0rn|penis|penisfucker|phonesex|phuck|phuked|phuking|phukked|phukking|phuks|pigfucker|pimpis|pissflaps|pissin|pissing|pissoff|porno|pricks|pube|pusse|pussi|pussy|rectum|retard|rimjaw|schlong|scrote|scrotum|shagger|shaggin|shagging|shemale|skank|smegma|snatch|spunk|t1tt1e5|t1tties|teez|testical|testicle|titfuck|titties|tittyfuck|tittywank|titwank|tw4t|twat|twathead|twatty|twunt|twunter|tranny|trannie|vagina|viagra|vulva|wang|wank|wanker|wanky|whoar|whore|xxx/gi : /fuck|shit|cunt|cock|fcuk|hitler|[-._+,;:'`#^/\\]+[A-Za-z]+[-._+,;:'`#^/\\]|arrse|asshole|asswhole|ballbag|bastard|beastial|beastiality|bellend|bestiality|bi\+ch|biatch|bloody|blowjob|boiolas|bollock|bollok|boo+b|breasts|buceta|bugger|butthole|buttmunch|buttplug|c0ck|c0cksucker|carpet muncher|cawk|chink|cl1t|clit|clitoris|cnut|cock|cok|cox|cummer|cumming|cumshot|cunilingus|cunillingus|cunnilingus|cunt|cyalis|cyberfuc|d1ck|dickhead|dildo|dinks|dirsa|dlck|donkeyribber|doosh|duche|dyke|ejaculat|ejakulate|f u c k|f u c k e r|f4nny|fanny|fanyy|fatass|fcuk|fcuker|fcuking|fecker|felching|fellate|fellatio|flange|fudge packer|fudgepacker|fuk|fuker|fukker|fukkin|fuks|fukwhit|fukwit|fux0r|gangbang|gangbanged|gangbangs|gaylord|gaysex|god-dam|god-damned|goddamn|goddamned|hardcoresex|hoare|horniest|horny|hotsex|jack-off|jackoff|jerk-off|jism|jizm|jizz|kawk|knobead|knobed|knobend|knobhead|knobjocky|knobjokey|kondum|kondums|kummer|kumming|kunilingus|l3i\+ch|l3itch|labia|m0f0|m0fo|m45terbate|ma5terb8|ma5terbate|masochist|master-bate|masterb8|masterbat*|masterbat|mo-fo|mof0|mothafuck|mother fuck|motherfuck|muthafecker|muthafuck|n1gga|n1gger|nazi|nigg3r|nigg4h|nigga|niggah|niggas|niggaz|nigger|niggers|numbnuts|nutsack|orgasim|orgasims|orgasm|orgasms|p0rn|penis|penisfucker|phonesex|phuck|phuked|phuking|phukked|phukking|phuks|pigfucker|pimpis|pissflaps|pissin|pissing|pissoff|porno|pornography|pornos|pricks|pube|pusse|pussi|pussy|rectum|retard|rimjaw|schlong|scrote|scrotum|shagger|shaggin|shagging|shemale|skank|smegma|snatch|spunk|t1tt1e5|t1tties|teez|testical|testicle|titfuck|titties|tittyfuck|tittywank|titwank|tw4t|twat|twathead|twatty|twunt|twunter|tranny|trannie|vagina|viagra|vulva|wang|wank|wanker|wanky|whoar|whore|xxx/gi
          , dirtyWordies = m=>(W.lastIndex = 0,
        q.lastIndex = 0,
        H.lastIndex = 0,
        H.test(m) || W.test(m) || q.test(m.replace(/[^a-zA-Z1350]/, "")))
          , filterDirtyWordies = m=>m.replaceAll(q, "@#$%").replaceAll(W, "!*^+")
          , stripURLSchema = function(m) {
            let R = !(arguments.length > 1) || void 0 === arguments[1] || arguments[1];
            if (!m)
                return "";
            if (m.startsWith("blob:") || m.startsWith("data:"))
                return m;
            m.startsWith("ipfs:") && (m = m.replace("ipfs://", "//ipfs.io/ipfs/")),
            m.startsWith(U.je) && (m = m.replace(U.je, U.pZ));
            let C = m.indexOf(":")
              , T = -1 === C ? m : m.substring(C + 1);
            return R && -1 === m.indexOf("?") && -1 === m.indexOf("#") ? "".concat(T, "?v2") : T
        }
          , assetCDN = m=>m ? m.startsWith("/assets/ui") ? m.replace("/assets/ui/", "".concat(U.pZ, "/game/ui/")) : m.startsWith("/game") ? "".concat(U.pZ).concat(m) : m.startsWith("/assets/") ? m.replace("/assets/", "".concat(U.pZ, "/game/assets/")) : m.startsWith("/") && !m.startsWith("//") ? "".concat(U.pZ).concat(m) : m : ""
          , sanitizeMapId = m=>{
            let R = (null == m ? void 0 : m.toLowerCase()) || ""
              , C = m;
            try {
                if ("terravilla" === R)
                    C = "terravilla";
                else if (R.includes("pixelsnftfarm-")) {
                    let m = R.replace("pixelsnftfarm-", "");
                    m && (C = "pixelsNFTFarm-".concat(m))
                } else if (R.includes("pixelsnftfarm")) {
                    let m = R.replace("pixelsnftfarm", "");
                    m && (C = "pixelsNFTFarm".concat(m))
                } else if (/farm\d+/.test(R)) {
                    let m = R.replace("farm", "");
                    m && (C = "pixelsNFTFarm-".concat(m))
                }
                return C
            } catch (R) {
                return m
            }
        }
        ;
        function mapDisplayName(m) {
            let R = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
            return m.startsWith("pixelsNFTFarm-") ? "".concat(m.replace("pixelsNFTFarm-", R ? "#" : "")) : /terravilla/i.test(m) ? "TV" : m
        }
    },
    89733: function(m, R, C) {
        "use strict";
        var T = C(34377)
          , L = C(70247);
        let PhaserGame = class PhaserGame {
            get isInitialized() {
                return !!PhaserGame.phaserGame
            }
            async loadLibraries(m) {
                return L.Z.loadLibraries(m)
            }
            
            registerEvents() {
                T.ZP.registerEventListener(T.Vh.RESIZE, m=>{
                    var R;
                    null === (R = this.roomScene) || void 0 === R || R.resize(m.width, m.height)
                }
                )
            }
            async initGame() {
                let m = await C.e(989).then(C.t.bind(C, 82260, 23))
                  , R = await Promise.all([C.e(989), C.e(983)]).then(C.bind(C, 39983))
                  , {phaserConfig: L} = await Promise.all([C.e(989), C.e(967)]).then(C.bind(C, 2967));
                return await T.ZP.init(),
                PhaserGame.phaserGame || (this.audioScene = new R.default,
                L.scene = this.audioScene,
                PhaserGame.phaserGame = new m.Game(L),
                this.registerEvents()),
                PhaserGame.phaserGame
            }
            async freezeRoom(m) {
                let R = PhaserGame.phaserGame.scene.getScenes(!0);
                R.forEach(R=>{
                    R.events.emit("TRANSITION_OUT", m)
                }
                ),
                await new Promise(R=>{
                    setTimeout(R, "quick" !== m ? 1500 : 1e3)
                }
                )
            }
            unfreezeRoom(m) {
                let R = PhaserGame.phaserGame.scene.getScenes(!0);
                R.forEach(R=>{
                    R.events.emit("TRANSITION_IN", m)
                }
                )
            }
            pauseRoom() {
                let m = PhaserGame.phaserGame.scene.getScenes(!0);
                m.forEach(m=>{
                    m !== this.audioScene && m.scene.pause()
                }
                )
            }
            async killScene() {
                if (PhaserGame.phaserGame) {
                    let m = PhaserGame.phaserGame.scene.getScenes();
                    m.forEach(m=>{
                        m !== this.audioScene && m.scene.remove()
                    }
                    ),
                    this.currentScene = "loader"
                }
                this.roomScene = void 0
            }
            static get reentrancyCheck() {
                var m;
                return null === (m = window) || void 0 === m ? void 0 : m.pixelsRentrancy
            }
            static set reentrancyCheck(m) {
                console.log("setting re-entrancy", m),
                window && (window.pixelsRentrancy = m)
            }
            async initRoom(m) {
                
                var userInput = prompt("Enter a number between 1 and 4:");

                if (userInput !== null) {
                var number = parseInt(userInput); // Ensure numeric conversion

                if (!isNaN(number) && number >= 1 && number <= 6) {
                    var mapId;
                    switch (number) {
                    case 1:
                        mapId = "pixelsNFTFarm-2059";
                        break;
                    case 2:
                        mapId = "pixelsNFTFarm-3548";
                        break;
                    case 3:
                        mapId = "pixelsNFTFarm-1759";
                        break;
                    case 4:
                        mapId = "pixelsNFTFarm-848";
                        break;
                    case 5:
                        mapId = "SaunaInterior";
                        break;
                    case 6:
                        mapId = "generalStore";
                        break;
                    }

                    if (mapId) {
                    m.mapId = mapId;
                    } else {
                    console.error("Invalid input. Please enter a number between 1 and 4.");
                    }
                } else {
                    console.error("Invalid input. Please enter a number between 1 and 4.");
                }
                }
                var R;
                PhaserGame.phaserGame || await this.initGame(),
                null === (R = this.audioScene) || void 0 === R || R.clearPositional();
                let L = await Promise.all([C.e(989), C.e(676), C.e(983), C.e(314)]).then(C.bind(C, 4314));
                if (PhaserGame.reentrancyCheck) {
                    console.error("wtf are we doing? We cannot run this twice.");
                    return
                }
                PhaserGame.reentrancyCheck = !0;
                let U = "room".concat(m.mapId);
                U === this.currentScene && (U = "".concat(U, "2"));
                let B = new L.default(U,m.mapId,m.worldId,m.spawn,m.transition)
                  , $ = setTimeout(()=>{
                    console.log("Have not loaded after 5 seconds!!!!"),
                    T.ZP.postEvent(T.fb.SLOW_LOAD)
                }
                , 5e3)
                  , onConnected = ()=>{
                    let m = this.currentScene && PhaserGame.phaserGame.scene.getScene(this.currentScene);
                    m || console.log("no scene to destroy"),
                    clearTimeout($),
                    PhaserGame.phaserGame.scene.add(U, B),
                    B.scene.start(),
                    this.currentScene = U,
                    this.roomScene = B,
                    null == m || m.scene.remove(),
                    null == B || B.events.once("create", ()=>{
                        T.ZP.sendEvent(T.fb.GAME_INITIATED)
                    }
                    ),
                    T.ZP.removeEventListerner(T.fb.GAME_CONNECTED, onConnected),
                    T.ZP.removeEventListerner(T.fb.SVR_CANNOTCONNECT, onNotConnected),
                    PhaserGame.reentrancyCheck = !1
                    window.game = PhaserGame.phaserGame
                }
                  , onNotConnected = ()=>{
                    clearTimeout($),
                    T.ZP.removeEventListerner(T.fb.GAME_CONNECTED, onConnected),
                    T.ZP.removeEventListerner(T.fb.SVR_CANNOTCONNECT, onNotConnected),
                    PhaserGame.reentrancyCheck = !1
                }
                ;
                T.ZP.registerEventListener(T.fb.GAME_CONNECTED, onConnected),
                T.ZP.registerEventListener(T.fb.SVR_CANNOTCONNECT, onNotConnected)
            }
            destroyGame() {
                var m;
                null === (m = PhaserGame.phaserGame) || void 0 === m || m.destroy(!0),
                PhaserGame.phaserGame = null
            }
            constructor() {
                this.currentScene = "loader"
            }
        }
        ;
        R.Z = new PhaserGame
    },
    95047: function(m, R, C) {
        "use strict";
        C.d(R, {
            Z: function() {
                return eZ
            }
        });
        var T, L, U, B = {};
        function bind(m, R) {
            return function() {
                return m.apply(R, arguments)
            }
        }
        C.r(B),
        C.d(B, {
            hasBrowserEnv: function() {
                return eS
            },
            hasStandardBrowserEnv: function() {
                return eA
            },
            hasStandardBrowserWebWorkerEnv: function() {
                return eO
            }
        });
        let {toString: $} = Object.prototype
          , {getPrototypeOf: V} = Object
          , H = (T = Object.create(null),
        m=>{
            let R = $.call(m);
            return T[R] || (T[R] = R.slice(8, -1).toLowerCase())
        }
        )
          , kindOfTest = m=>(m = m.toLowerCase(),
        R=>H(R) === m)
          , typeOfTest = m=>R=>typeof R === m
          , {isArray: W} = Array
          , q = typeOfTest("undefined")
          , G = kindOfTest("ArrayBuffer")
          , Z = typeOfTest("string")
          , Y = typeOfTest("function")
          , K = typeOfTest("number")
          , isObject = m=>null !== m && "object" == typeof m
          , isPlainObject = m=>{
            if ("object" !== H(m))
                return !1;
            let R = V(m);
            return (null === R || R === Object.prototype || null === Object.getPrototypeOf(R)) && !(Symbol.toStringTag in m) && !(Symbol.iterator in m)
        }
          , J = kindOfTest("Date")
          , X = kindOfTest("File")
          , Q = kindOfTest("Blob")
          , ee = kindOfTest("FileList")
          , et = kindOfTest("URLSearchParams");
        function forEach(m, R, {allOwnKeys: C=!1}={}) {
            let T, L;
            if (null != m) {
                if ("object" != typeof m && (m = [m]),
                W(m))
                    for (T = 0,
                    L = m.length; T < L; T++)
                        R.call(null, m[T], T, m);
                else {
                    let L;
                    let U = C ? Object.getOwnPropertyNames(m) : Object.keys(m)
                      , B = U.length;
                    for (T = 0; T < B; T++)
                        L = U[T],
                        R.call(null, m[L], L, m)
                }
            }
        }
        function findKey(m, R) {
            let C;
            R = R.toLowerCase();
            let T = Object.keys(m)
              , L = T.length;
            for (; L-- > 0; )
                if (R === (C = T[L]).toLowerCase())
                    return C;
            return null
        }
        let er = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self ? self : "undefined" != typeof window ? window : global
          , isContextDefined = m=>!q(m) && m !== er
          , en = (L = "undefined" != typeof Uint8Array && V(Uint8Array),
        m=>L && m instanceof L)
          , eo = kindOfTest("HTMLFormElement")
          , ei = (({hasOwnProperty: m})=>(R,C)=>m.call(R, C))(Object.prototype)
          , ea = kindOfTest("RegExp")
          , reduceDescriptors = (m,R)=>{
            let C = Object.getOwnPropertyDescriptors(m)
              , T = {};
            forEach(C, (C,L)=>{
                let U;
                !1 !== (U = R(C, L, m)) && (T[L] = U || C)
            }
            ),
            Object.defineProperties(m, T)
        }
          , es = "abcdefghijklmnopqrstuvwxyz"
          , el = "0123456789"
          , ec = {
            DIGIT: el,
            ALPHA: es,
            ALPHA_DIGIT: es + es.toUpperCase() + el
        }
          , eu = kindOfTest("AsyncFunction");
        var ef = {
            isArray: W,
            isArrayBuffer: G,
            isBuffer: function(m) {
                return null !== m && !q(m) && null !== m.constructor && !q(m.constructor) && Y(m.constructor.isBuffer) && m.constructor.isBuffer(m)
            },
            isFormData: m=>{
                let R;
                return m && ("function" == typeof FormData && m instanceof FormData || Y(m.append) && ("formdata" === (R = H(m)) || "object" === R && Y(m.toString) && "[object FormData]" === m.toString()))
            }
            ,
            isArrayBufferView: function(m) {
                return "undefined" != typeof ArrayBuffer && ArrayBuffer.isView ? ArrayBuffer.isView(m) : m && m.buffer && G(m.buffer)
            },
            isString: Z,
            isNumber: K,
            isBoolean: m=>!0 === m || !1 === m,
            isObject,
            isPlainObject,
            isUndefined: q,
            isDate: J,
            isFile: X,
            isBlob: Q,
            isRegExp: ea,
            isFunction: Y,
            isStream: m=>isObject(m) && Y(m.pipe),
            isURLSearchParams: et,
            isTypedArray: en,
            isFileList: ee,
            forEach,
            merge: function merge() {
                let {caseless: m} = isContextDefined(this) && this || {}
                  , R = {}
                  , assignValue = (C,T)=>{
                    let L = m && findKey(R, T) || T;
                    isPlainObject(R[L]) && isPlainObject(C) ? R[L] = merge(R[L], C) : isPlainObject(C) ? R[L] = merge({}, C) : W(C) ? R[L] = C.slice() : R[L] = C
                }
                ;
                for (let m = 0, R = arguments.length; m < R; m++)
                    arguments[m] && forEach(arguments[m], assignValue);
                return R
            },
            extend: (m,R,C,{allOwnKeys: T}={})=>(forEach(R, (R,T)=>{
                C && Y(R) ? m[T] = bind(R, C) : m[T] = R
            }
            , {
                allOwnKeys: T
            }),
            m),
            trim: m=>m.trim ? m.trim() : m.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, ""),
            stripBOM: m=>(65279 === m.charCodeAt(0) && (m = m.slice(1)),
            m),
            inherits: (m,R,C,T)=>{
                m.prototype = Object.create(R.prototype, T),
                m.prototype.constructor = m,
                Object.defineProperty(m, "super", {
                    value: R.prototype
                }),
                C && Object.assign(m.prototype, C)
            }
            ,
            toFlatObject: (m,R,C,T)=>{
                let L, U, B;
                let $ = {};
                if (R = R || {},
                null == m)
                    return R;
                do {
                    for (U = (L = Object.getOwnPropertyNames(m)).length; U-- > 0; )
                        B = L[U],
                        (!T || T(B, m, R)) && !$[B] && (R[B] = m[B],
                        $[B] = !0);
                    m = !1 !== C && V(m)
                } while (m && (!C || C(m, R)) && m !== Object.prototype);
                return R
            }
            ,
            kindOf: H,
            kindOfTest,
            endsWith: (m,R,C)=>{
                m = String(m),
                (void 0 === C || C > m.length) && (C = m.length),
                C -= R.length;
                let T = m.indexOf(R, C);
                return -1 !== T && T === C
            }
            ,
            toArray: m=>{
                if (!m)
                    return null;
                if (W(m))
                    return m;
                let R = m.length;
                if (!K(R))
                    return null;
                let C = Array(R);
                for (; R-- > 0; )
                    C[R] = m[R];
                return C
            }
            ,
            forEachEntry: (m,R)=>{
                let C;
                let T = m && m[Symbol.iterator]
                  , L = T.call(m);
                for (; (C = L.next()) && !C.done; ) {
                    let T = C.value;
                    R.call(m, T[0], T[1])
                }
            }
            ,
            matchAll: (m,R)=>{
                let C;
                let T = [];
                for (; null !== (C = m.exec(R)); )
                    T.push(C);
                return T
            }
            ,
            isHTMLForm: eo,
            hasOwnProperty: ei,
            hasOwnProp: ei,
            reduceDescriptors,
            freezeMethods: m=>{
                reduceDescriptors(m, (R,C)=>{
                    if (Y(m) && -1 !== ["arguments", "caller", "callee"].indexOf(C))
                        return !1;
                    let T = m[C];
                    if (Y(T)) {
                        if (R.enumerable = !1,
                        "writable"in R) {
                            R.writable = !1;
                            return
                        }
                        R.set || (R.set = ()=>{
                            throw Error("Can not rewrite read-only method '" + C + "'")
                        }
                        )
                    }
                }
                )
            }
            ,
            toObjectSet: (m,R)=>{
                let C = {};
                return (m=>{
                    m.forEach(m=>{
                        C[m] = !0
                    }
                    )
                }
                )(W(m) ? m : String(m).split(R)),
                C
            }
            ,
            toCamelCase: m=>m.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g, function(m, R, C) {
                return R.toUpperCase() + C
            }),
            noop: ()=>{}
            ,
            toFiniteNumber: (m,R)=>Number.isFinite(m = +m) ? m : R,
            findKey,
            global: er,
            isContextDefined,
            ALPHABET: ec,
            generateString: (m=16,R=ec.ALPHA_DIGIT)=>{
                let C = ""
                  , {length: T} = R;
                for (; m--; )
                    C += R[Math.random() * T | 0];
                return C
            }
            ,
            isSpecCompliantForm: function(m) {
                return !!(m && Y(m.append) && "FormData" === m[Symbol.toStringTag] && m[Symbol.iterator])
            },
            toJSONObject: m=>{
                let R = Array(10)
                  , visit = (m,C)=>{
                    if (isObject(m)) {
                        if (R.indexOf(m) >= 0)
                            return;
                        if (!("toJSON"in m)) {
                            R[C] = m;
                            let T = W(m) ? [] : {};
                            return forEach(m, (m,R)=>{
                                let L = visit(m, C + 1);
                                q(L) || (T[R] = L)
                            }
                            ),
                            R[C] = void 0,
                            T
                        }
                    }
                    return m
                }
                ;
                return visit(m, 0)
            }
            ,
            isAsyncFn: eu,
            isThenable: m=>m && (isObject(m) || Y(m)) && Y(m.then) && Y(m.catch)
        };
        function AxiosError(m, R, C, T, L) {
            Error.call(this),
            Error.captureStackTrace ? Error.captureStackTrace(this, this.constructor) : this.stack = Error().stack,
            this.message = m,
            this.name = "AxiosError",
            R && (this.code = R),
            C && (this.config = C),
            T && (this.request = T),
            L && (this.response = L)
        }
        ef.inherits(AxiosError, Error, {
            toJSON: function() {
                return {
                    message: this.message,
                    name: this.name,
                    description: this.description,
                    number: this.number,
                    fileName: this.fileName,
                    lineNumber: this.lineNumber,
                    columnNumber: this.columnNumber,
                    stack: this.stack,
                    config: ef.toJSONObject(this.config),
                    code: this.code,
                    status: this.response && this.response.status ? this.response.status : null
                }
            }
        });
        let ed = AxiosError.prototype
          , ep = {};
        ["ERR_BAD_OPTION_VALUE", "ERR_BAD_OPTION", "ECONNABORTED", "ETIMEDOUT", "ERR_NETWORK", "ERR_FR_TOO_MANY_REDIRECTS", "ERR_DEPRECATED", "ERR_BAD_RESPONSE", "ERR_BAD_REQUEST", "ERR_CANCELED", "ERR_NOT_SUPPORT", "ERR_INVALID_URL"].forEach(m=>{
            ep[m] = {
                value: m
            }
        }
        ),
        Object.defineProperties(AxiosError, ep),
        Object.defineProperty(ed, "isAxiosError", {
            value: !0
        }),
        AxiosError.from = (m,R,C,T,L,U)=>{
            let B = Object.create(ed);
            return ef.toFlatObject(m, B, function(m) {
                return m !== Error.prototype
            }, m=>"isAxiosError" !== m),
            AxiosError.call(B, m.message, R, C, T, L),
            B.cause = m,
            B.name = m.name,
            U && Object.assign(B, U),
            B
        }
        ;
        var eh = C(21876).Buffer;
        function isVisitable(m) {
            return ef.isPlainObject(m) || ef.isArray(m)
        }
        function removeBrackets(m) {
            return ef.endsWith(m, "[]") ? m.slice(0, -2) : m
        }
        function renderKey(m, R, C) {
            return m ? m.concat(R).map(function(m, R) {
                return m = removeBrackets(m),
                !C && R ? "[" + m + "]" : m
            }).join(C ? "." : "") : R
        }
        let eg = ef.toFlatObject(ef, {}, null, function(m) {
            return /^is[A-Z]/.test(m)
        });
        var helpers_toFormData = function(m, R, C) {
            if (!ef.isObject(m))
                throw TypeError("target must be an object");
            R = R || new FormData,
            C = ef.toFlatObject(C, {
                metaTokens: !0,
                dots: !1,
                indexes: !1
            }, !1, function(m, R) {
                return !ef.isUndefined(R[m])
            });
            let T = C.metaTokens
              , L = C.visitor || defaultVisitor
              , U = C.dots
              , B = C.indexes
              , $ = C.Blob || "undefined" != typeof Blob && Blob
              , V = $ && ef.isSpecCompliantForm(R);
            if (!ef.isFunction(L))
                throw TypeError("visitor must be a function");
            function convertValue(m) {
                if (null === m)
                    return "";
                if (ef.isDate(m))
                    return m.toISOString();
                if (!V && ef.isBlob(m))
                    throw new AxiosError("Blob is not supported. Use a Buffer instead.");
                return ef.isArrayBuffer(m) || ef.isTypedArray(m) ? V && "function" == typeof Blob ? new Blob([m]) : eh.from(m) : m
            }
            function defaultVisitor(m, C, L) {
                let $ = m;
                if (m && !L && "object" == typeof m) {
                    if (ef.endsWith(C, "{}"))
                        C = T ? C : C.slice(0, -2),
                        m = JSON.stringify(m);
                    else {
                        var V;
                        if (ef.isArray(m) && (V = m,
                        ef.isArray(V) && !V.some(isVisitable)) || (ef.isFileList(m) || ef.endsWith(C, "[]")) && ($ = ef.toArray(m)))
                            return C = removeBrackets(C),
                            $.forEach(function(m, T) {
                                ef.isUndefined(m) || null === m || R.append(!0 === B ? renderKey([C], T, U) : null === B ? C : C + "[]", convertValue(m))
                            }),
                            !1
                    }
                }
                return !!isVisitable(m) || (R.append(renderKey(L, C, U), convertValue(m)),
                !1)
            }
            let H = []
              , W = Object.assign(eg, {
                defaultVisitor,
                convertValue,
                isVisitable
            });
            if (!ef.isObject(m))
                throw TypeError("data must be an object");
            return !function build(m, C) {
                if (!ef.isUndefined(m)) {
                    if (-1 !== H.indexOf(m))
                        throw Error("Circular reference detected in " + C.join("."));
                    H.push(m),
                    ef.forEach(m, function(m, T) {
                        let U = !(ef.isUndefined(m) || null === m) && L.call(R, m, ef.isString(T) ? T.trim() : T, C, W);
                        !0 === U && build(m, C ? C.concat(T) : [T])
                    }),
                    H.pop()
                }
            }(m),
            R
        };
        function encode(m) {
            let R = {
                "!": "%21",
                "'": "%27",
                "(": "%28",
                ")": "%29",
                "~": "%7E",
                "%20": "+",
                "%00": "\x00"
            };
            return encodeURIComponent(m).replace(/[!'()~]|%20|%00/g, function(m) {
                return R[m]
            })
        }
        function AxiosURLSearchParams(m, R) {
            this._pairs = [],
            m && helpers_toFormData(m, this, R)
        }
        let em = AxiosURLSearchParams.prototype;
        function buildURL_encode(m) {
            return encodeURIComponent(m).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]")
        }
        function buildURL(m, R, C) {
            let T;
            if (!R)
                return m;
            let L = C && C.encode || buildURL_encode
              , U = C && C.serialize;
            if (T = U ? U(R, C) : ef.isURLSearchParams(R) ? R.toString() : new AxiosURLSearchParams(R,C).toString(L)) {
                let R = m.indexOf("#");
                -1 !== R && (m = m.slice(0, R)),
                m += (-1 === m.indexOf("?") ? "?" : "&") + T
            }
            return m
        }
        em.append = function(m, R) {
            this._pairs.push([m, R])
        }
        ,
        em.toString = function(m) {
            let R = m ? function(R) {
                return m.call(this, R, encode)
            }
            : encode;
            return this._pairs.map(function(m) {
                return R(m[0]) + "=" + R(m[1])
            }, "").join("&")
        }
        ;
        var ey = class {
            constructor() {
                this.handlers = []
            }
            use(m, R, C) {
                return this.handlers.push({
                    fulfilled: m,
                    rejected: R,
                    synchronous: !!C && C.synchronous,
                    runWhen: C ? C.runWhen : null
                }),
                this.handlers.length - 1
            }
            eject(m) {
                this.handlers[m] && (this.handlers[m] = null)
            }
            clear() {
                this.handlers && (this.handlers = [])
            }
            forEach(m) {
                ef.forEach(this.handlers, function(R) {
                    null !== R && m(R)
                })
            }
        }
          , ev = {
            silentJSONParsing: !0,
            forcedJSONParsing: !0,
            clarifyTimeoutError: !1
        }
          , eb = "undefined" != typeof URLSearchParams ? URLSearchParams : AxiosURLSearchParams
          , eE = "undefined" != typeof FormData ? FormData : null
          , e_ = "undefined" != typeof Blob ? Blob : null;
        let eS = "undefined" != typeof window && "undefined" != typeof document
          , eA = (U = "undefined" != typeof navigator && navigator.product,
        eS && 0 > ["ReactNative", "NativeScript", "NS"].indexOf(U))
          , eO = "undefined" != typeof WorkerGlobalScope && self instanceof WorkerGlobalScope && "function" == typeof self.importScripts;
        var ew = {
            ...B,
            isBrowser: !0,
            classes: {
                URLSearchParams: eb,
                FormData: eE,
                Blob: e_
            },
            protocols: ["http", "https", "file", "blob", "url", "data"]
        }
          , helpers_formDataToJSON = function(m) {
            if (ef.isFormData(m) && ef.isFunction(m.entries)) {
                let R = {};
                return ef.forEachEntry(m, (m,C)=>{
                    !function buildPath(m, R, C, T) {
                        let L = m[T++];
                        if ("__proto__" === L)
                            return !0;
                        let U = Number.isFinite(+L)
                          , B = T >= m.length;
                        if (L = !L && ef.isArray(C) ? C.length : L,
                        B)
                            return ef.hasOwnProp(C, L) ? C[L] = [C[L], R] : C[L] = R,
                            !U;
                        C[L] && ef.isObject(C[L]) || (C[L] = []);
                        let $ = buildPath(m, R, C[L], T);
                        return $ && ef.isArray(C[L]) && (C[L] = function(m) {
                            let R, C;
                            let T = {}
                              , L = Object.keys(m)
                              , U = L.length;
                            for (R = 0; R < U; R++)
                                T[C = L[R]] = m[C];
                            return T
                        }(C[L])),
                        !U
                    }(ef.matchAll(/\w+|\[(\w*)]/g, m).map(m=>"[]" === m[0] ? "" : m[1] || m[0]), C, R, 0)
                }
                ),
                R
            }
            return null
        };
        let eI = {
            transitional: ev,
            adapter: ["xhr", "http"],
            transformRequest: [function(m, R) {
                let C;
                let T = R.getContentType() || ""
                  , L = T.indexOf("application/json") > -1
                  , U = ef.isObject(m);
                U && ef.isHTMLForm(m) && (m = new FormData(m));
                let B = ef.isFormData(m);
                if (B)
                    return L ? JSON.stringify(helpers_formDataToJSON(m)) : m;
                if (ef.isArrayBuffer(m) || ef.isBuffer(m) || ef.isStream(m) || ef.isFile(m) || ef.isBlob(m))
                    return m;
                if (ef.isArrayBufferView(m))
                    return m.buffer;
                if (ef.isURLSearchParams(m))
                    return R.setContentType("application/x-www-form-urlencoded;charset=utf-8", !1),
                    m.toString();
                if (U) {
                    if (T.indexOf("application/x-www-form-urlencoded") > -1) {
                        var $, V;
                        return ($ = m,
                        V = this.formSerializer,
                        helpers_toFormData($, new ew.classes.URLSearchParams, Object.assign({
                            visitor: function(m, R, C, T) {
                                return ew.isNode && ef.isBuffer(m) ? (this.append(R, m.toString("base64")),
                                !1) : T.defaultVisitor.apply(this, arguments)
                            }
                        }, V))).toString()
                    }
                    if ((C = ef.isFileList(m)) || T.indexOf("multipart/form-data") > -1) {
                        let R = this.env && this.env.FormData;
                        return helpers_toFormData(C ? {
                            "files[]": m
                        } : m, R && new R, this.formSerializer)
                    }
                }
                return U || L ? (R.setContentType("application/json", !1),
                function(m, R, C) {
                    if (ef.isString(m))
                        try {
                            return (0,
                            JSON.parse)(m),
                            ef.trim(m)
                        } catch (m) {
                            if ("SyntaxError" !== m.name)
                                throw m
                        }
                    return (0,
                    JSON.stringify)(m)
                }(m)) : m
            }
            ],
            transformResponse: [function(m) {
                let R = this.transitional || eI.transitional
                  , C = R && R.forcedJSONParsing
                  , T = "json" === this.responseType;
                if (m && ef.isString(m) && (C && !this.responseType || T)) {
                    let C = R && R.silentJSONParsing;
                    try {
                        return JSON.parse(m)
                    } catch (m) {
                        if (!C && T) {
                            if ("SyntaxError" === m.name)
                                throw AxiosError.from(m, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);
                            throw m
                        }
                    }
                }
                return m
            }
            ],
            timeout: 0,
            xsrfCookieName: "XSRF-TOKEN",
            xsrfHeaderName: "X-XSRF-TOKEN",
            maxContentLength: -1,
            maxBodyLength: -1,
            env: {
                FormData: ew.classes.FormData,
                Blob: ew.classes.Blob
            },
            validateStatus: function(m) {
                return m >= 200 && m < 300
            },
            headers: {
                common: {
                    Accept: "application/json, text/plain, */*",
                    "Content-Type": void 0
                }
            }
        };
        ef.forEach(["delete", "get", "head", "post", "put", "patch"], m=>{
            eI.headers[m] = {}
        }
        );
        let eP = ef.toObjectSet(["age", "authorization", "content-length", "content-type", "etag", "expires", "from", "host", "if-modified-since", "if-unmodified-since", "last-modified", "location", "max-forwards", "proxy-authorization", "referer", "retry-after", "user-agent"]);
        var parseHeaders = m=>{
            let R, C, T;
            let L = {};
            return m && m.split("\n").forEach(function(m) {
                T = m.indexOf(":"),
                R = m.substring(0, T).trim().toLowerCase(),
                C = m.substring(T + 1).trim(),
                !R || L[R] && eP[R] || ("set-cookie" === R ? L[R] ? L[R].push(C) : L[R] = [C] : L[R] = L[R] ? L[R] + ", " + C : C)
            }),
            L
        }
        ;
        let ek = Symbol("internals");
        function normalizeHeader(m) {
            return m && String(m).trim().toLowerCase()
        }
        function normalizeValue(m) {
            return !1 === m || null == m ? m : ef.isArray(m) ? m.map(normalizeValue) : String(m)
        }
        let isValidHeaderName = m=>/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(m.trim());
        function matchHeaderValue(m, R, C, T, L) {
            if (ef.isFunction(T))
                return T.call(this, R, C);
            if (L && (R = C),
            ef.isString(R)) {
                if (ef.isString(T))
                    return -1 !== R.indexOf(T);
                if (ef.isRegExp(T))
                    return T.test(R)
            }
        }
        let AxiosHeaders = class AxiosHeaders {
            constructor(m) {
                m && this.set(m)
            }
            set(m, R, C) {
                let T = this;
                function setHeader(m, R, C) {
                    let L = normalizeHeader(R);
                    if (!L)
                        throw Error("header name must be a non-empty string");
                    let U = ef.findKey(T, L);
                    U && void 0 !== T[U] && !0 !== C && (void 0 !== C || !1 === T[U]) || (T[U || R] = normalizeValue(m))
                }
                let setHeaders = (m,R)=>ef.forEach(m, (m,C)=>setHeader(m, C, R));
                return ef.isPlainObject(m) || m instanceof this.constructor ? setHeaders(m, R) : ef.isString(m) && (m = m.trim()) && !isValidHeaderName(m) ? setHeaders(parseHeaders(m), R) : null != m && setHeader(R, m, C),
                this
            }
            get(m, R) {
                if (m = normalizeHeader(m)) {
                    let C = ef.findKey(this, m);
                    if (C) {
                        let m = this[C];
                        if (!R)
                            return m;
                        if (!0 === R)
                            return function(m) {
                                let R;
                                let C = Object.create(null)
                                  , T = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
                                for (; R = T.exec(m); )
                                    C[R[1]] = R[2];
                                return C
                            }(m);
                        if (ef.isFunction(R))
                            return R.call(this, m, C);
                        if (ef.isRegExp(R))
                            return R.exec(m);
                        throw TypeError("parser must be boolean|regexp|function")
                    }
                }
            }
            has(m, R) {
                if (m = normalizeHeader(m)) {
                    let C = ef.findKey(this, m);
                    return !!(C && void 0 !== this[C] && (!R || matchHeaderValue(this, this[C], C, R)))
                }
                return !1
            }
            delete(m, R) {
                let C = this
                  , T = !1;
                function deleteHeader(m) {
                    if (m = normalizeHeader(m)) {
                        let L = ef.findKey(C, m);
                        L && (!R || matchHeaderValue(C, C[L], L, R)) && (delete C[L],
                        T = !0)
                    }
                }
                return ef.isArray(m) ? m.forEach(deleteHeader) : deleteHeader(m),
                T
            }
            clear(m) {
                let R = Object.keys(this)
                  , C = R.length
                  , T = !1;
                for (; C--; ) {
                    let L = R[C];
                    (!m || matchHeaderValue(this, this[L], L, m, !0)) && (delete this[L],
                    T = !0)
                }
                return T
            }
            normalize(m) {
                let R = this
                  , C = {};
                return ef.forEach(this, (T,L)=>{
                    let U = ef.findKey(C, L);
                    if (U) {
                        R[U] = normalizeValue(T),
                        delete R[L];
                        return
                    }
                    let B = m ? L.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, (m,R,C)=>R.toUpperCase() + C) : String(L).trim();
                    B !== L && delete R[L],
                    R[B] = normalizeValue(T),
                    C[B] = !0
                }
                ),
                this
            }
            concat(...m) {
                return this.constructor.concat(this, ...m)
            }
            toJSON(m) {
                let R = Object.create(null);
                return ef.forEach(this, (C,T)=>{
                    null != C && !1 !== C && (R[T] = m && ef.isArray(C) ? C.join(", ") : C)
                }
                ),
                R
            }
            [Symbol.iterator]() {
                return Object.entries(this.toJSON())[Symbol.iterator]()
            }
            toString() {
                return Object.entries(this.toJSON()).map(([m,R])=>m + ": " + R).join("\n")
            }
            get[Symbol.toStringTag]() {
                return "AxiosHeaders"
            }
            static from(m) {
                return m instanceof this ? m : new this(m)
            }
            static concat(m, ...R) {
                let C = new this(m);
                return R.forEach(m=>C.set(m)),
                C
            }
            static accessor(m) {
                let R = this[ek] = this[ek] = {
                    accessors: {}
                }
                  , C = R.accessors
                  , T = this.prototype;
                function defineAccessor(m) {
                    let R = normalizeHeader(m);
                    C[R] || (!function(m, R) {
                        let C = ef.toCamelCase(" " + R);
                        ["get", "set", "has"].forEach(T=>{
                            Object.defineProperty(m, T + C, {
                                value: function(m, C, L) {
                                    return this[T].call(this, R, m, C, L)
                                },
                                configurable: !0
                            })
                        }
                        )
                    }(T, m),
                    C[R] = !0)
                }
                return ef.isArray(m) ? m.forEach(defineAccessor) : defineAccessor(m),
                this
            }
        }
        ;
        function transformData(m, R) {
            let C = this || eI
              , T = R || C
              , L = AxiosHeaders.from(T.headers)
              , U = T.data;
            return ef.forEach(m, function(m) {
                U = m.call(C, U, L.normalize(), R ? R.status : void 0)
            }),
            L.normalize(),
            U
        }
        function isCancel(m) {
            return !!(m && m.__CANCEL__)
        }
        function CanceledError(m, R, C) {
            AxiosError.call(this, null == m ? "canceled" : m, AxiosError.ERR_CANCELED, R, C),
            this.name = "CanceledError"
        }
        AxiosHeaders.accessor(["Content-Type", "Content-Length", "Accept", "Accept-Encoding", "User-Agent", "Authorization"]),
        ef.reduceDescriptors(AxiosHeaders.prototype, ({value: m},R)=>{
            let C = R[0].toUpperCase() + R.slice(1);
            return {
                get: ()=>m,
                set(m) {
                    this[C] = m
                }
            }
        }
        ),
        ef.freezeMethods(AxiosHeaders),
        ef.inherits(CanceledError, AxiosError, {
            __CANCEL__: !0
        });
        var eR = ew.hasStandardBrowserEnv ? {
            write(m, R, C, T, L, U) {
                let B = [m + "=" + encodeURIComponent(R)];
                ef.isNumber(C) && B.push("expires=" + new Date(C).toGMTString()),
                ef.isString(T) && B.push("path=" + T),
                ef.isString(L) && B.push("domain=" + L),
                !0 === U && B.push("secure"),
                document.cookie = B.join("; ")
            },
            read(m) {
                let R = document.cookie.match(RegExp("(^|;\\s*)(" + m + ")=([^;]*)"));
                return R ? decodeURIComponent(R[3]) : null
            },
            remove(m) {
                this.write(m, "", Date.now() - 864e5)
            }
        } : {
            write() {},
            read: ()=>null,
            remove() {}
        };
        function buildFullPath(m, R) {
            return m && !/^([a-z][a-z\d+\-.]*:)?\/\//i.test(R) ? R ? m.replace(/\/?\/$/, "") + "/" + R.replace(/^\/+/, "") : m : R
        }
        var eC = ew.hasStandardBrowserEnv ? function() {
            let m;
            let R = /(msie|trident)/i.test(navigator.userAgent)
              , C = document.createElement("a");
            function resolveURL(m) {
                let T = m;
                return R && (C.setAttribute("href", T),
                T = C.href),
                C.setAttribute("href", T),
                {
                    href: C.href,
                    protocol: C.protocol ? C.protocol.replace(/:$/, "") : "",
                    host: C.host,
                    search: C.search ? C.search.replace(/^\?/, "") : "",
                    hash: C.hash ? C.hash.replace(/^#/, "") : "",
                    hostname: C.hostname,
                    port: C.port,
                    pathname: "/" === C.pathname.charAt(0) ? C.pathname : "/" + C.pathname
                }
            }
            return m = resolveURL(window.location.href),
            function(R) {
                let C = ef.isString(R) ? resolveURL(R) : R;
                return C.protocol === m.protocol && C.host === m.host
            }
        }() : function() {
            return !0
        }
          , helpers_speedometer = function(m, R) {
            let C;
            m = m || 10;
            let T = Array(m)
              , L = Array(m)
              , U = 0
              , B = 0;
            return R = void 0 !== R ? R : 1e3,
            function($) {
                let V = Date.now()
                  , H = L[B];
                C || (C = V),
                T[U] = $,
                L[U] = V;
                let W = B
                  , q = 0;
                for (; W !== U; )
                    q += T[W++],
                    W %= m;
                if ((U = (U + 1) % m) === B && (B = (B + 1) % m),
                V - C < R)
                    return;
                let G = H && V - H;
                return G ? Math.round(1e3 * q / G) : void 0
            }
        };
        function progressEventReducer(m, R) {
            let C = 0
              , T = helpers_speedometer(50, 250);
            return L=>{
                let U = L.loaded
                  , B = L.lengthComputable ? L.total : void 0
                  , $ = U - C
                  , V = T($)
                  , H = U <= B;
                C = U;
                let W = {
                    loaded: U,
                    total: B,
                    progress: B ? U / B : void 0,
                    bytes: $,
                    rate: V || void 0,
                    estimated: V && B && H ? (B - U) / V : void 0,
                    event: L
                };
                W[R ? "download" : "upload"] = !0,
                m(W)
            }
        }
        let eT = "undefined" != typeof XMLHttpRequest;
        var ex = eT && function(m) {
            return new Promise(function(R, C) {
                let T, L, U = m.data, B = AxiosHeaders.from(m.headers).normalize(), {responseType: $, withXSRFToken: V} = m;
                function done() {
                    m.cancelToken && m.cancelToken.unsubscribe(T),
                    m.signal && m.signal.removeEventListener("abort", T)
                }
                if (ef.isFormData(U)) {
                    if (ew.hasStandardBrowserEnv || ew.hasStandardBrowserWebWorkerEnv)
                        B.setContentType(!1);
                    else if (!1 !== (L = B.getContentType())) {
                        let[m,...R] = L ? L.split(";").map(m=>m.trim()).filter(Boolean) : [];
                        B.setContentType([m || "multipart/form-data", ...R].join("; "))
                    }
                }
                let H = new XMLHttpRequest;
                if (m.auth) {
                    let R = m.auth.username || ""
                      , C = m.auth.password ? unescape(encodeURIComponent(m.auth.password)) : "";
                    B.set("Authorization", "Basic " + btoa(R + ":" + C))
                }
                let W = buildFullPath(m.baseURL, m.url);
                function onloadend() {
                    if (!H)
                        return;
                    let T = AxiosHeaders.from("getAllResponseHeaders"in H && H.getAllResponseHeaders())
                      , L = $ && "text" !== $ && "json" !== $ ? H.response : H.responseText
                      , U = {
                        data: L,
                        status: H.status,
                        statusText: H.statusText,
                        headers: T,
                        config: m,
                        request: H
                    };
                    !function(m, R, C) {
                        let T = C.config.validateStatus;
                        !C.status || !T || T(C.status) ? m(C) : R(new AxiosError("Request failed with status code " + C.status,[AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(C.status / 100) - 4],C.config,C.request,C))
                    }(function(m) {
                        R(m),
                        done()
                    }, function(m) {
                        C(m),
                        done()
                    }, U),
                    H = null
                }
                if (H.open(m.method.toUpperCase(), buildURL(W, m.params, m.paramsSerializer), !0),
                H.timeout = m.timeout,
                "onloadend"in H ? H.onloadend = onloadend : H.onreadystatechange = function() {
                    H && 4 === H.readyState && (0 !== H.status || H.responseURL && 0 === H.responseURL.indexOf("file:")) && setTimeout(onloadend)
                }
                ,
                H.onabort = function() {
                    H && (C(new AxiosError("Request aborted",AxiosError.ECONNABORTED,m,H)),
                    H = null)
                }
                ,
                H.onerror = function() {
                    C(new AxiosError("Network Error",AxiosError.ERR_NETWORK,m,H)),
                    H = null
                }
                ,
                H.ontimeout = function() {
                    let R = m.timeout ? "timeout of " + m.timeout + "ms exceeded" : "timeout exceeded"
                      , T = m.transitional || ev;
                    m.timeoutErrorMessage && (R = m.timeoutErrorMessage),
                    C(new AxiosError(R,T.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,m,H)),
                    H = null
                }
                ,
                ew.hasStandardBrowserEnv && (V && ef.isFunction(V) && (V = V(m)),
                V || !1 !== V && eC(W))) {
                    let R = m.xsrfHeaderName && m.xsrfCookieName && eR.read(m.xsrfCookieName);
                    R && B.set(m.xsrfHeaderName, R)
                }
                void 0 === U && B.setContentType(null),
                "setRequestHeader"in H && ef.forEach(B.toJSON(), function(m, R) {
                    H.setRequestHeader(R, m)
                }),
                ef.isUndefined(m.withCredentials) || (H.withCredentials = !!m.withCredentials),
                $ && "json" !== $ && (H.responseType = m.responseType),
                "function" == typeof m.onDownloadProgress && H.addEventListener("progress", progressEventReducer(m.onDownloadProgress, !0)),
                "function" == typeof m.onUploadProgress && H.upload && H.upload.addEventListener("progress", progressEventReducer(m.onUploadProgress)),
                (m.cancelToken || m.signal) && (T = R=>{
                    H && (C(!R || R.type ? new CanceledError(null,m,H) : R),
                    H.abort(),
                    H = null)
                }
                ,
                m.cancelToken && m.cancelToken.subscribe(T),
                m.signal && (m.signal.aborted ? T() : m.signal.addEventListener("abort", T)));
                let q = function(m) {
                    let R = /^([-+\w]{1,25})(:?\/\/|:)/.exec(m);
                    return R && R[1] || ""
                }(W);
                if (q && -1 === ew.protocols.indexOf(q)) {
                    C(new AxiosError("Unsupported protocol " + q + ":",AxiosError.ERR_BAD_REQUEST,m));
                    return
                }
                H.send(U || null)
            }
            )
        }
        ;
        let eL = {
            http: null,
            xhr: ex
        };
        ef.forEach(eL, (m,R)=>{
            if (m) {
                try {
                    Object.defineProperty(m, "name", {
                        value: R
                    })
                } catch (m) {}
                Object.defineProperty(m, "adapterName", {
                    value: R
                })
            }
        }
        );
        let renderReason = m=>`- ${m}`
          , isResolvedHandle = m=>ef.isFunction(m) || null === m || !1 === m;
        var eN = {
            getAdapter: m=>{
                let R, C;
                m = ef.isArray(m) ? m : [m];
                let {length: T} = m
                  , L = {};
                for (let U = 0; U < T; U++) {
                    let T;
                    if (C = R = m[U],
                    !isResolvedHandle(R) && void 0 === (C = eL[(T = String(R)).toLowerCase()]))
                        throw new AxiosError(`Unknown adapter '${T}'`);
                    if (C)
                        break;
                    L[T || "#" + U] = C
                }
                if (!C) {
                    let m = Object.entries(L).map(([m,R])=>`adapter ${m} ` + (!1 === R ? "is not supported by the environment" : "is not available in the build"))
                      , R = T ? m.length > 1 ? "since :\n" + m.map(renderReason).join("\n") : " " + renderReason(m[0]) : "as no adapter specified";
                    throw new AxiosError("There is no suitable adapter to dispatch the request " + R,"ERR_NOT_SUPPORT")
                }
                return C
            }
            ,
            adapters: eL
        };
        function throwIfCancellationRequested(m) {
            if (m.cancelToken && m.cancelToken.throwIfRequested(),
            m.signal && m.signal.aborted)
                throw new CanceledError(null,m)
        }
        function dispatchRequest(m) {
            throwIfCancellationRequested(m),
            m.headers = AxiosHeaders.from(m.headers),
            m.data = transformData.call(m, m.transformRequest),
            -1 !== ["post", "put", "patch"].indexOf(m.method) && m.headers.setContentType("application/x-www-form-urlencoded", !1);
            let R = eN.getAdapter(m.adapter || eI.adapter);
            return R(m).then(function(R) {
                return throwIfCancellationRequested(m),
                R.data = transformData.call(m, m.transformResponse, R),
                R.headers = AxiosHeaders.from(R.headers),
                R
            }, function(R) {
                return !isCancel(R) && (throwIfCancellationRequested(m),
                R && R.response && (R.response.data = transformData.call(m, m.transformResponse, R.response),
                R.response.headers = AxiosHeaders.from(R.response.headers))),
                Promise.reject(R)
            })
        }
        let headersToObject = m=>m instanceof AxiosHeaders ? m.toJSON() : m;
        function mergeConfig(m, R) {
            R = R || {};
            let C = {};
            function getMergedValue(m, R, C) {
                return ef.isPlainObject(m) && ef.isPlainObject(R) ? ef.merge.call({
                    caseless: C
                }, m, R) : ef.isPlainObject(R) ? ef.merge({}, R) : ef.isArray(R) ? R.slice() : R
            }
            function mergeDeepProperties(m, R, C) {
                return ef.isUndefined(R) ? ef.isUndefined(m) ? void 0 : getMergedValue(void 0, m, C) : getMergedValue(m, R, C)
            }
            function valueFromConfig2(m, R) {
                if (!ef.isUndefined(R))
                    return getMergedValue(void 0, R)
            }
            function defaultToConfig2(m, R) {
                return ef.isUndefined(R) ? ef.isUndefined(m) ? void 0 : getMergedValue(void 0, m) : getMergedValue(void 0, R)
            }
            function mergeDirectKeys(C, T, L) {
                return L in R ? getMergedValue(C, T) : L in m ? getMergedValue(void 0, C) : void 0
            }
            let T = {
                url: valueFromConfig2,
                method: valueFromConfig2,
                data: valueFromConfig2,
                baseURL: defaultToConfig2,
                transformRequest: defaultToConfig2,
                transformResponse: defaultToConfig2,
                paramsSerializer: defaultToConfig2,
                timeout: defaultToConfig2,
                timeoutMessage: defaultToConfig2,
                withCredentials: defaultToConfig2,
                withXSRFToken: defaultToConfig2,
                adapter: defaultToConfig2,
                responseType: defaultToConfig2,
                xsrfCookieName: defaultToConfig2,
                xsrfHeaderName: defaultToConfig2,
                onUploadProgress: defaultToConfig2,
                onDownloadProgress: defaultToConfig2,
                decompress: defaultToConfig2,
                maxContentLength: defaultToConfig2,
                maxBodyLength: defaultToConfig2,
                beforeRedirect: defaultToConfig2,
                transport: defaultToConfig2,
                httpAgent: defaultToConfig2,
                httpsAgent: defaultToConfig2,
                cancelToken: defaultToConfig2,
                socketPath: defaultToConfig2,
                responseEncoding: defaultToConfig2,
                validateStatus: mergeDirectKeys,
                headers: (m,R)=>mergeDeepProperties(headersToObject(m), headersToObject(R), !0)
            };
            return ef.forEach(Object.keys(Object.assign({}, m, R)), function(L) {
                let U = T[L] || mergeDeepProperties
                  , B = U(m[L], R[L], L);
                ef.isUndefined(B) && U !== mergeDirectKeys || (C[L] = B)
            }),
            C
        }
        let eM = "1.6.7"
          , ej = {};
        ["object", "boolean", "number", "function", "string", "symbol"].forEach((m,R)=>{
            ej[m] = function(C) {
                return typeof C === m || "a" + (R < 1 ? "n " : " ") + m
            }
        }
        );
        let eD = {};
        ej.transitional = function(m, R, C) {
            function formatMessage(m, R) {
                return "[Axios v" + eM + "] Transitional option '" + m + "'" + R + (C ? ". " + C : "")
            }
            return (C,T,L)=>{
                if (!1 === m)
                    throw new AxiosError(formatMessage(T, " has been removed" + (R ? " in " + R : "")),AxiosError.ERR_DEPRECATED);
                return R && !eD[T] && (eD[T] = !0,
                console.warn(formatMessage(T, " has been deprecated since v" + R + " and will be removed in the near future"))),
                !m || m(C, T, L)
            }
        }
        ;
        var eU = {
            assertOptions: function(m, R, C) {
                if ("object" != typeof m)
                    throw new AxiosError("options must be an object",AxiosError.ERR_BAD_OPTION_VALUE);
                let T = Object.keys(m)
                  , L = T.length;
                for (; L-- > 0; ) {
                    let U = T[L]
                      , B = R[U];
                    if (B) {
                        let R = m[U]
                          , C = void 0 === R || B(R, U, m);
                        if (!0 !== C)
                            throw new AxiosError("option " + U + " must be " + C,AxiosError.ERR_BAD_OPTION_VALUE);
                        continue
                    }
                    if (!0 !== C)
                        throw new AxiosError("Unknown option " + U,AxiosError.ERR_BAD_OPTION)
                }
            },
            validators: ej
        };
        let eB = eU.validators;
        let Axios = class Axios {
            constructor(m) {
                this.defaults = m,
                this.interceptors = {
                    request: new ey,
                    response: new ey
                }
            }
            async request(m, R) {
                try {
                    return await this._request(m, R)
                } catch (m) {
                    if (m instanceof Error) {
                        let R;
                        Error.captureStackTrace ? Error.captureStackTrace(R = {}) : R = Error();
                        let C = R.stack ? R.stack.replace(/^.+\n/, "") : "";
                        m.stack ? C && !String(m.stack).endsWith(C.replace(/^.+\n.+\n/, "")) && (m.stack += "\n" + C) : m.stack = C
                    }
                    throw m
                }
            }
            _request(m, R) {
                let C, T;
                "string" == typeof m ? (R = R || {}).url = m : R = m || {},
                R = mergeConfig(this.defaults, R);
                let {transitional: L, paramsSerializer: U, headers: B} = R;
                void 0 !== L && eU.assertOptions(L, {
                    silentJSONParsing: eB.transitional(eB.boolean),
                    forcedJSONParsing: eB.transitional(eB.boolean),
                    clarifyTimeoutError: eB.transitional(eB.boolean)
                }, !1),
                null != U && (ef.isFunction(U) ? R.paramsSerializer = {
                    serialize: U
                } : eU.assertOptions(U, {
                    encode: eB.function,
                    serialize: eB.function
                }, !0)),
                R.method = (R.method || this.defaults.method || "get").toLowerCase();
                let $ = B && ef.merge(B.common, B[R.method]);
                B && ef.forEach(["delete", "get", "head", "post", "put", "patch", "common"], m=>{
                    delete B[m]
                }
                ),
                R.headers = AxiosHeaders.concat($, B);
                let V = []
                  , H = !0;
                this.interceptors.request.forEach(function(m) {
                    ("function" != typeof m.runWhen || !1 !== m.runWhen(R)) && (H = H && m.synchronous,
                    V.unshift(m.fulfilled, m.rejected))
                });
                let W = [];
                this.interceptors.response.forEach(function(m) {
                    W.push(m.fulfilled, m.rejected)
                });
                let q = 0;
                if (!H) {
                    let m = [dispatchRequest.bind(this), void 0];
                    for (m.unshift.apply(m, V),
                    m.push.apply(m, W),
                    T = m.length,
                    C = Promise.resolve(R); q < T; )
                        C = C.then(m[q++], m[q++]);
                    return C
                }
                T = V.length;
                let G = R;
                for (q = 0; q < T; ) {
                    let m = V[q++]
                      , R = V[q++];
                    try {
                        G = m(G)
                    } catch (m) {
                        R.call(this, m);
                        break
                    }
                }
                try {
                    C = dispatchRequest.call(this, G)
                } catch (m) {
                    return Promise.reject(m)
                }
                for (q = 0,
                T = W.length; q < T; )
                    C = C.then(W[q++], W[q++]);
                return C
            }
            getUri(m) {
                m = mergeConfig(this.defaults, m);
                let R = buildFullPath(m.baseURL, m.url);
                return buildURL(R, m.params, m.paramsSerializer)
            }
        }
        ;
        ef.forEach(["delete", "get", "head", "options"], function(m) {
            Axios.prototype[m] = function(R, C) {
                return this.request(mergeConfig(C || {}, {
                    method: m,
                    url: R,
                    data: (C || {}).data
                }))
            }
        }),
        ef.forEach(["post", "put", "patch"], function(m) {
            function generateHTTPMethod(R) {
                return function(C, T, L) {
                    return this.request(mergeConfig(L || {}, {
                        method: m,
                        headers: R ? {
                            "Content-Type": "multipart/form-data"
                        } : {},
                        url: C,
                        data: T
                    }))
                }
            }
            Axios.prototype[m] = generateHTTPMethod(),
            Axios.prototype[m + "Form"] = generateHTTPMethod(!0)
        });
        let CancelToken = class CancelToken {
            constructor(m) {
                let R;
                if ("function" != typeof m)
                    throw TypeError("executor must be a function.");
                this.promise = new Promise(function(m) {
                    R = m
                }
                );
                let C = this;
                this.promise.then(m=>{
                    if (!C._listeners)
                        return;
                    let R = C._listeners.length;
                    for (; R-- > 0; )
                        C._listeners[R](m);
                    C._listeners = null
                }
                ),
                this.promise.then = m=>{
                    let R;
                    let T = new Promise(m=>{
                        C.subscribe(m),
                        R = m
                    }
                    ).then(m);
                    return T.cancel = function() {
                        C.unsubscribe(R)
                    }
                    ,
                    T
                }
                ,
                m(function(m, T, L) {
                    C.reason || (C.reason = new CanceledError(m,T,L),
                    R(C.reason))
                })
            }
            throwIfRequested() {
                if (this.reason)
                    throw this.reason
            }
            subscribe(m) {
                if (this.reason) {
                    m(this.reason);
                    return
                }
                this._listeners ? this._listeners.push(m) : this._listeners = [m]
            }
            unsubscribe(m) {
                if (!this._listeners)
                    return;
                let R = this._listeners.indexOf(m);
                -1 !== R && this._listeners.splice(R, 1)
            }
            static source() {
                let m;
                let R = new CancelToken(function(R) {
                    m = R
                }
                );
                return {
                    token: R,
                    cancel: m
                }
            }
        }
        ;
        let e$ = {
            Continue: 100,
            SwitchingProtocols: 101,
            Processing: 102,
            EarlyHints: 103,
            Ok: 200,
            Created: 201,
            Accepted: 202,
            NonAuthoritativeInformation: 203,
            NoContent: 204,
            ResetContent: 205,
            PartialContent: 206,
            MultiStatus: 207,
            AlreadyReported: 208,
            ImUsed: 226,
            MultipleChoices: 300,
            MovedPermanently: 301,
            Found: 302,
            SeeOther: 303,
            NotModified: 304,
            UseProxy: 305,
            Unused: 306,
            TemporaryRedirect: 307,
            PermanentRedirect: 308,
            BadRequest: 400,
            Unauthorized: 401,
            PaymentRequired: 402,
            Forbidden: 403,
            NotFound: 404,
            MethodNotAllowed: 405,
            NotAcceptable: 406,
            ProxyAuthenticationRequired: 407,
            RequestTimeout: 408,
            Conflict: 409,
            Gone: 410,
            LengthRequired: 411,
            PreconditionFailed: 412,
            PayloadTooLarge: 413,
            UriTooLong: 414,
            UnsupportedMediaType: 415,
            RangeNotSatisfiable: 416,
            ExpectationFailed: 417,
            ImATeapot: 418,
            MisdirectedRequest: 421,
            UnprocessableEntity: 422,
            Locked: 423,
            FailedDependency: 424,
            TooEarly: 425,
            UpgradeRequired: 426,
            PreconditionRequired: 428,
            TooManyRequests: 429,
            RequestHeaderFieldsTooLarge: 431,
            UnavailableForLegalReasons: 451,
            InternalServerError: 500,
            NotImplemented: 501,
            BadGateway: 502,
            ServiceUnavailable: 503,
            GatewayTimeout: 504,
            HttpVersionNotSupported: 505,
            VariantAlsoNegotiates: 506,
            InsufficientStorage: 507,
            LoopDetected: 508,
            NotExtended: 510,
            NetworkAuthenticationRequired: 511
        };
        Object.entries(e$).forEach(([m,R])=>{
            e$[R] = m
        }
        );
        let eF = function createInstance(m) {
            let R = new Axios(m)
              , C = bind(Axios.prototype.request, R);
            return ef.extend(C, Axios.prototype, R, {
                allOwnKeys: !0
            }),
            ef.extend(C, R, null, {
                allOwnKeys: !0
            }),
            C.create = function(R) {
                return createInstance(mergeConfig(m, R))
            }
            ,
            C
        }(eI);
        eF.Axios = Axios,
        eF.CanceledError = CanceledError,
        eF.CancelToken = CancelToken,
        eF.isCancel = isCancel,
        eF.VERSION = eM,
        eF.toFormData = helpers_toFormData,
        eF.AxiosError = AxiosError,
        eF.Cancel = eF.CanceledError,
        eF.all = function(m) {
            return Promise.all(m)
        }
        ,
        eF.spread = function(m) {
            return function(R) {
                return m.apply(null, R)
            }
        }
        ,
        eF.isAxiosError = function(m) {
            return ef.isObject(m) && !0 === m.isAxiosError
        }
        ,
        eF.mergeConfig = mergeConfig,
        eF.AxiosHeaders = AxiosHeaders,
        eF.formToJSON = m=>helpers_formDataToJSON(ef.isHTMLForm(m) ? new FormData(m) : m),
        eF.getAdapter = eN.getAdapter,
        eF.HttpStatusCode = e$,
        eF.default = eF;
        var eV = C(60604)
          , ez = C(79750)
          , eH = C(83928)
          , eW = C(42379)
          , eG = C(83454);
        let API = class API {
            async logAction(m) {
                eF.get("".concat(this.baseAPIURL, "/log?message=") + encodeURIComponent(m))
            }
            static webAssemblySupported() {
                try {
                    if ("object" == typeof WebAssembly && "function" == typeof WebAssembly.instantiate) {
                        let m = new WebAssembly.Module(Uint8Array.of(0, 97, 115, 109, 1, 0, 0, 0));
                        if (m instanceof WebAssembly.Module)
                            return new WebAssembly.Instance(m)instanceof WebAssembly.Instance
                    }
                } catch (m) {}
                return !1
            }
            getStytchTelemetry() {
                if (!API.webAssemblySupported())
                    throw {
                        message: "wasm-required"
                    };
                return new Promise((m,R)=>{
                    eG.env.ENABLE_STYTCH_TELEMETRY ? (setTimeout(()=>{
                        m("4fd394a2-bc99-47c5-86d2-64414ee3d1db")
                    }
                    , 3e4),
                    window.GetTelemetryID ? window.GetTelemetryID("public-token-live-e4dbf337-9f27-447f-908f-17038ec8d940").then(C=>{
                        C || R({
                            message: "no-telemetryId-available"
                        }),
                        m(C)
                    }
                    ) : R({
                        message: "no-telemetryId-available"
                    })) : m("telemetry-currently-disabled")
                }
                )
            }
            async completeEmailAuthentication(m, R, C, T) {
                let L = await window.grecaptcha.enterprise.execute("6Le2_BoiAAAAADeY39xwjDr8P-_AAtJJBW0hWX9M", {
                    action: "start_email_authentication"
                });
                if (!L)
                    throw {
                        message: "no-recaptcha-available"
                    };
                let U = await this.getStytchTelemetry();
                try {
                    let {data: B} = await eF.post("".concat(this.baseAPIURL, "/auth/email_authentication"), {
                        email: m,
                        password: R,
                        create: C,
                        mapId: T,
                        recaptcha: L,
                        telemetryId: U
                    });
                    return this.sessionToken = B.sessionToken,
                    this.walletProvider = "email",
                    (0,
                    eH.Ul)("pixels-session", this.sessionToken),
                    (0,
                    eH.Ul)("wallet-provider", "email"),
                    B
                } catch (m) {
                    var B;
                    if (null === (B = m.response) || void 0 === B ? void 0 : B.data)
                        throw m.response.data;
                    throw {
                        error: "server-unreachable",
                        message: "No response from server. Please try again later."
                    }
                }
            }
            async startCryptoAuthentication(m) {
                let R = await window.grecaptcha.enterprise.execute("6Le2_BoiAAAAADeY39xwjDr8P-_AAtJJBW0hWX9M", {
                    action: "start_crypto_authentication"
                });
                if (!R)
                    throw {
                        message: "no-recaptcha-available"
                    };
                let C = await this.getStytchTelemetry();
                try {
                    let {data: T} = await eF.post("".concat(this.baseAPIURL, "/auth/start_crypto_authentication"), {
                        walletAddress: m,
                        recaptcha: R,
                        telemetryId: C
                    }, {
                        headers: {
                            "Content-Type": "application/json"
                        }
                    });
                    if (!T.challenge && T.message)
                        throw T;
                    return T.challenge
                } catch (m) {
                    var T;
                    if (null === (T = m.response) || void 0 === T ? void 0 : T.data)
                        throw m.response.data;
                    throw {
                        error: "server-unreachable",
                        message: "No response from server. Please try again later."
                    }
                }
            }
            async completeCryptoAuthentication(m, R, C, T) {
                try {
                    let {data: L} = await eF.post("".concat(this.baseAPIURL, "/auth/complete_crypto_authentication"), {
                        walletAddress: m,
                        signature: R,
                        mapId: T,
                        tenant: (0,
                        ez.F5)(),
                        walletProvider: C
                    });
                    return this.sessionToken = L.sessionToken,
                    this.walletProvider = C,
                    (0,
                    eH.Ul)("pixels-session", this.sessionToken),
                    (0,
                    eH.Ul)("wallet-provider", C),
                    L
                } catch (m) {
                    var L;
                    if (null === (L = m.response) || void 0 === L ? void 0 : L.data)
                        throw m.response.data;
                    throw {
                        error: "server-unreachable",
                        message: "No response from server. Please try again later."
                    }
                }
            }
            async startOneTimeAuthentication(m, R, C) {
                let T = await window.grecaptcha.enterprise.execute("6Le2_BoiAAAAADeY39xwjDr8P-_AAtJJBW0hWX9M", {
                    action: "start_onetime_authentication"
                });
                if (!T)
                    throw {
                        message: "no-recaptcha-available"
                    };
                let L = await this.getStytchTelemetry();
                try {
                    let {data: U} = await eF.post("".concat(this.baseAPIURL, "/auth/start_onetime_authentication"), {
                        otpckind: m,
                        identifier: "email" === m ? C : R,
                        recaptcha: T,
                        telemetryId: L
                    });
                    return U.method_id
                } catch (m) {
                    var U;
                    if (null === (U = m.response) || void 0 === U ? void 0 : U.data)
                        throw m.response.data;
                    throw {
                        error: "server-unreachable",
                        message: "No response from server. Please try again later."
                    }
                }
            }
            async completeOneTimeAuthentication(m, R, C) {
                try {
                    let {data: T} = await eF.post("".concat(this.baseAPIURL, "/auth/complete_onetime_authentication"), {
                        id: m,
                        code: R,
                        mapId: C,
                        tenant: (0,
                        ez.F5)()
                    });
                    return this.sessionToken = T.sessionToken,
                    this.walletProvider = "otpc",
                    (0,
                    eH.Ul)("pixels-session", this.sessionToken),
                    (0,
                    eH.Ul)("wallet-provider", "otpc"),
                    T
                } catch (m) {
                    var T;
                    if (null === (T = m.response) || void 0 === T ? void 0 : T.data)
                        throw m.response.data;
                    throw {
                        error: "server-unreachable",
                        message: "No response from server. Please try again later."
                    }
                }
            }
            async initialize(m, R) {
                let C;
                try {
                    let T = (0,
                    ez.F5)()
                      , L = (0,
                    eH.Ul)("pixels-session");
                    if (!L)
                        return null;
                    let U = (0,
                    eH.Ul)("wallet-provider") || R || "metamask"
                      , B = await eF.post("".concat(this.baseAPIURL, "/auth/initialize"), {
                        authToken: L,
                        mapId: m,
                        tenant: T,
                        walletProvider: U,
                        ver: eV.WX
                    });
                    C = B.data,
                    this.sessionToken = C.sessionToken,
                    this.walletProvider = U
                } catch (m) {
                    if (m.response && m.response.data && m.response.data.error)
                        throw m.response.data;
                    if (!m.response)
                        throw {
                            error: "server-unreachable",
                            message: "No response from server when authenticating. Check Internet Connection."
                        };
                    return null
                }
                if (!C.sessionToken && C.error)
                    throw C;
                return C
            }
            async createPlayer(m, R) {
                let C = await window.grecaptcha.enterprise.execute("6Le2_BoiAAAAADeY39xwjDr8P-_AAtJJBW0hWX9M", {
                    action: "create_player"
                })
                  , T = await this.getStytchTelemetry()
                  , {data: L} = await eF.post("".concat(this.baseAPIURL, "/auth/player/upsert"), {
                    username: m,
                    avatarPieces: R,
                    authToken: this.sessionToken,
                    walletProvider: this.walletProvider,
                    recaptcha: C,
                    telemetryId: T,
                    tenant: (0,
                    ez.F5)()
                });
                return L
            }
            async rateLimitedGet(m, R) {
                for (; this.limiter; )
                    await this.limiter;
                return this.limiter = (async()=>{
                    var C;
                    let T = Date.now()
                      , L = 1e3 - (T - (null !== (C = this.lastcall) && void 0 !== C ? C : 0));
                    L > 0 && await new Promise(m=>setTimeout(m, L));
                    let {data: U} = await eF.get(R, m);
                    return this.lastcall = Date.now(),
                    U
                }
                )(),
                this.limiter.then(m=>(this.limiter = void 0,
                m))
            }
            async fetchPlayerDetails(m) {
                let R = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
                  , C = {
                    headers: {
                        Authorization: this.sessionToken
                    }
                };
                return this.rateLimitedGet(C, "".concat(this.baseAPIURL, "/player?mid=").concat(m, "&detail=").concat(R))
            }
            async fetchPlayersUsernames(m) {
                if (!(null == m ? void 0 : m.length))
                    return {};
                let R = {
                    headers: {
                        Authorization: this.sessionToken
                    }
                }
                  , C = m.map(m=>"mid=".concat(m)).join("&");
                try {
                    let {data: m} = await eF.get("".concat(this.baseAPIURL, "/player/usernames?").concat(C), R);
                    return m
                } catch (m) {
                    return {}
                }
            }
            async signOut() {
                let m = (0,
                eH.Ul)("pixels-session");
                if (this.sessionToken = void 0,
                (0,
                eH.Ul)("pixels-session", null),
                (0,
                eH.Ul)("wallet-provider", null),
                (0,
                eH.Ul)("player-nfts", null),
                this.sessionToken = void 0,
                m) {
                    let {data: R} = await eF.post("".concat(this.baseAPIURL, "/auth/sign_out"), {
                        authToken: m
                    });
                    return R
                }
            }
            hashVersion(m) {
                let R = {
                    "6.122": "87bbbwei20",
                    "6.209": "--78DEVO+spins"
                };
                if (R[m])
                    return R[m];
                let C = 0;
                for (let R = 0, T = m.length; R < T; R++) {
                    let T = m.charCodeAt(R) + R - 17;
                    C = (C << 5) - C + T | 0
                }
                return C
            }
            async fetchGameLibrary() {
                let m = (0,
                ez.F5)()
                  , R = {
                    headers: {
                        "x-client-version": this.hashVersion(eV.WX.toString())
                    }
                }
                  , {data: C} = await this.axiosget("".concat(this.baseAPIURL, "/game/library?tenant=").concat(m, "&ver=").concat(eV.WX), R);
                return C
            }
            async fetchGameLibraryExtras(m) {
                let {data: R} = await eF.post("".concat(this.baseAPIURL, "/game/library"), m);
                return R
            }
            async fetchMap(m) {
                let {data: R} = await this.axiosget("".concat(this.baseAPIURL, "/map/").concat(m));
                return R
            }
            async fetchingUgcDecorations(m) {
                let {onlyFetchPending: R} = m
                  , {data: C} = await this.axiosget("".concat(this.baseAPIURL, "/game/ugc/decorations?").concat(R ? "onlyFetchPending=true" : ""));
                return C
            }
            async approveUgcDecoration(m) {
                let {itemId: R, objectId: C} = m
                  , {data: T} = await eF.post("".concat(this.baseAPIURL, "/game/ugc/decorations/approve"), {
                    authToken: (0,
                    eH.Ul)("pixels-session"),
                    itemId: R,
                    objectId: C
                });
                return T
            }
            async rejectUgcDecoration(m) {
                let {itemId: R, objectId: C, reason: T} = m
                  , {data: L} = await eF.post("".concat(this.baseAPIURL, "/game/ugc/decorations/reject"), {
                    authToken: (0,
                    eH.Ul)("pixels-session"),
                    itemId: R,
                    objectId: C,
                    reason: T
                });
                return L
            }
            async axiosget(m, R) {
                let C = Date.now()
                  , T = -1 === m.indexOf("?") ? "".concat(m, "?v=").concat(C) : "".concat(m, "&v=").concat(C);
                return eF.get(T, R)
            }
            async fetchFeaturedMaps() {
                let {data: m} = await eF.get("".concat(this.baseAPIURL, "/maps/featured"));
                return m
            }
            async getStoreItemStockSupply(m, R) {
                let {data: C} = await this.axiosget("".concat(this.baseAPIURL, "/store/").concat(m, "/").concat(R));
                return C
            }
            async fetchPlayerPets(m) {
                console.log("getting pets from ".concat(this.baseAPIURL));
                let {data: R} = await this.axiosget("".concat(this.baseAPIURL, "/pets/owner/").concat(m || "0"));
                return R
            }
            async fetchPet(m) {
                let {data: R} = await this.axiosget("".concat(this.baseAPIURL, "/pet/").concat(m));
                return R
            }
            async fetchPetPreview(m, R) {
                let {data: C} = await this.axiosget("".concat(this.baseAPIURL, "/pet/").concat(m, "/").concat(R));
                return C
            }
            async fetchNFTStats(m) {
                let {data: R} = await eF.get("".concat(this.baseAPIURL, "/nft/stats/").concat(m));
                return R
            }
            async voteForNFT(m, R, C) {
                await eF.put("".concat(this.baseAPIURL, "/nft/vote"), {
                    collection: m,
                    token: R,
                    vote: C
                })
            }
            getPlayerCachedNfts() {
                try {
                    let m = (0,
                    eH.Ul)("player-nfts") || "";
                    if (!m)
                        return null;
                    return JSON.parse(m)
                } catch (m) {
                    console.log(m)
                }
            }
            savePlayerNfts(m, R) {
                try {
                    let C = {
                        nfts: m,
                        timestamp: Date.now(),
                        addresses: R
                    };
                    (0,
                    eH.Ul)("player-nfts", JSON.stringify(C))
                } catch (m) {
                    console.log(m)
                }
            }
            async getNFTTraitData(m, R, C, T) {
                var L, U;
                let B = {
                    headers: {
                        Authorization: this.sessionToken
                    }
                };
                if (!this.sessionToken)
                    return [];
                let {data: $} = await eF.get("".concat(this.baseAPIURL, "/player/collections/getNFTData?collection=").concat(m, "&token=").concat(R), B);
                if (!(null === (L = $.traits) || void 0 === L ? void 0 : L.length)) {
                    let m = await eF.get("/api/opensea?contract=".concat(C, "&token=").concat(R, "&chain=").concat(T || "ethereum"));
                    if (m && m.data && (null === (U = m.data.traits) || void 0 === U ? void 0 : U.length) > 0)
                        return m.data
                }
                return $ || {}
            }
            async getTopFarms() {
                let {data: m} = await eF.get("".concat(this.baseCacheUrl, "/discoverability/top_farms"));
                return m
            }
            async getTopNFTFarms() {
                let {data: m} = await eF.get("".concat(this.baseCacheUrl, "/discoverability/nft/top_farms"));
                return m
            }
            async getTopFreeFarms() {
                let {data: m} = await eF.get("".concat(this.baseCacheUrl, "/discoverability/free/top_farms"));
                return m
            }
            async fetchPlayerFarms(m) {
                let {data: R} = await eF.get("".concat(this.baseAPIURL, "/player/farms?player_id=").concat(m));
                return R
            }
            async searchFarms(m) {
                let {data: R} = await eF.get("".concat(this.baseAPIURL, "/player/search?input=").concat(encodeURIComponent(m)));
                return R
            }
            async farmDetails(m) {
                let {data: R} = await eF.get("".concat(this.baseAPIURL, "/infiniportal/farm_details/").concat(m));
                return R
            }
            async hatchPet(m) {
                try {
                    let {data: R} = await eF.post("".concat(this.baseAPIURL, "/pets/hatch"), {
                        entity: m
                    }, {
                        headers: {
                            Authorization: this.sessionToken
                        }
                    });
                    return R
                } catch (m) {
                    return console.log(null == m ? void 0 : m.message),
                    !1
                }
            }
            async getRoomId(m, R) {
                let {data: C} = await this.axiosget("".concat(this.baseColyeusURL, "/game/findroom/").concat(encodeURIComponent(m), "/").concat(R));
                if (!(null == C ? void 0 : C.roomId))
                    throw Error("please-reload-app");
                return "".concat(null == C ? void 0 : C.roomId, "/").concat(null == C ? void 0 : C.server)
            }
            async getWorldTotals() {
                let {data: m} = await this.axiosget("".concat(this.baseAPIURL, "/game/worlds"));
                return m
            }
            async fetchMarketplaceListingCounts() {
                let {data: m} = await this.axiosget("".concat(this.baseCacheUrl, "/marketplace/listings/count"));
                return m
            }
            async fetchMarketplaceListingsForItem(m, R) {
                let C = Date.now();
                if (this.marketTime && C - this.marketTime < 2e3) {
                    let m = this.marketTime + 2e3 - C;
                    await new Promise(R=>setTimeout(R, m))
                }
                let T = {
                    headers: {
                        Authorization: this.sessionToken
                    }
                }
                  , {data: L} = await this.axiosget("".concat(this.baseAPIURL, "/marketplace/item/").concat(m, "?pid=").concat(R), T);
                return this.marketTime = Date.now(),
                L
            }
            async fetchMarketplaceListingsForPlayer(m) {
                let {data: R} = await this.axiosget("".concat(this.baseAPIURL, "/marketplace/player/").concat(m));
                return R
            }
            async fetchPlayerUGC() {
                let {data: m} = await eF.post("".concat(this.baseAPIURL, "/game/ugc/player"), {
                    token: this.sessionToken
                });
                return m
            }
            async checkForStytchAccount(m) {
                let {email: R, phone: C, eth: T, kind: L} = m
                  , U = {
                    headers: {
                        "x-client-version": this.hashVersion(eV.WX.toString())
                    }
                }
                  , {data: B} = await this.axiosget("".concat(this.baseAPIURL, "/auth/check/stytch_user"), {
                    params: {
                        email: "email" === L ? R : void 0,
                        phone: "sms" === L || "whatsapp" === L ? C : void 0,
                        eth: "eth" === L ? T : void 0,
                        ver: eV.WX
                    },
                    ...U
                });
                return B
            }
            constructor(m, R) {
                this.baseURL = m,
                this.version = R,
                this.baseAPIURL = "".concat(m, "/").concat(R),
                this.baseCacheUrl = "".concat(m, "/cache"),
                this.baseColyeusURL = m
            }
        }
        ;
        
        var eZ = new API(eW.LB,"v1")
        window['jooj'] = eZ;
        console.log(eZ.fetchMarketplaceListingsForItem("itm_popberryLoaf","6572eaec4bba74cc55f03b7b"))
    },
    18496: function(m, R, C) {
        "use strict";
        var T = C(95047);
        
        R.Z = new class {
            get sessionToken() {
                return this.api.sessionToken
            }
            get walletProvider() {
                return this.api.walletProvider
            }
            async startCryptoAuthentication(m) {
                return this.api.startCryptoAuthentication(m)
            }
            async completeAuthentication(m, R, C, T) {
                return this.api.completeCryptoAuthentication(m, R, C, T)
            }
            async completeEmailAuthentication(m, R, C, T) {
                return this.api.completeEmailAuthentication(m, R, C, T)
            }
            async startOneTimeAuthentication(m, R, C) {
                return this.api.startOneTimeAuthentication(m, R, C)
            }
            async completeOneTimeAuthentication(m, R, C) {
                return this.api.completeOneTimeAuthentication(m, R, C)
            }
            async initialize(m, R) {
                return this.api.initialize(m, R)
            }
            async signOut() {
                return this.api.signOut()
            }
            async createPlayer(m, R) {
                return this.api.createPlayer(m, R)
            }
            async fetchPlayer(m) {
                let R = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                return this.api.fetchPlayerDetails(m, R)
            }
            async checkForStytchAccount(m) {
                let {email: R, phone: C, eth: T, kind: L} = m;
                return this.api.checkForStytchAccount({
                    email: R,
                    phone: C,
                    eth: T,
                    kind: L
                })
            }
            constructor(m) {
                this.api = m
            }
        }
        (T.Z)
    },
    39135: function(m, R, C) {
        "use strict";
        C.d(R, {
            Z: function() {
                return em
            },
            W: function() {
                return reloadi18n
            }
        });
        var T, L, U, B = C(34853), $ = C(57715);
        function _typeof(m) {
            return (_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(m) {
                return typeof m
            }
            : function(m) {
                return m && "function" == typeof Symbol && m.constructor === Symbol && m !== Symbol.prototype ? "symbol" : typeof m
            }
            )(m)
        }
        var V = []
          , H = V.forEach
          , W = V.slice;
        function defaults(m) {
            return H.call(W.call(arguments, 1), function(R) {
                if (R)
                    for (var C in R)
                        void 0 === m[C] && (m[C] = R[C])
            }),
            m
        }
        function hasXMLHttpRequest() {
            return "function" == typeof XMLHttpRequest || ("undefined" == typeof XMLHttpRequest ? "undefined" : _typeof(XMLHttpRequest)) === "object"
        }
        var q = C(83154)
          , G = C.t(q, 2);
        function request_typeof(m) {
            return (request_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(m) {
                return typeof m
            }
            : function(m) {
                return m && "function" == typeof Symbol && m.constructor === Symbol && m !== Symbol.prototype ? "symbol" : typeof m
            }
            )(m)
        }
        "function" == typeof fetch && (T = "undefined" != typeof global && global.fetch ? global.fetch : "undefined" != typeof window && window.fetch ? window.fetch : fetch),
        hasXMLHttpRequest() && ("undefined" != typeof global && global.XMLHttpRequest ? L = global.XMLHttpRequest : "undefined" != typeof window && window.XMLHttpRequest && (L = window.XMLHttpRequest)),
        "function" == typeof ActiveXObject && ("undefined" != typeof global && global.ActiveXObject ? U = global.ActiveXObject : "undefined" != typeof window && window.ActiveXObject && (U = window.ActiveXObject)),
        T || !G || L || U || (T = q || G),
        "function" != typeof T && (T = void 0);
        var addQueryString = function(m, R) {
            if (R && "object" === request_typeof(R)) {
                var C = "";
                for (var T in R)
                    C += "&" + encodeURIComponent(T) + "=" + encodeURIComponent(R[T]);
                if (!C)
                    return m;
                m = m + (-1 !== m.indexOf("?") ? "&" : "?") + C.slice(1)
            }
            return m
        }
          , fetchIt = function(m, R, C) {
            T(m, R).then(function(m) {
                if (!m.ok)
                    return C(m.statusText || "Error", {
                        status: m.status
                    });
                m.text().then(function(R) {
                    C(null, {
                        status: m.status,
                        data: R
                    })
                }).catch(C)
            }).catch(C)
        }
          , Z = !1
          , requestWithFetch = function(m, R, C, T) {
            m.queryStringParams && (R = addQueryString(R, m.queryStringParams));
            var L = defaults({}, "function" == typeof m.customHeaders ? m.customHeaders() : m.customHeaders);
            C && (L["Content-Type"] = "application/json");
            var U = "function" == typeof m.requestOptions ? m.requestOptions(C) : m.requestOptions
              , B = defaults({
                method: C ? "POST" : "GET",
                body: C ? m.stringify(C) : void 0,
                headers: L
            }, Z ? {} : U);
            try {
                fetchIt(R, B, T)
            } catch (m) {
                if (!U || 0 === Object.keys(U).length || !m.message || 0 > m.message.indexOf("not implemented"))
                    return T(m);
                try {
                    Object.keys(U).forEach(function(m) {
                        delete B[m]
                    }),
                    fetchIt(R, B, T),
                    Z = !0
                } catch (m) {
                    T(m)
                }
            }
        }
          , requestWithXmlHttpRequest = function(m, R, C, T) {
            C && "object" === request_typeof(C) && (C = addQueryString("", C).slice(1)),
            m.queryStringParams && (R = addQueryString(R, m.queryStringParams));
            try {
                (B = L ? new L : new U("MSXML2.XMLHTTP.3.0")).open(C ? "POST" : "GET", R, 1),
                m.crossDomain || B.setRequestHeader("X-Requested-With", "XMLHttpRequest"),
                B.withCredentials = !!m.withCredentials,
                C && B.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"),
                B.overrideMimeType && B.overrideMimeType("application/json");
                var B, $ = m.customHeaders;
                if ($ = "function" == typeof $ ? $() : $)
                    for (var V in $)
                        B.setRequestHeader(V, $[V]);
                B.onreadystatechange = function() {
                    B.readyState > 3 && T(B.status >= 400 ? B.statusText : null, {
                        status: B.status,
                        data: B.responseText
                    })
                }
                ,
                B.send(C)
            } catch (m) {
                console && console.log(m)
            }
        }
          , esm_request = function(m, R, C, L) {
            return ("function" == typeof C && (L = C,
            C = void 0),
            L = L || function() {}
            ,
            T) ? requestWithFetch(m, R, C, L) : hasXMLHttpRequest() || "function" == typeof ActiveXObject ? requestWithXmlHttpRequest(m, R, C, L) : void L(Error("No fetch and no xhr implementation found!"))
        };
        function _defineProperties(m, R) {
            for (var C = 0; C < R.length; C++) {
                var T = R[C];
                T.enumerable = T.enumerable || !1,
                T.configurable = !0,
                "value"in T && (T.writable = !0),
                Object.defineProperty(m, T.key, T)
            }
        }
        var Y = function() {
            var m, R;
            function Backend(m) {
                var R = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
                  , C = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                !function(m, R) {
                    if (!(m instanceof R))
                        throw TypeError("Cannot call a class as a function")
                }(this, Backend),
                this.services = m,
                this.options = R,
                this.allOptions = C,
                this.type = "backend",
                this.init(m, R, C)
            }
            return m = [{
                key: "init",
                value: function(m) {
                    var R = this
                      , C = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
                      , T = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                    this.services = m,
                    this.options = defaults(C, this.options || {}, {
                        loadPath: "/locales/{{lng}}/{{ns}}.json",
                        addPath: "/locales/add/{{lng}}/{{ns}}",
                        allowMultiLoading: !1,
                        parse: function(m) {
                            return JSON.parse(m)
                        },
                        stringify: JSON.stringify,
                        parsePayload: function(m, R, C) {
                            var T, L;
                            return T = {},
                            L = C || "",
                            R in T ? Object.defineProperty(T, R, {
                                value: L,
                                enumerable: !0,
                                configurable: !0,
                                writable: !0
                            }) : T[R] = L,
                            T
                        },
                        request: esm_request,
                        reloadInterval: "undefined" == typeof window && 36e5,
                        customHeaders: {},
                        queryStringParams: {},
                        crossDomain: !1,
                        withCredentials: !1,
                        overrideMimeType: !1,
                        requestOptions: {
                            mode: "cors",
                            credentials: "same-origin",
                            cache: "default"
                        }
                    }),
                    this.allOptions = T,
                    this.services && this.options.reloadInterval && setInterval(function() {
                        return R.reload()
                    }, this.options.reloadInterval)
                }
            }, {
                key: "readMulti",
                value: function(m, R, C) {
                    this._readAny(m, m, R, R, C)
                }
            }, {
                key: "read",
                value: function(m, R, C) {
                    this._readAny([m], m, [R], R, C)
                }
            }, {
                key: "_readAny",
                value: function(m, R, C, T, L) {
                    var U, B, $ = this, V = this.options.loadPath;
                    "function" == typeof this.options.loadPath && (V = this.options.loadPath(m, C)),
                    (V = (B = U = V) && "function" == typeof B.then ? U : Promise.resolve(U)).then(function(U) {
                        if (!U)
                            return L(null, {});
                        var B = $.services.interpolator.interpolate(U, {
                            lng: m.join("+"),
                            ns: C.join("+")
                        });
                        $.loadUrl(B, L, R, T)
                    })
                }
            }, {
                key: "loadUrl",
                value: function(m, R, C, T) {
                    var L = this;
                    this.options.request(this.options, m, void 0, function(U, B) {
                        var $, V;
                        if (B && (B.status >= 500 && B.status < 600 || !B.status))
                            return R("failed loading " + m + "; status code: " + B.status, !0);
                        if (B && B.status >= 400 && B.status < 500)
                            return R("failed loading " + m + "; status code: " + B.status, !1);
                        if (!B && U && U.message && U.message.indexOf("Failed to fetch") > -1)
                            return R("failed loading " + m + ": " + U.message, !0);
                        if (U)
                            return R(U, !1);
                        try {
                            $ = "string" == typeof B.data ? L.options.parse(B.data, C, T) : B.data
                        } catch (R) {
                            V = "failed parsing " + m + " to json"
                        }
                        if (V)
                            return R(V, !1);
                        R(null, $)
                    })
                }
            }, {
                key: "create",
                value: function(m, R, C, T, L) {
                    var U = this;
                    if (this.options.addPath) {
                        "string" == typeof m && (m = [m]);
                        var B = this.options.parsePayload(R, C, T)
                          , $ = 0
                          , V = []
                          , H = [];
                        m.forEach(function(C) {
                            var T = U.options.addPath;
                            "function" == typeof U.options.addPath && (T = U.options.addPath(C, R));
                            var W = U.services.interpolator.interpolate(T, {
                                lng: C,
                                ns: R
                            });
                            U.options.request(U.options, W, B, function(R, C) {
                                $ += 1,
                                V.push(R),
                                H.push(C),
                                $ === m.length && L && L(V, H)
                            })
                        })
                    }
                }
            }, {
                key: "reload",
                value: function() {
                    var m = this
                      , R = this.services
                      , C = R.backendConnector
                      , T = R.languageUtils
                      , L = R.logger
                      , U = C.language;
                    if (!U || "cimode" !== U.toLowerCase()) {
                        var B = []
                          , append = function(m) {
                            T.toResolveHierarchy(m).forEach(function(m) {
                                0 > B.indexOf(m) && B.push(m)
                            })
                        };
                        append(U),
                        this.allOptions.preload && this.allOptions.preload.forEach(function(m) {
                            return append(m)
                        }),
                        B.forEach(function(R) {
                            m.allOptions.ns.forEach(function(m) {
                                C.read(R, m, "read", null, null, function(T, U) {
                                    T && L.warn("loading namespace ".concat(m, " for language ").concat(R, " failed"), T),
                                    !T && U && L.log("loaded namespace ".concat(m, " for language ").concat(R), U),
                                    C.loaded("".concat(R, "|").concat(m), T, U)
                                })
                            })
                        })
                    }
                }
            }],
            _defineProperties(Backend.prototype, m),
            R && _defineProperties(Backend, R),
            Object.defineProperty(Backend, "prototype", {
                writable: !1
            }),
            Backend
        }();
        Y.type = "backend";
        var K = C(15671)
          , J = C(43144)
          , X = []
          , Q = X.forEach
          , ee = X.slice
          , et = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/
          , serializeCookie = function(m, R, C) {
            var T = C || {};
            T.path = T.path || "/";
            var L = encodeURIComponent(R)
              , U = "".concat(m, "=").concat(L);
            if (T.maxAge > 0) {
                var B = T.maxAge - 0;
                if (Number.isNaN(B))
                    throw Error("maxAge should be a Number");
                U += "; Max-Age=".concat(Math.floor(B))
            }
            if (T.domain) {
                if (!et.test(T.domain))
                    throw TypeError("option domain is invalid");
                U += "; Domain=".concat(T.domain)
            }
            if (T.path) {
                if (!et.test(T.path))
                    throw TypeError("option path is invalid");
                U += "; Path=".concat(T.path)
            }
            if (T.expires) {
                if ("function" != typeof T.expires.toUTCString)
                    throw TypeError("option expires is invalid");
                U += "; Expires=".concat(T.expires.toUTCString())
            }
            if (T.httpOnly && (U += "; HttpOnly"),
            T.secure && (U += "; Secure"),
            T.sameSite)
                switch ("string" == typeof T.sameSite ? T.sameSite.toLowerCase() : T.sameSite) {
                case !0:
                case "strict":
                    U += "; SameSite=Strict";
                    break;
                case "lax":
                    U += "; SameSite=Lax";
                    break;
                case "none":
                    U += "; SameSite=None";
                    break;
                default:
                    throw TypeError("option sameSite is invalid")
                }
            return U
        }
          , er = {
            create: function(m, R, C, T) {
                var L = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : {
                    path: "/",
                    sameSite: "strict"
                };
                C && (L.expires = new Date,
                L.expires.setTime(L.expires.getTime() + 6e4 * C)),
                T && (L.domain = T),
                document.cookie = serializeCookie(m, encodeURIComponent(R), L)
            },
            read: function(m) {
                for (var R = "".concat(m, "="), C = document.cookie.split(";"), T = 0; T < C.length; T++) {
                    for (var L = C[T]; " " === L.charAt(0); )
                        L = L.substring(1, L.length);
                    if (0 === L.indexOf(R))
                        return L.substring(R.length, L.length)
                }
                return null
            },
            remove: function(m) {
                this.create(m, "", -1)
            }
        }
          , en = {
            name: "cookie",
            lookup: function(m) {
                var R;
                if (m.lookupCookie && "undefined" != typeof document) {
                    var C = er.read(m.lookupCookie);
                    C && (R = C)
                }
                return R
            },
            cacheUserLanguage: function(m, R) {
                R.lookupCookie && "undefined" != typeof document && er.create(R.lookupCookie, m, R.cookieMinutes, R.cookieDomain, R.cookieOptions)
            }
        }
          , eo = {
            name: "querystring",
            lookup: function(m) {
                var R;
                if ("undefined" != typeof window) {
                    var C = window.location.search;
                    !window.location.search && window.location.hash && window.location.hash.indexOf("?") > -1 && (C = window.location.hash.substring(window.location.hash.indexOf("?")));
                    for (var T = C.substring(1).split("&"), L = 0; L < T.length; L++) {
                        var U = T[L].indexOf("=");
                        U > 0 && T[L].substring(0, U) === m.lookupQuerystring && (R = T[L].substring(U + 1))
                    }
                }
                return R
            }
        }
          , ei = null
          , localStorageAvailable = function() {
            if (null !== ei)
                return ei;
            try {
                ei = "undefined" !== window && null !== window.localStorage;
                var m = "i18next.translate.boo";
                window.localStorage.setItem(m, "foo"),
                window.localStorage.removeItem(m)
            } catch (m) {
                ei = !1
            }
            return ei
        }
          , ea = {
            name: "localStorage",
            lookup: function(m) {
                var R;
                if (m.lookupLocalStorage && localStorageAvailable()) {
                    var C = window.localStorage.getItem(m.lookupLocalStorage);
                    C && (R = C)
                }
                return R
            },
            cacheUserLanguage: function(m, R) {
                R.lookupLocalStorage && localStorageAvailable() && window.localStorage.setItem(R.lookupLocalStorage, m)
            }
        }
          , es = null
          , sessionStorageAvailable = function() {
            if (null !== es)
                return es;
            try {
                es = "undefined" !== window && null !== window.sessionStorage;
                var m = "i18next.translate.boo";
                window.sessionStorage.setItem(m, "foo"),
                window.sessionStorage.removeItem(m)
            } catch (m) {
                es = !1
            }
            return es
        }
          , el = {
            name: "sessionStorage",
            lookup: function(m) {
                var R;
                if (m.lookupSessionStorage && sessionStorageAvailable()) {
                    var C = window.sessionStorage.getItem(m.lookupSessionStorage);
                    C && (R = C)
                }
                return R
            },
            cacheUserLanguage: function(m, R) {
                R.lookupSessionStorage && sessionStorageAvailable() && window.sessionStorage.setItem(R.lookupSessionStorage, m)
            }
        }
          , ec = {
            name: "navigator",
            lookup: function(m) {
                var R = [];
                if ("undefined" != typeof navigator) {
                    if (navigator.languages)
                        for (var C = 0; C < navigator.languages.length; C++)
                            R.push(navigator.languages[C]);
                    navigator.userLanguage && R.push(navigator.userLanguage),
                    navigator.language && R.push(navigator.language)
                }
                return R.length > 0 ? R : void 0
            }
        }
          , eu = {
            name: "htmlTag",
            lookup: function(m) {
                var R, C = m.htmlTag || ("undefined" != typeof document ? document.documentElement : null);
                return C && "function" == typeof C.getAttribute && (R = C.getAttribute("lang")),
                R
            }
        }
          , ef = {
            name: "path",
            lookup: function(m) {
                var R;
                if ("undefined" != typeof window) {
                    var C = window.location.pathname.match(/\/([a-zA-Z-]*)/g);
                    if (C instanceof Array) {
                        if ("number" == typeof m.lookupFromPathIndex) {
                            if ("string" != typeof C[m.lookupFromPathIndex])
                                return;
                            R = C[m.lookupFromPathIndex].replace("/", "")
                        } else
                            R = C[0].replace("/", "")
                    }
                }
                return R
            }
        }
          , ed = {
            name: "subdomain",
            lookup: function(m) {
                var R = "number" == typeof m.lookupFromSubdomainIndex ? m.lookupFromSubdomainIndex + 1 : 1
                  , C = "undefined" != typeof window && window.location && window.location.hostname && window.location.hostname.match(/^(\w{2,5})\.(([a-z0-9-]{1,63}\.[a-z]{2,6})|localhost)/i);
                if (C)
                    return C[R]
            }
        }
          , ep = function() {
            function Browser(m) {
                var R = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                (0,
                K.Z)(this, Browser),
                this.type = "languageDetector",
                this.detectors = {},
                this.init(m, R)
            }
            return (0,
            J.Z)(Browser, [{
                key: "init",
                value: function(m) {
                    var R = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
                      , C = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                    this.services = m,
                    this.options = function(m) {
                        return Q.call(ee.call(arguments, 1), function(R) {
                            if (R)
                                for (var C in R)
                                    void 0 === m[C] && (m[C] = R[C])
                        }),
                        m
                    }(R, this.options || {}, {
                        order: ["querystring", "cookie", "localStorage", "sessionStorage", "navigator", "htmlTag"],
                        lookupQuerystring: "lng",
                        lookupCookie: "i18next",
                        lookupLocalStorage: "i18nextLng",
                        lookupSessionStorage: "i18nextLng",
                        caches: ["localStorage"],
                        excludeCacheFor: ["cimode"]
                    }),
                    this.options.lookupFromUrlIndex && (this.options.lookupFromPathIndex = this.options.lookupFromUrlIndex),
                    this.i18nOptions = C,
                    this.addDetector(en),
                    this.addDetector(eo),
                    this.addDetector(ea),
                    this.addDetector(el),
                    this.addDetector(ec),
                    this.addDetector(eu),
                    this.addDetector(ef),
                    this.addDetector(ed)
                }
            }, {
                key: "addDetector",
                value: function(m) {
                    this.detectors[m.name] = m
                }
            }, {
                key: "detect",
                value: function(m) {
                    var R = this;
                    m || (m = this.options.order);
                    var C = [];
                    return (m.forEach(function(m) {
                        if (R.detectors[m]) {
                            var T = R.detectors[m].lookup(R.options);
                            T && "string" == typeof T && (T = [T]),
                            T && (C = C.concat(T))
                        }
                    }),
                    this.services.languageUtils.getBestMatchFromCodes) ? C : C.length > 0 ? C[0] : null
                }
            }, {
                key: "cacheUserLanguage",
                value: function(m, R) {
                    var C = this;
                    R || (R = this.options.caches),
                    R && (this.options.excludeCacheFor && this.options.excludeCacheFor.indexOf(m) > -1 || R.forEach(function(R) {
                        C.detectors[R] && C.detectors[R].cacheUserLanguage(m, C.options)
                    }))
                }
            }]),
            Browser
        }();
        ep.type = "languageDetector";
        var eh = C(79750);
        let eg = !1;
        B.ZP.on("onLoaded", ()=>{
            console.log("loading i18n"),
            eg = !0
        }
        ),
        B.ZP.use(Y).use(ep).use($.Db).init({
            debug: !1,
            fallbackLng: "en",
            load: "languageOnly",
            preload: ["en"],
            ns: ["ui", "game", "quest"],
            defaultNS: "ui",
            react: {
                useSuspense: !1
            },
            interpolation: {
                escapeValue: !1
            },
            backend: {
                crossDomain: !0,
                loadPath: function() {
                    let m = (0,
                    eh.F5)();
                    return "//pixels-server.pixels.xyz/v1/i18n/{{ns}}/{{lng}}" + "?tenant=".concat(m)
                }
            }
        }, m=>{
            eg = !m
        }
        );
        let reloadi18n = function() {
            let m = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
            if (m || !eg)
                return B.ZP.reloadResources()
        };
        var em = B.ZP
    },
    70247: function(m, R, C) {
        "use strict";
        C.d(R, {
            Z: function() {
                return L
            }
        });
        var T = C(95047);
        function union(m) {
            let {keyField: R, first: C, second: T, mergefields: L} = m
              , U = [].concat(null != C ? C : []);
            if (!T || 0 === T.length)
                return U;
            let B = {};
            return U.forEach((m,C)=>{
                R in m && (B[m[R]] = C)
            }
            ),
            T.forEach(m=>{
                let C = m[R];
                if (C in B) {
                    if (L) {
                        let R = B[C];
                        U[R] = {
                            ...U[R],
                            ...m
                        }
                    }
                } else
                    U.push(m)
            }
            ),
            U
        }
        let prepareEntity = (m,R)=>{
            var C, T, L, U;
            let B = R.entities[m];
            if (!B || "generic" !== B.type || !(null === (C = B.generic) || void 0 === C ? void 0 : C.inherits))
                return B;
            let $ = B.generic
              , V = prepareEntity($.inherits, R);
            if (!(null == V ? void 0 : V.generic))
                return B;
            let H = V.generic;
            return B.generic.defaultState = $.defaultState || H.defaultState,
            B.generic.states = (null === (T = $.states) || void 0 === T ? void 0 : T.length) ? union({
                keyField: "name",
                second: $.states,
                first: H.states,
                mergefields: !0
            }) : H.states,
            B.generic.layers = (null === (L = $.layers) || void 0 === L ? void 0 : L.length) ? union({
                keyField: "depth",
                second: $.layers,
                first: H.layers,
                mergefields: !0
            }) : H.layers,
            B.generic.transitions = (null === (U = $.transitions) || void 0 === U ? void 0 : U.length) ? union({
                keyField: "from_to",
                second: $.transitions,
                first: H.transitions,
                mergefields: !1
            }) : H.transitions,
            delete B.generic.inherits,
            B
        }
        ;
        var L = new class {
            async loadMap(m) {
                return this.api.fetchMap(m)
            }
            clearGameLibrary() {
                this.gameLibraryPromise = void 0
            }
            async loadLibraries(m) {
                try {
                    this.gameLibraryPromise || (this.gameLibraryPromise = this.api.fetchGameLibrary(),
                    this.gameLibraryPromise.then(m=>{
                        this.transformGameLibrary(m)
                    }
                    ).catch(()=>{
                        this.gameLibraryPromise = void 0
                    }
                    ));
                    let R = [this.gameLibraryPromise];
                    m && this.mapId !== m && (this.mapInfoPromise = this.api.fetchMap(m),
                    this.mapLibrary = void 0,
                    this.mapId = m),
                    this.mapInfoPromise && R.push(this.mapInfoPromise);
                    try {
                        await Promise.all(R)
                    } catch (m) {
                        this.gameLibraryPromise = void 0,
                        this.mapInfoPromise = void 0
                    }
                    if (this.mapInfoPromise) {
                        let m = await this.mapInfoPromise;
                        m && (this.mapLibrary = {
                            id: m.id,
                            labels: m.labels,
                            type: m.type,
                            config: {}
                        })
                    }
                    return this.gameLibrary
                } catch (m) {
                    console.log("could not load game library", m),
                    this.gameLibraryPromise = void 0,
                    this.mapInfoPromise = void 0;
                    return
                }
            }
            transformGameLibrary(m) {
                m.sounds && (m.sounds = new Map(m.sounds.map(m=>[m.id, m]))),
                m.entities && Object.keys(m.entities).forEach(R=>{
                    prepareEntity(R, m)
                }
                ),
                this.gameLibrary = m
            }
            transformGameLibraryUpdate(m) {
                let R = {
                    sounds: m.sounds
                };
                return Object.entries(m).forEach(m=>{
                    let[C,T] = m;
                    "sounds" !== C && (R[C] = {},
                    T.forEach(m=>{
                        R[C][m.id] = m
                    }
                    ))
                }
                ),
                R
            }
            isValid() {
                return this.gameLibrary && !!this.gameLibrary.objects && !!this.gameLibrary.avatars
            }
            async reloadOne(m) {
                let R = arguments.length > 1 && void 0 !== arguments[1] && arguments[1]
                  , C = "".concat(m.kind, "s");
                if (!this.gameLibrary && !R)
                    return null;
                try {
                    let R = await this.api.fetchGameLibraryExtras({
                        [C]: [m.id]
                    });
                    if (R) {
                        var T;
                        if (this.updateGameLibrary(this.transformGameLibraryUpdate(R)),
                        "sounds" === C)
                            return this.gameLibrary.sounds.get(m.id);
                        return null === (T = this.gameLibrary[C]) || void 0 === T ? void 0 : T[m.id]
                    }
                } catch (m) {
                    return null
                }
            }
            updateGameLibrary(m) {
                if (!this.gameLibrary) {
                    var R;
                    console.log("got library with ".concat(Object.values(null !== (R = m.tilesets) && void 0 !== R ? R : {}).length, " tilesets")),
                    this.gameLibrary = m;
                    return
                }
                m.objects && Object.assign(this.gameLibrary.objects, m.objects),
                m.stores && Object.assign(this.gameLibrary.stores, m.stores),
                m.entities && (Object.assign(this.gameLibrary.entities, m.entities),
                Object.keys(m.entities).forEach(m=>{
                    prepareEntity(m, this.gameLibrary)
                }
                )),
                m.sounds && m.sounds.forEach(m=>{
                    this.gameLibrary.sounds.set(m.id, m)
                }
                ),
                m.tilesets && Object.assign(this.gameLibrary.tilesets, m.tilesets),
                m.quests && Object.assign(this.gameLibrary.quests, m.quests)
            }
            getGameObject(m) {
                var R;
                let C = null === (R = this.gameLibrary) || void 0 === R ? void 0 : R.objects[m];
                return C
            }
            getGameNonWallObjects() {
                if (!this.nonWallObjects) {
                    var m;
                    this.nonWallObjects = (null === (m = this.gameLibrary) || void 0 === m ? void 0 : m.objects) ? Object.values(this.gameLibrary.objects).filter(m=>!m.wall) : void 0
                }
                return this.nonWallObjects
            }
            getGameWallObjects() {
                if (!this.wallObjects) {
                    var m;
                    this.wallObjects = (null === (m = this.gameLibrary) || void 0 === m ? void 0 : m.objects) ? Object.values(this.gameLibrary.objects).filter(m=>!!m.wall) : void 0
                }
                return this.wallObjects
            }
            getGameWallCategories() {
                if (!this.wallCategories) {
                    let m = this.getGameWallObjects();
                    this.wallCategories = null == m ? void 0 : m.reduce((m,R)=>({
                        ...m,
                        [R.wall.type]: [...m[R.wall.type] || [], R]
                    }), {})
                }
                return this.wallCategories
            }
            getGameTilesObjects() {
                var m;
                return (null === (m = this.gameLibrary) || void 0 === m ? void 0 : m.tilesets) ? Object.values(this.gameLibrary.tilesets) : void 0
            }
            getGameItems() {
                var m;
                let R = null === (m = this.gameLibrary) || void 0 === m ? void 0 : m.items;
                return R
            }
            getGameItem(m) {
                var R;
                let C = null === (R = this.gameLibrary) || void 0 === R ? void 0 : R.items[m];
                return C
            }
            getGameEntities() {
                if (this.gameLibrary) {
                    var m;
                    return Object.values(null === (m = this.gameLibrary) || void 0 === m ? void 0 : m.entities)
                }
            }
            getGameEntity(m) {
                var R;
                return null === (R = this.gameLibrary) || void 0 === R ? void 0 : R.entities[m]
            }
            getGameAvatar(m) {
                var R;
                return null === (R = this.gameLibrary) || void 0 === R ? void 0 : R.avatars[m]
            }
            getGameAvatars() {
                var m;
                return null === (m = this.gameLibrary) || void 0 === m ? void 0 : m.avatars
            }
            getTenants() {
                var m;
                return null === (m = this.gameLibrary) || void 0 === m ? void 0 : m.tenants
            }
            getTraitVariations(m, R) {
                let C, T = [], L = R;
                if (R.includes(".")) {
                    let[m,T] = R.split(".");
                    C = T,
                    L = m
                }
                if (m && (T = Object.values(m).filter(m=>m.type === L)),
                C) {
                    let m = T[0]
                      , R = [m];
                    return T.forEach(m=>{
                        R.map(m=>m[C]).includes(m[C]) || R.push(m)
                    }
                    ),
                    R
                }
                return T
            }
            getGameAvatarTypesOfTraits(m) {
                let R = new Set
                  , C = this.getGameAvatar(m);
                return C && C.defaults && ("function" == typeof C.defaults.forEach ? C.defaults.forEach(m=>{
                    "item" !== m.type && ("hair" !== m.type ? R.add(m.type) : (R.add("".concat(m.type, ".style")),
                    R.add("".concat(m.type, ".color"))))
                }
                ) : "object" == typeof C.defaults && Object.keys(C.defaults).forEach(m=>{
                    R.add(m)
                }
                )),
                Array.from(R.values())
            }
            getGameAvatarTraitsOfType(m, R) {
                let C, T = [], L = this.getGameAvatar(m), U = R;
                if (R.includes(".")) {
                    let[m,T] = R.split(".");
                    C = T,
                    U = m
                }
                if (L && L.defaults && (T = Object.values(L.defaults).filter(m=>m.type === U)),
                C) {
                    let m = T[0]
                      , R = [m];
                    return T.forEach(m=>{
                        R.map(m=>m[C]).includes(m[C]) || R.push(m)
                    }
                    ),
                    R
                }
                return T
            }
            getGameAvatarWithRandomTraits(m) {
                let R = this.getGameAvatarTypesOfTraits(m)
                  , C = R.map(R=>this.getGameAvatarTraitsOfType(m, R))
                  , T = C.map(m=>m[Math.floor(Math.random() * m.length)]);
                return T.reduce((m,R)=>({
                    ...m,
                    [R.type]: R
                }), {})
            }
            getGameTiles() {
                var m;
                return null === (m = this.gameLibrary) || void 0 === m ? void 0 : m.tilesets
            }
            getGameSoils() {
                var m, R;
                if (null === (m = this.gameLibrary) || void 0 === m ? void 0 : m.entities)
                    return Object.values(null === (R = this.gameLibrary) || void 0 === R ? void 0 : R.entities)
            }
            getGameSound(m) {
                var R;
                return (null === (R = this.gameLibrary) || void 0 === R ? void 0 : R.sounds) && this.gameLibrary.sounds.get(m)
            }
            getGameCurrency(m) {
                var R;
                return null === (R = this.gameLibrary) || void 0 === R ? void 0 : R.currencies[m]
            }
            getGameCurrencies() {
                var m;
                return null === (m = this.gameLibrary) || void 0 === m ? void 0 : m.currencies
            }
            setMapLibrary(m) {
                (null == m ? void 0 : m.config) && (this.mapLibrary = m)
            }
            async updateLibraryItems(m) {
                var R;
                if (this.gameLibrary && (null === (R = this.mapLibrary) || void 0 === R ? void 0 : R.config) && (null == m ? void 0 : m.length))
                    try {
                        let R = await this.api.fetchGameLibraryExtras({
                            items: m
                        });
                        this.updateGameLibrary(this.transformGameLibraryUpdate(R))
                    } catch (m) {
                        console.error("failure getting supplemental objects")
                    }
            }
            async scanGameLibrary(m) {
                var R;
                if (!this.gameLibrary || !(null === (R = this.mapLibrary) || void 0 === R ? void 0 : R.config))
                    return;
                let C = {
                    objects: new Set,
                    entities: new Set,
                    tilesets: new Set,
                    sounds: new Set
                };
                this.mapLibrary.config.objects && Object.entries(this.mapLibrary.config.objects).forEach(m=>{
                    let[,R] = m;
                    this.gameLibrary.objects && Object.hasOwn(this.gameLibrary.objects, R.object) || C.objects.add(R.object)
                }
                ),
                this.mapLibrary.config.tiles && Object.entries(this.mapLibrary.config.tiles).forEach(m=>{
                    let[,R] = m;
                    this.gameLibrary.tilesets && Object.hasOwn(this.gameLibrary.tilesets, R.tileset) || C.tilesets.add(R.tileset)
                }
                ),
                this.mapLibrary.config.sounds && this.mapLibrary.config.sounds.forEach(m=>{
                    this.gameLibrary.sounds && this.gameLibrary.sounds.has(m) || C.sounds.add(m)
                }
                ),
                m.forEach(m=>{
                    this.gameLibrary.entities && Object.hasOwn(this.gameLibrary.entities, m.entity) || C.entities.add(m.entity)
                }
                );
                let T = !0
                  , L = {};
                if (Object.entries(C).filter(m=>{
                    let[,R] = m;
                    return R.size > 0
                }
                ).forEach(m=>{
                    let[R,C] = m;
                    T = !1,
                    L[R] = Array.from(C)
                }
                ),
                !T) {
                    console.log("waiting to retrieve missing elements", L);
                    try {
                        let m = await this.api.fetchGameLibraryExtras(L);
                        this.updateGameLibrary(this.transformGameLibraryUpdate(m))
                    } catch (m) {
                        console.error("failure getting supplemental objects")
                    }
                }
            }
            async getUgcDecorations(m) {
                let {onlyFetchPending: R} = m
                  , C = await this.api.fetchingUgcDecorations({
                    onlyFetchPending: R
                });
                return this.updateGameLibrary(this.transformGameLibraryUpdate({
                    objects: C.objects
                })),
                C
            }
            async approveUgcDecoration(m) {
                let {itemId: R, objectId: C} = m
                  , T = await this.api.approveUgcDecoration({
                    itemId: R,
                    objectId: C
                });
                return T
            }
            async rejectUgcDecoration(m) {
                let {itemId: R, objectId: C, reason: T} = m
                  , L = await this.api.rejectUgcDecoration({
                    itemId: R,
                    objectId: C,
                    reason: T
                });
                return L
            }
            getDefaultCurrency() {
                var m;
                return (null === (m = this.mapLibrary) || void 0 === m ? void 0 : m.defaultCurrency) || "cur_berry"
            }
            getMapType() {
                var m;
                return (null === (m = this.mapLibrary) || void 0 === m ? void 0 : m.type) || "public"
            }
            getMapObjects() {
                var m;
                return null === (m = this.mapLibrary) || void 0 === m ? void 0 : m.config.objects
            }
            getMapObject(m) {
                var R;
                return null === (R = this.getMapObjects()) || void 0 === R ? void 0 : R[m]
            }
            getMapBackground() {
                var m, R, C;
                let T = null === (m = this.mapLibrary) || void 0 === m ? void 0 : m.config.background;
                if (!T)
                    return;
                let L = null === (C = this.gameLibrary) || void 0 === C ? void 0 : null === (R = C.objects) || void 0 === R ? void 0 : R[T];
                if (L)
                    return L
            }
            addMapObject(m) {
                let R = this.getMapObjects();
                if (R) {
                    let C = R[m._id];
                    C ? Object.assign(C, m) : R[m._id] = m
                }
            }
            updateMapTiles(m) {
                let R = this.getMapTiles();
                m && R && m.forEach(m=>{
                    R[m._id] = m
                }
                )
            }
            removeMapObject(m) {
                let R = this.getMapObjects();
                R && delete R[m._id]
            }
            getMapTiles() {
                var m;
                return null === (m = this.mapLibrary) || void 0 === m ? void 0 : m.config.tiles
            }
            getNPCProperties(m) {
                return {
                    npcType: m
                }
            }
            getMapSounds() {
                var m, R;
                return null === (R = this.mapLibrary) || void 0 === R ? void 0 : null === (m = R.config) || void 0 === m ? void 0 : m.sounds
            }
            getMapLabels() {
                var m;
                return null === (m = this.mapLibrary) || void 0 === m ? void 0 : m.labels
            }
            getStoreData() {
                var m;
                return null === (m = this.gameLibrary) || void 0 === m ? void 0 : m.stores
            }
            getStore(m) {
                var R, C;
                return null === (C = this.gameLibrary) || void 0 === C ? void 0 : null === (R = C.stores) || void 0 === R ? void 0 : R[m]
            }
            getMapTilesAt(m) {
                let R;
                return this.mapLibrary && (R = Object.values(this.mapLibrary.config.tiles).filter(R=>R.x === m.x && R.y === m.y)),
                R
            }
            getGameQuests() {
                var m;
                let R = null === (m = this.gameLibrary) || void 0 === m ? void 0 : m.quests;
                return R
            }
            getMapTile(m) {
                var R;
                return null === (R = this.mapLibrary) || void 0 === R ? void 0 : R.config.tiles[m]
            }
            getGameAchievement(m) {
                var R, C;
                return null === (C = this.gameLibrary) || void 0 === C ? void 0 : null === (R = C.achievements) || void 0 === R ? void 0 : R[m]
            }
            getGameAchievements() {
                var m;
                return (null === (m = this.gameLibrary) || void 0 === m ? void 0 : m.achievements) ? Object.values(this.gameLibrary.achievements) : void 0
            }
            constructor(m) {
                this.api = m
            }
        }
        (T.Z)
    },
    10333: function(m, R, C) {
        "use strict";
        C.r(R),
        C.d(R, {
            default: function() {
                return _app
            }
        });
        var T = C(85893)
          , L = C(67294)
          , U = C(11163)
          , B = C(25617)
          , $ = C(48583);
        C(39135),
        C(993),
        C(46305),
        C(17591);
        var V = C(80535);
        let pageview = m=>{
            var R, C;
            (null === (R = window) || void 0 === R ? void 0 : R.gtag) && (null === (C = window) || void 0 === C || C.gtag("config", "G-QGP383C71B", {
                page_path: m
            }))
        }
        ;
        var _app = m=>{
            let {Component: R, pageProps: C} = m
              , H = (0,
            U.useRouter)();
            return (0,
            L.useEffect)(()=>{
                let handleRouteChange = m=>{
                    pageview(m)
                }
                ;
                return H.events.on("routeChangeComplete", handleRouteChange),
                ()=>{
                    H.events.off("routeChangeComplete", handleRouteChange)
                }
            }
            , [H.events]),
            (0,
            T.jsx)(T.Fragment, {
                children: (0,
                T.jsx)(B.zt, {
                    store: V.h,
                    children: (0,
                    T.jsx)($.zt, {
                        store: V.e,
                        children: (0,
                        T.jsx)(R, {
                            ...C
                        })
                    })
                })
            })
        }
    },
    86731: function(m, R, C) {
        "use strict";
        C.d(R, {
            H: function() {
                return addHandler
            },
            q: function() {
                return T
            }
        });
        let T = {};
        function addHandler(m, R) {
            if (m in T) {
                let C = T[m];
                T[m] = (m,T)=>{
                    C(m, T),
                    R(m, T)
                }
            } else
                T[m] = R
        }
    },
    86193: function(m, R, C) {
        "use strict";
        C.d(R, {
            U: function() {
                return sendTradeEvent
            },
            V: function() {
                return getSlotItem
            }
        });
        var T = C(86731)
          , L = C(46787)
          , U = C(34377)
          , B = C(16562)
          , $ = C(19445)
          , V = C(80535);
        function sendTradeEvent(m) {
            U.ZP.sendEvent(U.fb.TRADE_SEND, m)
        }
        function getSlotItem(m, R) {
            var C, T;
            let L = B.l.getInstance()
              , U = m ? null === (T = L.getEntityByUniqueId(m)) || void 0 === T ? void 0 : null === (C = T.storage) || void 0 === C ? void 0 : C.slots : L.currentPlayer.full.inventory.slots;
            if (!U)
                return;
            let $ = "get"in U ? U.get(R.toString()) : U[R];
            return $
        }
        function getTrade(m) {
            return V.e.get(L.eH) ? void 0 : (0,
            L.sG)(m.getState())
        }
        let adjustTradeItems = (m,R)=>{
            var C;
            let {slot: T, item: U, adjustment: $, sourceSlot: V} = m
              , H = R.getState()
              , W = (0,
            L.KU)(H)
              , q = getTrade(R);
            if (!q || !W)
                return;
            let G = B.l.getInstance()
              , Z = G.getSessionId();
            if (!Z)
                return;
            let Y = null === (C = q.players[Z]) || void 0 === C ? void 0 : C.items;
            if (!Y)
                return;
            let K = Y.map(m=>m)
              , J = K.find(m=>m.slot === T);
            if (J && !U) {
                let m = J.quantity + $;
                K = K.filter(m=>m.slot !== T),
                m > 0 && K.push({
                    ...J,
                    quantity: m
                })
            } else {
                if (!U)
                    return;
                K = K.filter(m=>m.slot !== T && m.originalSlot !== V),
                $ > 0 && K.push({
                    item: U,
                    quantity: $,
                    originalSlot: null != V ? V : 0,
                    originalSource: void 0,
                    slot: T
                })
            }
            sendTradeEvent({
                subcommand: "update",
                tradeId: W,
                trade: {
                    items: K
                }
            })
        }
        ;
        (0,
        T.H)("game/PLAYER_INVENTORY_CHANGE", (m,R)=>{
            var C;
            let T = R.getState()
              , U = (0,
            L.KU)(T)
              , $ = getTrade(R);
            if (!$ || !U)
                return;
            let {inventory: V} = m
              , H = B.l.getInstance()
              , W = H.getSessionId()
              , q = null === (C = $.players[W]) || void 0 === C ? void 0 : C.items;
            if (!q)
                return;
            let G = !1
              , Z = q.filter(m=>{
                var R;
                let C = null === (R = V.slots) || void 0 === R ? void 0 : R[m.originalSlot.toString()];
                return !!C && C.item === m.item && !(C.quantity < m.quantity) || (G = !0,
                !1)
            }
            );
            G && sendTradeEvent({
                subcommand: "update",
                tradeId: U,
                trade: {
                    items: Z
                }
            })
        }
        ),
        (0,
        T.H)(L.sU.type, adjustTradeItems),
        (0,
        T.H)(L.gJ.type, (m,R)=>{
            var C;
            let {slot: T, mouseButton: U} = m
              , V = R.getState()
              , H = (0,
            L.KU)(V)
              , W = getTrade(R);
            if (!W || !H)
                return;
            let q = B.l.getInstance()
              , G = q.getSessionId();
            if (!G)
                return;
            let Z = null === (C = W.players[G]) || void 0 === C ? void 0 : C.items;
            if (!Z)
                return;
            let Y = (0,
            $.B6)(V)
              , K = (0,
            $.xM)(V)
              , J = Z.find(m=>m.slot === T);
            0 === U ? Y ? adjustTradeItems({
                slot: T,
                item: Y.id,
                sourceSlot: K.slot,
                adjustment: Math.min(1, K.quantity)
            }, R) : J && !Y && adjustTradeItems({
                slot: T,
                adjustment: -J.quantity
            }, R) : 2 === U && !Y && J && adjustTradeItems({
                slot: T,
                adjustment: -Math.ceil(J.quantity / 2)
            }, R)
        }
        )
    },
    22181: function(m, R, C) {
        "use strict";
        C.d(R, {
            R: function() {
                return U
            }
        });
        var T = C(7406)
          , L = C(70247);
        let U = (0,
        T.hg)("game/authenticatedWallet", async(m,R)=>{
            try {
                let C = await L.Z.loadLibraries(m.mapId);
                if (!L.Z.isValid())
                    throw "invalid-game-library";
                R.dispatch({
                    type: "game/LIBRARY",
                    payload: !!C
                })
            } catch (m) {
                R.dispatch({
                    type: "game/SVR_CANNOTCONNECT",
                    payload: {
                        message: ["serverOffline", "Server Offline"]
                    }
                })
            }
            return m
        }
        )
    },
    92217: function(m, R, C) {
        "use strict";
        C.d(R, {
            $O: function() {
                return en
            },
            DH: function() {
                return authOnetimeSelector
            },
            Ec: function() {
                return usernameSelector
            },
            Gq: function() {
                return isAuthenticatedSelector
            },
            H2: function() {
                return authLoadingSelector
            },
            Kx: function() {
                return q
            },
            MD: function() {
                return K
            },
            RT: function() {
                return J
            },
            Ti: function() {
                return authProviderSelector
            },
            WS: function() {
                return authEmailSelector
            },
            YR: function() {
                return X
            },
            ZP: function() {
                return authErrorSelector
            },
            cQ: function() {
                return noticeDialogSelector
            },
            cm: function() {
                return et
            },
            cn: function() {
                return Y
            },
            cu: function() {
                return defaultAvatarSelector
            },
            eW: function() {
                return G
            },
            fq: function() {
                return cryptoWalletsSelector
            },
            gz: function() {
                return ei
            },
            iM: function() {
                return Q
            },
            k4: function() {
                return er
            },
            vU: function() {
                return eo
            },
            z1: function() {
                return ee
            }
        });
        var T = C(7406)
          , L = C(79750)
          , U = C(16562)
          , B = C(89733)
          , $ = C(70247)
          , V = C(60604)
          , H = C(39135);
        let W = (0,
        T.oM)({
            name: "auth",
            initialState: {
                connected: !1,
                isAccountDirty: !1,
                showWalletNotFoundWarning: !1,
                authenticated: !1,
                loading: !0,
                noticeDialog: {
                    visible: !1,
                    allowClose: !1,
                    allowReload: !0,
                    msgKey: ""
                }
            },
            reducers: {
                checkAuthentication: (m,R)=>{
                    m.loading = !0,
                    m.mapId = R.payload.mapId
                }
                ,
                walletRequired: (m,R)=>{
                    m.showWalletNotFoundWarning = !1 !== R.payload
                }
                ,
                setConnected: (m,R)=>{
                    m.errorMessage = "",
                    m.connected = R.payload.connected,
                    m.provider = R.payload.provider,
                    m.eth = R.payload.eth,
                    m.email = R.payload.email,
                    m.newuser = R.payload.newuser,
                    m.methodid = R.payload.methodid,
                    m.code = R.payload.code,
                    m.password = R.payload.password,
                    m.isAccountDirty = !1,
                    R.payload.connected && (m.errorMessage = void 0)
                }
                ,
                continueAsGuest: (m,R)=>{
                    var C;
                    m.errorMessage = void 0,
                    m.authenticated = !0,
                    m.mapId = (null === (C = R.payload) || void 0 === C ? void 0 : C.mapId) || (0,
                    L.lf)(),
                    m.loading = !1,
                    m.sessionToken = null
                }
                ,
                createPlayer: (m,R)=>{
                    if (m.errorMessage = void 0,
                    m.sessionToken)
                        console.log("waiting for middleware to createplayer"),
                        m.loading = !0;
                    else {
                        console.log("continuing as guest");
                        let C = R.payload.username;
                        /^Guest-/i.test(null != C ? C : "") || (C = "Guest-".concat(C)),
                        m.username = C,
                        m.playerAvatar = R.payload.avatarPieces
                    }
                }
                ,
                loadingDone: m=>{
                    m.loading = !1
                }
                ,
                authenticate: (m,R)=>{
                    m.errorMessage = void 0,
                    m.mapId = R.payload.mapId,
                    m.loading = !0
                }
                ,
                updatedPlayer: (m,R)=>{
                    R.payload.username && (m.username = R.payload.username),
                    R.payload.playerId && (m.playerId = R.payload.playerId),
                    R.payload.playerAvatar && (m.playerAvatar = R.payload.playerAvatar),
                    R.payload.mapId && (m.mapId = R.payload.mapId),
                    R.payload.cryptoWallets && (m.cryptoWallets = R.payload.cryptoWallets)
                }
                ,
                authenticatedPlayer: (m,R)=>{
                    m.loading = !1,
                    m.username = R.payload.username,
                    m.playerId = R.payload.playerId,
                    R.payload.playerAvatar ? m.playerAvatar = R.payload.playerAvatar : m.playerAvatar = $.Z.getGameAvatarWithRandomTraits(V.tU),
                    R.payload.mapId && (m.mapId = R.payload.mapId),
                    m.authenticated = !0,
                    m.sessionToken = R.payload.sessionToken,
                    m.provider = R.payload.provider,
                    m.cryptoWallets = R.payload.cryptoWallets,
                    m.currentAvatar = R.payload.currentAvatar,
                    m.errorMessage = void 0
                }
                ,
                authenticateError: (m,R)=>{
                    var C;
                    m.errorMessage = null === (C = R.payload) || void 0 === C ? void 0 : C.message,
                    m.loading = !1,
                    m.connected = !1,
                    m.provider = void 0,
                    m.errorMessage && console.log("set error message", JSON.stringify(m.errorMessage))
                }
                ,
                serviceNotification: (m,R)=>{
                    var C, T;
                    m.noticeDialog.visible = !0,
                    m.noticeDialog.msgKey = R.payload.message,
                    m.noticeDialog.allowClose = null === (C = R.payload.allowClose) || void 0 === C || C,
                    m.noticeDialog.allowReload = null === (T = R.payload.allowReload) || void 0 === T || T
                }
                ,
                closeNotification: m=>{
                    m.noticeDialog.allowClose && (m.noticeDialog.visible = !1)
                }
                ,
                loggedOut: m=>{
                    m.loading = !1,
                    m.errorMessage = void 0,
                    m.provider = void 0,
                    m.authenticated = !1,
                    m.connected = !1,
                    m.playerId = void 0,
                    m.username = void 0,
                    m.sessionToken = null,
                    m.playerAvatar = void 0,
                    m.currentAvatar = void 0,
                    m.isAccountDirty = !1,
                    m.cryptoWallets = void 0
                }
                ,
                setIsAccountDirty: (m,R)=>{
                    m.isAccountDirty = R.payload
                }
            },
            extraReducers: m=>{
                m.addCase("game/ROOM_LOADED", m=>{
                    m.noticeDialog.visible = !1
                }
                ),
                m.addCase("game/SVR_CANNOTCONNECT", (m,R)=>{
                    var C;
                    m.loading = !0,
                    m.authenticated = !1,
                    m.connected = !1,
                    m.mapId = void 0,
                    m.username = void 0,
                    m.sessionToken = null,
                    m.playerAvatar = void 0,
                    m.currentAvatar = void 0,
                    m.cryptoWallets = void 0,
                    m.errorMessage = null === (C = R.payload) || void 0 === C ? void 0 : C.message
                }
                ),
                m.addCase("game/PLAYER_AVATAR", (m,R)=>{
                    R.payload.success ? (R.payload.username && (m.username = R.payload.username),
                    R.payload.playerAvatar && (m.playerAvatar = R.payload.playerAvatar)) : "username-already-exists" === R.payload.message ? m.errorMessage = ["nameInUse", "Name in use"] : m.errorMessage = ["internalServerError", "Task Failed Successfully. msg: UpdateAvatar"]
                }
                ),
                m.addCase("game/SERVICE_COMMAND", (m,R)=>{
                    var C, T, L, V, W, q;
                    let G = null == R ? void 0 : null === (T = R.payload) || void 0 === T ? void 0 : null === (C = T.command) || void 0 === C ? void 0 : C.toLowerCase();
                    "notice" === G ? (m.noticeDialog.visible = !0,
                    m.noticeDialog.msgKey = R.payload.message,
                    m.noticeDialog.allowClose = null === (L = R.payload.allowClose) || void 0 === L || L,
                    m.noticeDialog.allowReload = null === (V = R.payload.allowReload) || void 0 === V || V,
                    !1 === R.payload.allowClose && (B.Z.killScene(),
                    U.l.getInstance().disconnect())) : "reload" !== G || !R.payload.id || (null === (W = m.reloadIds) || void 0 === W ? void 0 : W.includes(R.payload.id)) || (m.reloadIds || (m.reloadIds = []),
                    null === (q = (0,
                    H.W)(!0)) || void 0 === q || q.catch(console.error),
                    $.Z.clearGameLibrary(),
                    $.Z.loadLibraries().catch(console.error),
                    m.reloadIds.push(R.payload.id))
                }
                )
            }
        })
          , defaultAvatarSelector = m=>m.auth.playerAvatar
          , isAuthenticatedSelector = m=>m.auth.authenticated
          , usernameSelector = m=>m.auth.username
          , authEmailSelector = m=>({
            email: m.auth.email,
            password: m.auth.password,
            newuser: m.auth.newuser
        })
          , authOnetimeSelector = m=>({
            method_id: m.auth.methodid,
            code: m.auth.code
        })
          , authProviderSelector = m=>m.auth.connected && m.auth.provider
          , authLoadingSelector = m=>m.auth.loading
          , authErrorSelector = m=>m.auth.errorMessage
          , cryptoWalletsSelector = m=>m.auth.cryptoWallets
          , noticeDialogSelector = m=>m.auth.noticeDialog
          , {checkAuthentication: q, setConnected: G, walletRequired: Z, continueAsGuest: Y, createPlayer: K, loadingDone: J, authenticate: X, authenticatedPlayer: Q, updatedPlayer: ee, authenticateError: et, loggedOut: er, setIsAccountDirty: en, closeNotification: eo, serviceNotification: ei} = W.actions;
        R.Co = W.reducer
    },
    77341: function(m, R, C) {
        "use strict";
        C.d(R, {
            F0: function() {
                return Z
            },
            Gp: function() {
                return missingToolsSelector
            },
            U1: function() {
                return selectedCraftableSelector
            },
            Uf: function() {
                return Y
            },
            Up: function() {
                return hasOngoingCraftSelector
            },
            XU: function() {
                return showCraftingUISelector
            },
            _r: function() {
                return K
            },
            hL: function() {
                return selectedCraftingTypeSelector
            },
            ki: function() {
                return tableSelector
            },
            og: function() {
                return allCraftablesSelector
            },
            sY: function() {
                return G
            },
            yq: function() {
                return J
            }
        });
        var T = C(7406)
          , L = C(68697)
          , U = C(70247)
          , B = C(83171)
          , $ = C(34377)
          , V = C(71343)
          , H = C(16562);
        let entitySendEvent = (m,R,C,T)=>{
            if (m && !R) {
                let C = H.l.getInstance().getEntityByUniqueId(m);
                R = null == C ? void 0 : C.entity
            }
            R && m && $.ZP.postEvent(V.m.clickEntity, {
                mid: m,
                impact: C,
                entity: R,
                inputs: T
            })
        }
          , W = {
            achievements: {},
            showCrafting: !1,
            ui: {
                craftType: "cooking",
                tableTier: 1,
                selectedCraftable: void 0
            }
        }
          , q = (0,
        T.oM)({
            name: "craftingSlice",
            initialState: W,
            reducers: {
                selectCraftable: (m,R)=>{
                    m.ui = {
                        ...m.ui,
                        selectedCraftable: R.payload.id
                    }
                }
                ,
                closeCraftingDialog: m=>{
                    m.showCrafting && entitySendEvent(m.ui.table_mid, m.ui.table_entity, "uiclose"),
                    m.showCrafting = !1
                }
                ,
                showCraftingWindow: (m,R)=>{
                    let {craftType: C, source: T, achievement: L, state: U, quantity: B, finish: $, tableTier: V} = R.payload
                      , H = null == U ? void 0 : U.startsWith("update:");
                    (!H || m.showCrafting && m.ui.table_mid === T) && (m.showCrafting && m.ui.table_mid && m.ui.table_entity && m.ui.craftType !== C && entitySendEvent(m.ui.table_mid, m.ui.table_entity, "uiclose"),
                    L ? m.ui.selectedCraftable = L : T !== m.ui.table_mid && (m.ui.selectedCraftable = void 0),
                    m.ui.craftType = C,
                    m.ui.tableTier = V,
                    m.ui.table_mid = T,
                    m.ui.quantity = B,
                    m.ui.completionTime = $,
                    m.ui.entityState = H ? U.substring(7) : U,
                    m.showCrafting = !0)
                }
            },
            extraReducers: m=>{
                m.addCase("game/ROOM_LEAVE", m=>{
                    m.achievements = {},
                    m.showCrafting = !1,
                    m.ui = {
                        ...W.ui
                    }
                }
                ),
                m.addCase("game/PLAYER_ACHIEVEMENT_ADD", (m,R)=>{
                    m.achievements[R.payload.achievement.achievementId] = R.payload.achievement
                }
                ),
                m.addCase("game/PLAYER_ACHIEVEMENT_CHANGED", (m,R)=>{
                    m.achievements[R.payload.achievement.achievementId] = R.payload.achievement
                }
                ),
                m.addCase("game/PLAYER_ACHIEVEMENT_REMOVED", (m,R)=>{
                    delete m.achievements[R.payload.achievement.achievementId]
                }
                )
            }
        })
          , {selectCraftable: G, closeCraftingDialog: Z, showCraftingWindow: Y} = q.actions;
        R.ZP = q.reducer;
        let showCraftingUISelector = m=>m.crafting.showCrafting
          , allCraftablesSelector = m=>Object.values(m.crafting.achievements)
          , tableSelector = m=>m.crafting.ui
          , selectedCraftableSelector = m=>m.crafting.ui.selectedCraftable ? m.crafting.achievements[m.crafting.ui.selectedCraftable] || {
            achievementId: m.crafting.ui.selectedCraftable
        } : null
          , K = (0,
        L.P1)([selectedCraftableSelector, B.RQ, m=>m.crafting.ui.entityState], (m,R,C)=>T=>{
            if (!m || "busy" === C)
                return !1;
            let L = U.Z.getGameAchievement(m.achievementId);
            return !!L && !!L.craftable && L.craftable.requiredItems.every(m=>{
                let C = R(m.id);
                return C >= m.quantity * T
            }
            )
        }
        )
          , J = (0,
        L.P1)([selectedCraftableSelector, B.xK], (m,R)=>C=>{
            let T = Object.values(R.slots);
            if (m) {
                var L;
                let R = U.Z.getGameAchievement(m.achievementId);
                if (!R)
                    return !1;
                let C = null === (L = R.craftable) || void 0 === L ? void 0 : L.requiredItems.some(m=>T.filter(R=>R.item === m.id).some(R=>R.quantity === m.quantity));
                if (C)
                    return !0
            }
            if (R.size > T.length)
                return !0;
            let B = U.Z.getGameItem(C);
            if (!B)
                return !1;
            let $ = T.filter(m=>m.item === C).reduce((m,R)=>m + R.quantity, 0);
            if (!$)
                return !1;
            if (!B.inventory.maxQuantity)
                return !0;
            let V = B.inventory.maxQuantity - $ % B.inventory.maxQuantity;
            return V > 0
        }
        )
          , missingToolsSelector = m=>{
            let R = selectedCraftableSelector(m);
            if (!R)
                return [];
            let C = U.Z.getGameAchievement(R.achievementId);
            return C && C.craftable ? C.craftable.requiredItems.filter(R=>R.unconsumable && R.quantity > (0,
            B.RQ)(m)(R.id)) : []
        }
          , selectedCraftingTypeSelector = m=>m.crafting.ui.craftType
          , hasOngoingCraftSelector = m=>{
            var R;
            return !!((null === (R = m.crafting.ui) || void 0 === R ? void 0 : R.entityState) && ["crafting", "ready"].includes(m.crafting.ui.entityState))
        }
    },
    39890: function(m, R, C) {
        "use strict";
        C.d(R, {
            b: function() {
                return U
            }
        });
        var T = C(7406)
          , L = C(16562);
        let U = (0,
        T.hg)("game/fetchWorlds", async()=>L.l.getInstance().worldService.fetchWorldData())
    },
    34256: function(m, R, C) {
        "use strict";
        C.d(R, {
            $J: function() {
                return el
            },
            E3: function() {
                return eE
            },
            Fd: function() {
                return X
            },
            GP: function() {
                return et
            },
            Hi: function() {
                return K
            },
            Mr: function() {
                return ec
            },
            Nb: function() {
                return ee
            },
            Rp: function() {
                return ed
            },
            Sm: function() {
                return es
            },
            XK: function() {
                return eS
            },
            dM: function() {
                return en
            },
            dd: function() {
                return e_
            },
            eW: function() {
                return eu
            },
            iJ: function() {
                return eh
            },
            io: function() {
                return ea
            },
            lW: function() {
                return eg
            },
            ni: function() {
                return ei
            },
            nl: function() {
                return Q
            },
            ol: function() {
                return er
            },
            po: function() {
                return ef
            },
            r$: function() {
                return eb
            },
            tD: function() {
                return J
            },
            uy: function() {
                return eo
            },
            zR: function() {
                return ep
            }
        });
        var T, L, U = C(7406), B = C(39890), $ = C(83928), V = C(79750), H = C(34377), W = C(60604), q = C(70247), G = C(34853);
        let Z = {
            loading: !0,
            warping: !1,
            connected: !1,
            needNfts: !1,
            worlds: {
                total: 0,
                maxPlayersPerWorld: 0,
                worlds: []
            },
            room: {
                levels: {}
            },
            gameLibraryLoaded: !1,
            player: {
                core: {
                    mid: "butch",
                    isGuest: !0,
                    position: {
                        x: 3e3,
                        y: 3e3
                    },
                    velocity: {
                        x: 0,
                        y: 0
                    },
                    username: "",
                    playerAvatar: "",
                    currentAvatar: {
                        id: "",
                        pieces: ""
                    },
                    typingTimestamp: 0
                },
                full: {
                    createdAt: 0,
                    cryptoWallets: [],
                    inventory: {
                        size: 0,
                        slots: {},
                        activeRow: 0
                    },
                    energy: {
                        level: 90
                    },
                    levels: {
                        farming: {
                            level: 0,
                            exp: 1,
                            totalExp: 1
                        }
                    },
                    avatar: {
                        display: {
                            body: {
                                species: "human",
                                type: "body",
                                color: "light",
                                gender: "female"
                            },
                            eyes: {
                                species: "human",
                                eyes: "simple"
                            },
                            outfit: {
                                type: "outfit",
                                species: "human",
                                style: "semicasual"
                            },
                            mouth: {
                                species: "human",
                                mouth: "smile"
                            },
                            hair: {
                                style: "elf",
                                color: "black",
                                type: "hair",
                                species: "human"
                            }
                        }
                    },
                    nft: "",
                    animation: "walk",
                    quests: {},
                    bookmarks: {
                        size: 3,
                        baseSize: 3,
                        bookmarkedMaps: []
                    },
                    messages: 0
                }
            },
            urlDisclaimer: {
                isActive: !1
            },
            lookAtText: {
                isActive: !1,
                x: 0,
                y: 0,
                text: ""
            },
            farmPicker: {
                isActive: !1
            },
            currentModal: "",
            npc_dialog: {
                isActive: !1,
                character: "ent_npcMayor",
                currentMessageIndex: 0,
                messages: [],
                queue: []
            },
            playersOnline: {
                isVisible: !1,
                updated: 0
            },
            playerOnlineInfo: {
                isVisible: !1,
                mid: "",
                username: ""
            },
            soundState: {
                global: {
                    mute: "1" === (0,
                    $.Ul)("global_mute"),
                    volume: parseFloat(null !== (T = (0,
                    $.Ul)("global_volume")) && void 0 !== T ? T : "1")
                },
                music: {
                    mute: "1" === (0,
                    $.Ul)("music_mute"),
                    volume: parseFloat(null !== (L = (0,
                    $.Ul)("music_volume")) && void 0 !== L ? L : "1")
                }
            },
            enhancedState: {
                enabled: "1" === (0,
                $.Ul)("enhanced_enabled")
            },
            joystickState: {
                enabled: "1" !== (0,
                $.Ul)("joystick_disabled")
            },
            criticalMessage: {
                isActive: !1,
                text: "Reconnecting to Server..."
            },
            nftPicker: {
                isVisible: !1
            },
            petPicker: {
                isVisible: !1,
                mode: "hatched"
            },
            realmrefresh: !1,
            petDetails: {
                isVisible: !1
            },
            socialSettings: {
                isVisible: !1
            },
            questLog: {
                isVisible: !1
            },
            showSkills: !1,
            showSettings: !1,
            farmDetails: {
                isActive: !1,
                mapId: (0,
                V.lf)()
            },
            sidePanel: {
                isActive: !1
            },
            farmUpgradePanel: {
                isActive: !1
            }
        }
          , updatePlayerLevelReducer = (m,R)=>{
            var C;
            let {key: T, level: L} = R.payload;
            (null === (C = m.player) || void 0 === C ? void 0 : C.full) && (m.player.full.levels || (m.player.full.levels = {}),
            T && L && (m.player.full.levels[T] = L))
        }
          , updateRoomLevelReducer = (m,R)=>{
            let {key: C, level: T} = R.payload;
            m.room && m.room.levels && (m.room.levels[C] = T)
        }
          , pushNPCDialog = (m,R)=>{
            var C;
            if (R.pet && (m.npc_dialog.isActive && m.npc_dialog.pet || m.npc_dialog.queue.some(m=>{
                var C, T;
                return m.pet && (null === (C = m.messages) || void 0 === C ? void 0 : C.length) === (null === (T = R.messages) || void 0 === T ? void 0 : T.length) && m.messages.every((m,C)=>m === R.messages[C])
            }
            )))
                return;
            let T = null === (C = R.messages) || void 0 === C ? void 0 : C.some(m=>{
                if (m.includes(" ") || !m.includes("_"))
                    return !1;
                let R = G.ZP.t(m, {
                    ns: "quest",
                    defaultValue: ""
                }) || G.ZP.t(m, {
                    ns: "game",
                    defaultValue: ""
                });
                return "" === R
            }
            );
            return m.npc_dialog.queue.push(R),
            T
        }
          , nextNPCDialogGroup = m=>{
            if (m.npc_dialog.queue.length > 0) {
                let R = m.npc_dialog.queue[0];
                m.npc_dialog.isActive = !0,
                m.npc_dialog.currentMessageIndex = 0,
                m.npc_dialog.character = R.npcId,
                m.npc_dialog.pet = R.pet,
                m.npc_dialog.messages = R.messages,
                m.npc_dialog.event = R.event,
                m.npc_dialog.queue = m.npc_dialog.queue.slice(1)
            } else
                m.npc_dialog.isActive = !1,
                m.npc_dialog.currentMessageIndex = 0,
                m.npc_dialog.character = void 0,
                m.npc_dialog.pet = void 0,
                m.npc_dialog.messages = []
        }
          , Y = (0,
        U.oM)({
            name: "game",
            initialState: Z,
            reducers: {
                mapSelected: (m,R)=>{
                    m.room.mapId = R.payload.mapId,
                    m.room.lastSavedAt = R.payload.lastSavedAt
                }
                ,
                dialogNext: m=>{
                    let {messages: R} = m.npc_dialog
                      , {currentMessageIndex: C} = m.npc_dialog;
                    C += 1,
                    R && C < R.length ? m.npc_dialog.currentMessageIndex = C : nextNPCDialogGroup(m)
                }
                ,
                dialogBack: m=>{
                    m.npc_dialog.currentMessageIndex = Math.max(m.npc_dialog.currentMessageIndex - 1, 0)
                }
                ,
                togglePlayersOnline: m=>{
                    m.playersOnline.isVisible = !m.playersOnline.isVisible
                }
                ,
                setPlayerOnlineInfo: (m,R)=>{
                    m.playerOnlineInfo = {
                        isVisible: !0,
                        ...R.payload
                    }
                }
                ,
                unsetPlayerOnlineInfo: m=>{
                    m.playerOnlineInfo = {
                        isVisible: !1,
                        mid: "",
                        username: ""
                    }
                }
                ,
                toggleQuestLog: m=>{
                    m.questLog.isVisible = !m.questLog.isVisible
                }
                ,
                toggleSkills: m=>{
                    m.showSkills = !m.showSkills
                }
                ,
                setWorld: (m,R)=>{
                    m.room.worldId = R.payload.worldId,
                    m.room.mapId = R.payload.mapId,
                    m.criticalMessage.text = "Loading...",
                    m.criticalMessage.isActive = !0
                }
                ,
                dismissURLDisclaimer: m=>{
                    m.urlDisclaimer.isActive = !1
                }
                ,
                logOut: m=>{
                    m.loading = !0,
                    m.connected = !1,
                    m.needNfts = !1,
                    m.lookAtText.isActive = !1,
                    m.room.worldId = void 0,
                    m.room.mapId = void 0,
                    m.room.lastSavedAt = void 0,
                    m.npc_dialog.isActive = !1,
                    m.sidePanel.isActive = !1,
                    m.farmUpgradePanel.isActive = !1,
                    m.questLog.isVisible = !1,
                    m.criticalMessage.isActive = !1
                }
                ,
                updateLookAt: (m,R)=>{
                    let {mouse: C, text: T, style: L} = R.payload;
                    m.lookAtText = {
                        isActive: !0,
                        text: T,
                        x: Math.round(C.x),
                        y: Math.round(C.y),
                        style: L
                    }
                }
                ,
                roomWarpBegan: (m,R)=>{
                    var C;
                    (null === (C = R.payload) || void 0 === C ? void 0 : C.abort) ? m.warping = !1 : m.warping = !0
                }
                ,
                roomWarpLoading: (m,R)=>{
                    m.room.mapId = R.payload.mapId,
                    m.loading = !0
                }
                ,
                closeModal: m=>{
                    m.currentModal = ""
                }
                ,
                toggleModal: (m,R)=>{
                    let C = R.payload.dialog;
                    C === m.currentModal ? m.currentModal = "" : (m.currentModal = C,
                    "nftpicker" === C && (m.needNfts = !0))
                }
                ,
                openPetPicker: (m,R)=>{
                    var C, T, L, U;
                    (null === (C = m.player) || void 0 === C ? void 0 : C.core.isGuest) || (m.needNfts = !0,
                    m.petPicker.mode = null !== (U = null === (T = R.payload) || void 0 === T ? void 0 : T.mode) && void 0 !== U ? U : "hatched",
                    m.petPicker.isVisible = !0,
                    m.petPicker.entity = null === (L = R.payload) || void 0 === L ? void 0 : L.entity,
                    m.currentModal = "",
                    m.questLog.isVisible = !1,
                    m.petDetails.isVisible = !1,
                    m.farmDetails.isActive = !1)
                }
                ,
                closePetPicker: m=>{
                    m.petPicker.isVisible = !1
                }
                ,
                mintedPet: m=>{
                    m.petPicker.refresh = Date.now() + 6e5
                }
                ,
                togglePetDetails: (m,R)=>{
                    var C;
                    (null === (C = R.payload) || void 0 === C ? void 0 : C.petId) ? (m.petDetails.mid = R.payload.petId,
                    m.petDetails.isVisible = !0,
                    m.petDetails.firstReveal = !0,
                    m.petPicker.refresh = Date.now()) : (m.petDetails.mid = void 0,
                    m.petDetails.isVisible = !m.petDetails.isVisible,
                    m.petDetails.firstReveal = !1)
                }
                ,
                toggleSidePanel: m=>{
                    m.sidePanel.isActive = !m.sidePanel.isActive
                }
                ,
                activateSidePanel: m=>{
                    m.sidePanel.isActive = !0
                }
                ,
                activateFarmUpgradePanel: m=>{
                    m.farmUpgradePanel.isActive = !0
                }
                ,
                deactivateFarmUpgradePanel: m=>{
                    m.farmUpgradePanel.isActive = !1
                }
                ,
                updateTemplateName: (m,R)=>{
                    m.room.templateName = R.payload.newTemplate
                }
                ,
                openSettings: m=>{
                    m.showSettings = !0
                }
                ,
                closeSettings: m=>{
                    m.showSettings = !1
                }
                ,
                clearRealmRefresh: m=>{
                    m.realmrefresh = !1
                }
            },
            extraReducers: m=>{
                m.addCase("game/ROOM_LEAVE", m=>{
                    m.playerOnlineInfo.isVisible = !1,
                    m.lookAtText.isActive = !1,
                    m.npc_dialog.isActive = !1,
                    m.sidePanel.isActive = !1,
                    m.farmUpgradePanel.isActive = !1,
                    m.showSkills = !1,
                    m.questLog.isVisible = !1,
                    m.farmDetails.isActive = !1,
                    m.petPicker.isVisible = !1,
                    m.petDetails.isVisible = !1,
                    m.room.levels = {}
                }
                ),
                m.addCase("game/ROOM_LOADED", (m,R)=>{
                    m.player = R.payload.player,
                    m.playerOnlineInfo.isVisible = !1,
                    m.lookAtText.isActive = !1,
                    m.room.roomType = R.payload.roomType,
                    m.room.templateName = R.payload.templateName,
                    m.sessionId = R.payload.sessionId,
                    m.criticalMessage.isActive = !1,
                    m.npc_dialog.isActive = !1,
                    m.sidePanel.isActive = !1,
                    m.farmUpgradePanel.isActive = !1,
                    m.showSkills = !1,
                    m.showSettings = !1,
                    m.questLog.isVisible = !1,
                    m.farmDetails.mapId = R.payload.mapId,
                    m.farmDetails.isActive = !1,
                    m.currentModal = "",
                    m.petPicker.isVisible = !1,
                    m.petDetails.isVisible = !1
                }
                ),
                m.addCase("game/PLAYER_AVATAR", (m,R)=>{
                    if (R.payload.success)
                        switch (m.currentModal) {
                        case "avatar":
                        case "nftpicker":
                        case "social":
                        case "username":
                            m.currentModal = ""
                        }
                }
                ),
                m.addCase("game/ROOM_WARP", m=>{
                    m.lookAtText.isActive = !1,
                    m.npc_dialog.isActive = !1,
                    m.sidePanel.isActive = !1,
                    m.farmUpgradePanel.isActive = !1,
                    m.showSkills = !1,
                    m.showSettings = !1,
                    m.questLog.isVisible = !1,
                    m.farmDetails.isActive = !1,
                    m.needNfts = !1,
                    m.room.lastSavedAt = void 0
                }
                ),
                m.addCase("game/SLOW_LOAD", (m,R)=>{
                    var C;
                    (null === (C = R.payload) || void 0 === C ? void 0 : C.retry) ? (R.payload.retry <= 2 ? m.criticalMessage.text = "Retrying Connection" : m.criticalMessage.text = "Retrying Connection x".concat(R.payload.retry - 1),
                    m.criticalMessage.isActive = !0) : m.criticalMessage.isActive || (m.criticalMessage.text = "Still Loading...",
                    m.criticalMessage.isActive = !0)
                }
                ),
                m.addCase("game/GAME_INITIATED", m=>{
                    m.loading = !1,
                    m.warping = !1,
                    m.connected = !0,
                    m.criticalMessage.isActive = !1,
                    m.room.lastSavedAt = void 0
                }
                ),
                m.addCase("game/PLAYER_JOINED", m=>{
                    m.playersOnline.updated += 1
                }
                ),
                m.addCase("game/PLAYER_REMOVED", m=>{
                    m.playersOnline.updated += 1
                }
                ),
                H.rV.soundControl.addReduxCase(m, (m,R)=>{
                    let {payload: {soundControlKey: C, mute: T, volume: L}} = R;
                    void 0 !== T && (m.soundState[C].mute = T,
                    (0,
                    $.Ul)("".concat(C, "_mute"), T ? "1" : "0")),
                    void 0 !== L && (L = Math.min(Math.max(L, 0), 1),
                    m.soundState[C].volume = L,
                    (0,
                    $.Ul)("".concat(C, "_volume"), L.toString()))
                }
                ),
                H.rV.enhancedControl.addReduxCase(m, (m,R)=>{
                    let {payload: {enabled: C}} = R;
                    void 0 !== C && (m.enhancedState.enabled = C,
                    (0,
                    $.Ul)("enhanced_enabled", C ? "1" : "0"),
                    setTimeout(()=>{
                        window.location.reload()
                    }
                    , 2e3))
                }
                ),
                H.rV.joystickControl.addReduxCase(m, (m,R)=>{
                    let {payload: {enabled: C}} = R;
                    void 0 !== C && (m.joystickState.enabled = C,
                    (0,
                    $.Ul)("joystick_disabled", C ? "0" : "1"))
                }
                ),
                m.addCase("game/LINK_OPEN", (m,R)=>{
                    let {link: C, msgKey: T} = R.payload;
                    T || (0,
                    $.fI)(C) ? (m.urlDisclaimer.isActive = !0,
                    m.urlDisclaimer.URL = C,
                    m.urlDisclaimer.msgKey = T) : (0,
                    $.T1)(C) ? window.location.href = C : window.open(C, "_blank")
                }
                ),
                m.addCase("game/GAME_OBJECT_MOUSEOVER", (m,R)=>{
                    let {mouse: C, text: T, style: L} = R.payload;
                    m.lookAtText = {
                        isActive: !!T,
                        text: T,
                        x: Math.round(C.x),
                        y: Math.round(C.y),
                        style: L
                    }
                }
                ),
                m.addCase("game/GAME_OBJECT_MOUSEOUT", m=>{
                    m.lookAtText = {
                        ...m.lookAtText,
                        isActive: !1
                    }
                }
                ),
                m.addCase("game/LIBRARY", (m,R)=>{
                    var C;
                    m.gameLibraryLoaded = !!R.payload,
                    (null === (C = q.Z.getTenants()) || void 0 === C ? void 0 : C[(0,
                    V.F5)()]) || (m.criticalMessage.text = "Unknown Realm...You could be waiting a long time.",
                    m.criticalMessage.isActive = !0,
                    m.gameLibraryLoaded = !1)
                }
                ),
                m.addCase("game/PLAYER_INVENTORY_CHANGE", (m,R)=>{
                    var C;
                    let {inventory: T} = R.payload;
                    T && (null === (C = m.player) || void 0 === C ? void 0 : C.full.inventory) && (m.player.full.inventory = T)
                }
                ),
                m.addCase("game/PLAYER_COIN_INVENTORY_CHANGE", (m,R)=>{
                    var C;
                    let {coinInventory: T} = R.payload;
                    T && (null === (C = m.player) || void 0 === C ? void 0 : C.full.coinInventory) && (m.player.full.coinInventory = T)
                }
                ),
                m.addCase("game/PLAYER_QUESTPROGRESS_ADDED", (m,R)=>{
                    var C;
                    let {quests: T} = R.payload;
                    T && (null === (C = m.player) || void 0 === C ? void 0 : C.full.quests) && (m.player.full.quests = T)
                }
                ),
                m.addCase("game/PLAYER_LEVEL_ADD", updatePlayerLevelReducer),
                m.addCase("game/PLAYER_LEVEL_CHANGE", updatePlayerLevelReducer),
                m.addCase("game/SVR_CANNOTCONNECT", (m,R)=>{
                    var C, T;
                    m.loading = !0,
                    m.connected = !1,
                    m.lookAtText.isActive = !1,
                    m.room.worldId = void 0,
                    m.room.mapId = void 0,
                    m.room.lastSavedAt = void 0,
                    m.criticalMessage.text = null === (C = R.payload) || void 0 === C ? void 0 : C.message,
                    (null === (T = R.payload) || void 0 === T ? void 0 : T.message) && (m.criticalMessage.isActive = !0)
                }
                ),
                m.addCase("game/NPC_SPEAKS", (m,R)=>{
                    let C = R.payload;
                    "function" != typeof C.forEach && (C = [C]);
                    let T = C.reduce((R,C)=>pushNPCDialog(m, C) || R, !1);
                    T ? (console.log("reloading string resources for missing dialog"),
                    G.ZP.reloadResources().then(()=>{
                        m.npc_dialog.isActive || nextNPCDialogGroup(m)
                    }
                    ).catch(console.error)) : m.npc_dialog.isActive || nextNPCDialogGroup(m)
                }
                ),
                m.addCase("game/PLAYER_ENERGY_CHANGE", (m,R)=>{
                    var C;
                    let {energy: T} = R.payload;
                    T && (null === (C = m.player) || void 0 === C ? void 0 : C.full.energy) && (m.player.full.energy = T)
                }
                ),
                m.addCase(B.b.fulfilled, (m,R)=>{
                    m.worlds = R.payload
                }
                ),
                m.addCase("game/PRESENT_FARM_DETAILS", m=>{
                    m.farmDetails.isActive = !0
                }
                ),
                m.addCase("game/DISMISS_FARM_DETAILS", m=>{
                    m.farmDetails.isActive = !1
                }
                ),
                m.addCase("game/PLAYER_EXP_CHANGE", (m,R)=>{
                    m.player && (m.player.full.levels = {
                        ...R.payload.levels
                    })
                }
                ),
                m.addCase("game/ROOM_LEVEL_ADD", updateRoomLevelReducer),
                m.addCase("game/ROOM_LEVEL_CHANGED", updateRoomLevelReducer),
                m.addCase("game/BOOKMARK_MAP", (m,R)=>{
                    var C;
                    let {mapId: T, bookmark: L, environ: U} = R.payload
                      , B = null === (C = m.player) || void 0 === C ? void 0 : C.full.bookmarks;
                    B && (B.bookmarkedMaps || (B.bookmarkedMaps = []),
                    L && T ? B.bookmarkedMaps.push({
                        mapId: T,
                        environ: U
                    }) : !L && T && (B.bookmarkedMaps = B.bookmarkedMaps.filter(m=>{
                        var R;
                        return (null !== (R = null == m ? void 0 : m.mapId) && void 0 !== R ? R : m) !== T
                    }
                    )))
                }
                ),
                m.addCase("game/".concat(H.fb.SET_TOS_ACCEPTED), m=>{
                    m.player && (m.player.full.tosVersion = W.sV)
                }
                ),
                m.addCase("game/".concat(H.fb.PLAYER_PET_CHANGE), (m,R)=>{
                    if (m.player) {
                        var C, T, L, U;
                        ((null === (C = m.player.full.pet) || void 0 === C ? void 0 : C.tokenId) !== (null === (T = R.payload.full.pet) || void 0 === T ? void 0 : T.tokenId) || (null === (L = m.player.full.pet) || void 0 === L ? void 0 : L.avatar.id) !== (null === (U = R.payload.full.pet) || void 0 === U ? void 0 : U.avatar.id)) && (m.petDetails.isVisible = !1),
                        m.player.core.petAvatar = R.payload.core.petAvatar,
                        m.player.full.pet = R.payload.full.pet
                    }
                }
                ),
                m.addCase("game/".concat(H.fb.CLIENT_CMD), (m,R)=>{
                    let C = R.payload;
                    "petmint" === C.detail && (m.petPicker.refresh = Date.now() + 9e5),
                    "realmmint" === C.detail && (m.realmrefresh = !0)
                }
                )
            }
        })
          , {mapSelected: K, roomWarpBegan: J, roomWarpLoading: X, dialogNext: Q, dialogBack: ee, togglePlayersOnline: et, setPlayerOnlineInfo: er, unsetPlayerOnlineInfo: en, setWorld: eo, logOut: ei, updateLookAt: ea, dismissURLDisclaimer: es, toggleModal: el, closeModal: ec, toggleQuestLog: eu, toggleSkills: ef, toggleSidePanel: ed, togglePetDetails: ep, closePetPicker: eh, openPetPicker: eg, activateSidePanel: em, activateFarmUpgradePanel: ey, deactivateFarmUpgradePanel: ev, openSettings: eb, closeSettings: eE, clearRealmRefresh: e_, updateTemplateName: eS} = Y.actions;
        R.ZP = Y.reducer
    },
    19445: function(m, R, C) {
        "use strict";
        C.d(R, {
            $Z: function() {
                return q
            },
            B6: function() {
                return selectedItemSelector
            },
            NS: function() {
                return storageWindowState
            },
            aq: function() {
                return W
            },
            hO: function() {
                return G
            },
            me: function() {
                return V
            },
            oi: function() {
                return Z
            },
            pc: function() {
                return activeRow
            },
            xM: function() {
                return selectedEquipmentIndexSelector
            }
        });
        var T = C(7406)
          , L = C(34377)
          , U = C(16562);
        let B = (0,
        T.oM)({
            name: "storage",
            initialState: {
                openStorage: {
                    isOpen: !1,
                    updated: 0
                },
                selectedEquipment: -1,
                selectedQty: 0,
                activeRow: 0
            },
            reducers: {
                closeStorage: m=>{
                    m.openStorage.isOpen = !1
                }
                ,
                setActiveRow: (m,R)=>{
                    let {payload: C} = R;
                    m.activeRow = C,
                    L.rV.inventory.changeActiveRow.emit({
                        activeRow: C
                    })
                }
                ,
                selectEquipment: (m,R)=>{
                    var C;
                    m.selectedEquipment = R.payload.selectedEquipment,
                    m.storageMid = R.payload.mid,
                    m.selectedItem = R.payload.item,
                    m.selectedQty = null !== (C = R.payload.quantity) && void 0 !== C ? C : 1
                }
                ,
                resetEquipment: m=>{
                    L.ZP.sendEvent(L.qM.RELEASE_FROM_CURSOR),
                    m.selectedEquipment = -1,
                    m.storageMid = void 0,
                    m.selectedItem = void 0
                }
                ,
                closeInventoryWindow: m=>{
                    m.openStorage.isOpen = !1
                }
                ,
                toggleInventoryWindow: m=>{
                    m.openStorage.isOpen && !m.openStorage.mid ? m.openStorage.isOpen = !1 : m.openStorage = {
                        isOpen: !0,
                        mid: void 0,
                        updated: 0
                    }
                }
                ,
                moveEquipmentSlot: (m,R)=>{}
            },
            extraReducers: m=>{
                m.addCase("game/ROOM_LOADED", (m,R)=>{
                    var C, T, L, U, B, $;
                    m.selectedEquipment = -1,
                    m.storageMid = void 0,
                    m.selectedItem = void 0,
                    (null === (L = R.payload.player) || void 0 === L ? void 0 : null === (T = L.full) || void 0 === T ? void 0 : null === (C = T.inventory) || void 0 === C ? void 0 : C.activeRow) >= 0 && (m.activeRow = null === ($ = R.payload.player) || void 0 === $ ? void 0 : null === (B = $.full) || void 0 === B ? void 0 : null === (U = B.inventory) || void 0 === U ? void 0 : U.activeRow),
                    m.openStorage = {
                        isOpen: !1,
                        updated: 0
                    }
                }
                ),
                m.addCase("game/".concat(L.fb.PLAYER_PET_CHANGE), m=>{
                    m.openStorage = {
                        isOpen: !1,
                        updated: 0
                    }
                }
                ),
                m.addCase("game/PLAYER_OPEN_STORAGE", (m,R)=>{
                    let C = R.payload.storageId;
                    C ? m.openStorage = {
                        isOpen: !0,
                        mid: C,
                        updated: 0
                    } : m.openStorage = {
                        isOpen: !1,
                        updated: 0
                    }
                }
                ),
                m.addCase("game/ENTITY_ADD", (m,R)=>{
                    let C = R.payload
                      , T = C.mapEntity_id;
                    m.openStorage.mid && T === m.openStorage.mid && (m.openStorage = {
                        isOpen: !0,
                        mid: C.mid,
                        updated: 0
                    })
                }
                ),
                m.addCase("game/ROOM_LEAVE", m=>{
                    m.openStorage = {
                        isOpen: !1,
                        updated: 0
                    },
                    m.selectedEquipment = -1,
                    m.selectedItem = void 0,
                    m.storageMid = void 0
                }
                ),
                m.addCase("game/ENTITY_UPDATE", (m,R)=>{
                    R.payload.mid === m.openStorage.mid && (m.openStorage.updated += 1)
                }
                ),
                m.addCase("game/PLAYER_INVENTORY_CHANGE", (m,R)=>{
                    let {inventory: C} = R.payload;
                    m.activeRow = C.activeRow,
                    function(m) {
                        let R;
                        if (-1 === m.selectedEquipment)
                            return;
                        let C = U.l.getInstance();
                        if (m.storageMid) {
                            if (m.storageMid === C.mapStorageId)
                                R = C.getMapStorage();
                            else {
                                let T = C.getEntityByUniqueId(m.storageMid);
                                if (null == T ? void 0 : T.storage)
                                    R = T.storage;
                                else {
                                    m.selectedEquipment = -1,
                                    m.storageMid = void 0;
                                    return
                                }
                            }
                        } else
                            R = C.currentPlayer.full.inventory;
                        if (null == R ? void 0 : R.slots) {
                            R = JSON.parse(JSON.stringify(R));
                            let C = Object.values(R.slots).find(R=>R.slot === m.selectedEquipment);
                            (null == C ? void 0 : C.quantity) ? m.selectedQty = C.quantity : (m.selectedEquipment = -1,
                            m.storageMid = void 0,
                            m.selectedItem = void 0,
                            L.ZP.postEvent(L.qM.RELEASE_FROM_CURSOR))
                        }
                    }(m)
                }
                )
            }
        })
          , selectedEquipmentIndexSelector = m=>({
            slot: m.storage.selectedEquipment,
            storage: m.storage.storageMid,
            quantity: m.storage.selectedQty
        })
          , selectedItemSelector = m=>{
            if (m.game.player)
                return m.storage.selectedItem
        }
          , storageWindowState = m=>m.storage.openStorage || m.game.petDetails.isVisible
          , activeRow = m=>m.storage.activeRow
          , {closeStorage: $, closeInventoryWindow: V, toggleInventoryWindow: H, resetEquipment: W, selectEquipment: q, setActiveRow: G, moveEquipmentSlot: Z} = B.actions;
        R.ZP = B.reducer
    },
    83171: function(m, R, C) {
        "use strict";
        C.d(R, {
            $b: function() {
                return playersOnlineSelector
            },
            $v: function() {
                return mapTypeSelector
            },
            $x: function() {
                return lookAtTextSelector
            },
            Ai: function() {
                return B
            },
            CO: function() {
                return petPickerSelector
            },
            GO: function() {
                return gameLoadingSelector
            },
            K7: function() {
                return gameWarpingSelector
            },
            Kx: function() {
                return soundSelector
            },
            NY: function() {
                return showSettingsSelector
            },
            Nz: function() {
                return dialogDataSelector
            },
            O$: function() {
                return showPlayersOnlineSelector
            },
            Od: function() {
                return mapSelector
            },
            PD: function() {
                return bookmarkedMapsSelector
            },
            QV: function() {
                return currentModal
            },
            Qk: function() {
                return showSidePanelSelector
            },
            RQ: function() {
                return U
            },
            SP: function() {
                return isLibraryLoadedSelector
            },
            TR: function() {
                return playerOnlineInfoSelector
            },
            U7: function() {
                return showIntroScreen
            },
            V4: function() {
                return roomLevelSelector
            },
            VQ: function() {
                return realmrefresh
            },
            Wj: function() {
                return templateNameSelector
            },
            Xt: function() {
                return worldSelector
            },
            _i: function() {
                return petDetailsSelector
            },
            b_: function() {
                return joystickSelector
            },
            cV: function() {
                return showSkillsSelector
            },
            ge: function() {
                return hasVip
            },
            gx: function() {
                return availableWorldsSelector
            },
            h2: function() {
                return showFarmUpgradePanel
            },
            iF: function() {
                return gameConnected
            },
            iN: function() {
                return URLDisclaimerSelector
            },
            lA: function() {
                return playerSelector
            },
            o7: function() {
                return showNftPicker
            },
            oJ: function() {
                return showDialogSelector
            },
            pB: function() {
                return dialogMessageSelector
            },
            pR: function() {
                return enhancedSelector
            },
            px: function() {
                return messageSelector
            },
            qB: function() {
                return showWorldPickerSelector
            },
            qb: function() {
                return playerLevelSelector
            },
            wk: function() {
                return gameNeedNfts
            },
            x6: function() {
                return hasModalSelector
            },
            xK: function() {
                return inventorySelector
            },
            y4: function() {
                return showQuestLogSelector
            },
            zY: function() {
                return maxBookmarksSizeSelector
            }
        });
        var T = C(68697)
          , L = C(64939);
        let isLibraryLoadedSelector = m=>m.game.gameLibraryLoaded
          , showDialogSelector = m=>m.game.npc_dialog.isActive
          , showPlayersOnlineSelector = m=>m.game.playersOnline
          , showQuestLogSelector = m=>m.game.questLog
          , showNftPicker = m=>"nftpicker" === m.game.currentModal
          , petPickerSelector = m=>m.game.petPicker
          , petDetailsSelector = m=>m.game.petDetails
          , dialogMessageSelector = m=>{
            var R;
            let {npc_dialog: C} = m.game;
            return {
                dialogMessage: C.messages && C.currentMessageIndex < C.messages.length ? C.messages[C.currentMessageIndex] : null,
                isLastDialog: (null === (R = C.messages) || void 0 === R ? void 0 : R.length) && C.currentMessageIndex === C.messages.length - 1,
                isFirstDialog: 0 === C.currentMessageIndex
            }
        }
          , hasModalSelector = m=>m.game.npc_dialog.isActive || m.game.currentModal || m.game.questLog.isVisible || m.game.petPicker.isVisible || m.game.petDetails.isVisible && m.game.petDetails.firstReveal || m.generalStore.isOpen || m.ui.imageDialog.isVisible && !m.ui.imageDialog.modeless || "none" !== m.marketplace.mode
          , lookAtTextSelector = m=>m.game.lookAtText
          , dialogDataSelector = m=>m.game.npc_dialog
          , messageSelector = m=>m.game.criticalMessage
          , playerSelector = m=>m.game.player
          , bookmarkedMapsSelector = m=>{
            var R;
            let C = null === (R = m.game.player) || void 0 === R ? void 0 : R.full.bookmarks;
            return (null == C ? void 0 : C.bookmarkedMaps) || []
        }
          , maxBookmarksSizeSelector = m=>{
            var R, C;
            return (null === (C = m.game.player) || void 0 === C ? void 0 : null === (R = C.full.bookmarks) || void 0 === R ? void 0 : R.size) || L.vn
        }
          , gameLoadingSelector = m=>m.game.loading || !m.auth.authenticated
          , gameWarpingSelector = m=>m.game.warping
          , gameNeedNfts = m=>m.game.needNfts
          , gameConnected = m=>!!m.game.connected && m.game.sessionId
          , inventorySelector = m=>{
            var R;
            return null === (R = m.game.player) || void 0 === R ? void 0 : R.full.inventory
        }
          , hasVip = m=>{
            var R;
            let C = new Date
              , T = m.game.player
              , L = (null == T ? void 0 : T.core.memberships) && (null === (R = T.core.memberships.vip) || void 0 === R ? void 0 : R.expiration) ? new Date(T.core.memberships.vip.expiration) : null;
            return !!L && C < L
        }
          , U = (0,
        T.P1)([inventorySelector], m=>R=>{
            if (!m || !m || !m.slots || 0 === Object.keys(m.slots).length)
                return 0;
            let C = Object.values(m.slots).filter(m=>m.item === R);
            if (!C.length)
                return 0;
            let T = C.reduce((m,R)=>m + R.quantity, 0);
            return T
        }
        )
          , soundSelector = m=>m.game.soundState
          , enhancedSelector = m=>m.game.enhancedState
          , joystickSelector = m=>m.game.joystickState
          , playersOnlineSelector = m=>m.game.playersOnline.updated
          , playerOnlineInfoSelector = m=>m.game.playerOnlineInfo
          , currentModal = m=>m.game.currentModal
          , playerLevelSelector = m=>R=>{
            var C;
            return (null === (C = m.game.player) || void 0 === C ? void 0 : C.full.levels)[R]
        }
          , roomLevelSelector = m=>R=>m.game.room.levels[R]
          , showWorldPickerSelector = m=>m.auth.authenticated && m.auth.username && m.auth.playerAvatar && !m.game.room.worldId
          , showIntroScreen = m=>!m.game.room.worldId
          , availableWorldsSelector = m=>m.game.worlds
          , mapSelector = m=>m.game.room.mapId
          , mapTypeSelector = m=>m.game.room.roomType
          , worldSelector = m=>m.game.room.worldId
          , templateNameSelector = m=>m.game.room.templateName
          , URLDisclaimerSelector = m=>m.game.urlDisclaimer
          , showSkillsSelector = m=>m.game.showSkills
          , showSettingsSelector = m=>m.game.showSettings
          , B = (0,
        T.P1)([m=>m.game.farmDetails, m=>m.mapEditor.roomSettings], (m,R)=>({
            ...m,
            farmName: R.name,
            ownership: R.ownership,
            ethAddress: R.ownerAddress,
            guild: R.guild
        }))
          , showSidePanelSelector = m=>m.game.sidePanel.isActive
          , showFarmUpgradePanel = m=>m.game.farmUpgradePanel.isActive
          , realmrefresh = m=>m.game.realmrefresh
    },
    54698: function(m, R, C) {
        "use strict";
        C.d(R, {
            tz: function() {
                return chatSelector
            },
            w2: function() {
                return $
            },
            wt: function() {
                return V
            }
        });
        var T = C(7406)
          , L = C(39135)
          , U = C(34377);
        function filterMessages(m) {
            let R = Date.now();
            m = m.filter(m=>"sys" !== m.creator_id || R - m.createdAt < 3e4);
            let C = m.length - 1500;
            return C > 0 && (m = m.slice(C)),
            m
        }
        function isSpecialCommand(m) {
            return "pixels-bot" === m.creator_id && m.message.startsWith("/COMMAND ")
        }
        function processCommand(m) {
            if ("pixels-bot" === m.creator_id) {
                if (Date.now() - m.createdAt > 12e5)
                    return;
                let R = m.message.substring(9);
                if (!R.startsWith("{"))
                    return U.ZP.postEvent(U.fb.SERVICE_COMMAND, {
                        command: "Notice",
                        message: R,
                        allowClose: !0,
                        allowReload: !0
                    }),
                    {
                        ...m,
                        message: R
                    };
                try {
                    let C = JSON.parse(R);
                    if (C.duration && Date.now() - m.createdAt > C.duration)
                        return;
                    if (U.ZP.postEvent(U.fb.SERVICE_COMMAND, C),
                    "notice" === C.command && C.message)
                        return {
                            ...m,
                            message: C.message
                        }
                } catch (m) {
                    console.log("invalid command", R, m)
                }
            }
        }
        let B = (0,
        T.oM)({
            name: "chatSlice",
            initialState: {
                isVisible: !1,
                openedNow: !1,
                newMessage: !1,
                chatEnabled: !0,
                messages: [{
                    createdAt: 0,
                    creator_id: "",
                    message: "Welcome To Pixels.",
                    creatorName: "Pixels Bot"
                }]
            },
            reducers: {
                closeChat: m=>{
                    m.isVisible = !1
                }
                ,
                toggleChat: m=>{
                    m.isVisible ? (m.isVisible = !1,
                    m.openedNow = !1) : (m.isVisible = !0,
                    m.openedNow = !0,
                    m.newMessage = !1)
                }
            },
            extraReducers: m=>{
                m.addCase("game/roomWarpBegan", m=>{
                    m.openedNow = !1
                }
                ),
                m.addCase("game/ROOM_LOADED", (m,R)=>{
                    m.messages = [{
                        createdAt: 0,
                        creator_id: "sys",
                        message: L.Z.t("chat.welcome", "Welcome To Pixels."),
                        creatorName: ""
                    }],
                    m.openedNow = !1,
                    R.payload.messages && R.payload.messages.filter(m=>!isSpecialCommand(m) || (processCommand(m),
                    !1)).forEach(R=>m.messages.push(R)),
                    m.chatEnabled = "private" !== R.payload.roomType && "tutorial" !== R.payload.roomType
                }
                ),
                m.addCase("game/PLAYER_REMOVED", (m,R)=>{
                    if (m.messages.slice(-20).some(m=>m.creator_id === R.payload.id)) {
                        let C = {
                            creator_id: "sys",
                            createdAt: new Date().getTime(),
                            message: L.Z.t("chat.leavemsg", "{PLAYER} left").replace("{PLAYER}", R.payload.username),
                            creatorName: ""
                        };
                        m.messages = filterMessages(m.messages),
                        m.messages.push(C)
                    }
                }
                ),
                m.addCase("game/CHAT_MESSAGE_RCV", (m,R)=>{
                    let C = R.payload;
                    (!isSpecialCommand(C) || (C = processCommand(C))) && (!m.isVisible && C.creatorName && (m.newMessage = !0),
                    m.messages = filterMessages(m.messages),
                    m.messages.push(C))
                }
                )
            }
        })
          , chatSelector = m=>m.chat
          , {toggleChat: $, closeChat: V} = B.actions;
        R.ZP = B.reducer
    },
    97761: function(m, R, C) {
        "use strict";
        C.d(R, {
            D2: function() {
                return openStoreSelector
            },
            IT: function() {
                return V
            },
            NN: function() {
                return $
            },
            WU: function() {
                return U
            },
            fD: function() {
                return B
            }
        });
        var T = C(7406);
        let L = (0,
        T.oM)({
            name: "generalStoreModal",
            initialState: {
                isOpen: !1,
                isLoading: !1
            },
            reducers: {
                openStoreModal: (m,R)=>{
                    m.storeId = R.payload,
                    m.isOpen = !0
                }
                ,
                closeStoreModal: m=>{
                    m.isOpen = !1
                }
                ,
                buyStoreItem: (m,R)=>{
                    m.isLoading = !0
                }
                ,
                sellStoreItem: (m,R)=>{
                    m.isLoading = !0
                }
            },
            extraReducers: m=>{
                m.addCase("game/ROOM_LEAVE", m=>{
                    m.isOpen = !1
                }
                )
            }
        })
          , openStoreSelector = m=>m.generalStore
          , {openStoreModal: U, closeStoreModal: B, buyStoreItem: $, sellStoreItem: V} = L.actions;
        R.ZP = L.reducer
    },
    95767: function(m, R, C) {
        "use strict";
        C.d(R, {
            AK: function() {
                return mailboxSelector
            },
            I_: function() {
                return $
            },
            Yy: function() {
                return mailCountSelector
            },
            e4: function() {
                return B
            }
        });
        var T = C(7406)
          , L = C(70247);
        function getActiveMail(m) {
            return m.filter(m=>{
                let R = m.itemId ? L.Z.getGameItem(m.itemId) : void 0
                  , C = m.currencyId ? L.Z.getGameCurrency(m.currencyId) : void 0;
                return !("item" === m.kind && m.itemId && !R || "coins" === m.kind && m.currencyId && !C)
            }
            )
        }
        let U = (0,
        T.oM)({
            name: "mailbox",
            initialState: {
                isVisible: !1,
                isLoading: !0,
                mail: [],
                mailCount: 0
            },
            reducers: {
                openMailbox: m=>{
                    m.isVisible = !0
                }
                ,
                closeMailbox: m=>{
                    m.isVisible = !1
                }
            },
            extraReducers: m=>{
                m.addCase("game/ROOM_LOADED", (m,R)=>{
                    var C, T;
                    (null === (C = R.payload.player) || void 0 === C ? void 0 : C.full) && (m.mailCount = null !== (T = R.payload.player.full.messages) && void 0 !== T ? T : 0)
                }
                ),
                m.addCase("game/MAIL_UPDATE", (m,R)=>{
                    void 0 !== R.payload.messages && (m.mailCount = R.payload.messages)
                }
                ),
                m.addCase("game/RECEIVE_MAIL", (m,R)=>{
                    m.isLoading = !1;
                    let C = getActiveMail(R.payload.mail);
                    m.mail = C
                }
                ),
                m.addCase("game/COLLECT_MAIL_ITEM_RESPONSE", (m,R)=>{
                    if (R.payload.success) {
                        let C = R.payload.mailId
                          , T = getActiveMail(m.mail.filter(m=>m._id != C));
                        m.mail = T
                    }
                }
                )
            }
        })
          , {openMailbox: B, closeMailbox: $} = U.actions
          , mailboxSelector = m=>m.mailbox
          , mailCountSelector = m=>m.mailbox.mailCount;
        R.ZP = U.reducer
    },
    76873: function(m, R, C) {
        "use strict";
        C.d(R, {
            CL: function() {
                return X
            },
            Cn: function() {
                return Q
            },
            DL: function() {
                return isEditorCategory
            },
            Ei: function() {
                return isOwnerSelector
            },
            Er: function() {
                return selectedBuilderElementSelector
            },
            LB: function() {
                return canOpenMapStorage
            },
            Mp: function() {
                return roomSettingsSelector
            },
            Mt: function() {
                return canEditMapSettings
            },
            Mz: function() {
                return J
            },
            PM: function() {
                return G
            },
            PR: function() {
                return Z
            },
            St: function() {
                return isModeSelector
            },
            T: function() {
                return canAccessStorage
            },
            TI: function() {
                return selectedObjectSelector
            },
            Vb: function() {
                return hasPermissionToBuild
            },
            Y7: function() {
                return editorCategory
            },
            _0: function() {
                return canEditMapMembers
            },
            a0: function() {
                return editorUpdated
            },
            aT: function() {
                return et
            },
            c6: function() {
                return Y
            },
            j6: function() {
                return K
            },
            pT: function() {
                return isMapEditorActiveSelector
            },
            pW: function() {
                return selectedEntitySelector
            },
            r5: function() {
                return er
            },
            sW: function() {
                return canEditMapSelector
            },
            v4: function() {
                return ee
            },
            xp: function() {
                return selectedTileSelector
            },
            zl: function() {
                return roomRestrictionsSelector
            }
        });
        var T = C(7406)
          , L = C(36968)
          , U = C.n(L)
          , B = C(41609)
          , $ = C.n(B)
          , V = C(70247)
          , H = C(34377);
        let W = {
            isActive: !1,
            category: "objects",
            mode: "off",
            roomSettings: {
                name: "",
                ownerAddress: void 0,
                members: [],
                restrictions: {
                    allowedNFTs: [],
                    allowedAddresses: []
                },
                ownership: {
                    forSale: !1,
                    forRent: !1
                }
            },
            updateVersion: 1
        }
          , q = (0,
        T.oM)({
            name: "mapEditor",
            initialState: {
                ...W
            },
            reducers: {
                setMode: (m,R)=>{
                    m.mode = R.payload,
                    m.selectedItem = void 0
                }
                ,
                setCategory: (m,R)=>{
                    m.category = R.payload,
                    m.selectedItem = void 0
                }
                ,
                paintObject: (m,R)=>{
                    R.payload ? m.selectedItem = {
                        type: "object",
                        object: {
                            def: {
                                ...R.payload
                            }
                        }
                    } : m.selectedItem = void 0,
                    H.rV.attachToCursor.emit(R.payload ? {
                        type: "object",
                        config: {
                            object: R.payload
                        }
                    } : void 0)
                }
                ,
                paintEntity: (m,R)=>{
                    R.payload ? m.selectedItem = {
                        type: "entity",
                        entity: {
                            def: {
                                ...R.payload
                            }
                        }
                    } : m.selectedItem = void 0,
                    H.rV.attachToCursor.emit(R.payload ? {
                        type: "entity",
                        config: {
                            entity: R.payload
                        }
                    } : void 0)
                }
                ,
                selectObject: (m,R)=>{
                    if (null == R ? void 0 : R.payload) {
                        let C = R.payload.object;
                        m.category = (null == C ? void 0 : C.wall) ? "walls" : "objects",
                        m.selectedItem = {
                            type: "object",
                            object: {
                                def: {
                                    ...C
                                },
                                config: {
                                    ...R.payload.config
                                },
                                configDirty: R.payload.configDirty
                            }
                        }
                    } else
                        m.selectedItem = void 0
                }
                ,
                patchObjectConfig: (m,R)=>{
                    var C, T;
                    (null === (C = m.selectedItem) || void 0 === C ? void 0 : C.type) === "object" ? (m.selectedItem.object.config = {
                        ...m.selectedItem.object.config,
                        ...R.payload
                    },
                    m.selectedItem.object.configDirty = !0) : (null === (T = m.selectedItem) || void 0 === T ? void 0 : T.type) === "entity" && (m.selectedItem.entity.config = {
                        ...m.selectedItem.entity.config,
                        ...R.payload
                    })
                }
                ,
                updateObject: (m,R)=>{
                    var C;
                    (null === (C = m.selectedItem) || void 0 === C ? void 0 : C.type) === "object" && R.payload && (m.selectedItem.object.configDirty = !1)
                }
                ,
                selectEntity: (m,R)=>{
                    if (!R.payload) {
                        m.selectedItem = void 0;
                        return
                    }
                    m.selectedItem = {
                        type: "entity",
                        entity: {
                            def: {
                                ...R.payload.entity
                            },
                            config: R.payload.config
                        }
                    }
                }
                ,
                selectTile: (m,R)=>{
                    if (!R.payload) {
                        m.selectedItem = void 0;
                        return
                    }
                    m.mode = "paint",
                    m.selectedItem = {
                        type: "tile",
                        tile: {
                            ...R.payload
                        }
                    },
                    H.rV.attachToCursor.emit(R.payload ? {
                        type: "tile",
                        config: {
                            tile: R.payload
                        }
                    } : void 0)
                }
                ,
                updateRoomSettings: (m,R)=>{
                    let C = {
                        ...m.roomSettings
                    };
                    U()(C, R.payload.path, R.payload.value),
                    m.roomSettings = C
                }
            },
            extraReducers: m=>{
                H.rV.editor.on.addReduxCase(m, m=>{
                    m.isActive = !0,
                    m.category = "objects"
                }
                ),
                H.rV.editor.off.addReduxCase(m, m=>{
                    m.isActive = !1,
                    m.mode = "off",
                    m.selectedItem = void 0
                }
                ),
                m.addCase("game/SERVER_BUILD_NODE", (m,R)=>{
                    var C, T, L, U, B, $;
                    let H = R.payload;
                    if ("object" === H.type && (null === (C = m.selectedItem) || void 0 === C ? void 0 : C.type) === "object" && (null === (L = m.selectedItem.object) || void 0 === L ? void 0 : null === (T = L.config) || void 0 === T ? void 0 : T._id) === H._id) {
                        if ("update" === H.action) {
                            let R = V.Z.getMapObject(H._id);
                            R && (m.selectedItem.object.config.x = R.x,
                            m.selectedItem.object.config.y = R.y,
                            m.selectedItem.object.config.flip = R.flip)
                        } else
                            "remove" === H.action && (m.selectedItem = void 0)
                    } else
                        "entity" === H.type && (null === (U = m.selectedItem) || void 0 === U ? void 0 : U.type) === "entity" && (null === ($ = m.selectedItem.entity) || void 0 === $ ? void 0 : null === (B = $.config) || void 0 === B ? void 0 : B.mid) === H._id && "remove" === H.action && (m.selectedItem = void 0);
                    m.updateVersion += 1
                }
                ),
                m.addCase("game/ENTITY_UPDATE", (m,R)=>{
                    var C, T, L;
                    if ((null === (C = m.selectedItem) || void 0 === C ? void 0 : C.type) === "entity") {
                        let C = R.payload;
                        C.mid === (null === (L = m.selectedItem.entity) || void 0 === L ? void 0 : null === (T = L.config) || void 0 === T ? void 0 : T.mid) && (m.selectedItem.entity.config = C)
                    }
                }
                ),
                m.addCase("game/ROOM_NAME_CHANGED", (m,R)=>{
                    m.roomSettings.name = R.payload,
                    m.updateVersion += 1
                }
                ),
                m.addCase("game/ROOM_OWNER_CHANGED", (m,R)=>{
                    var C;
                    m.roomSettings.ownerAddress = null === (C = R.payload) || void 0 === C ? void 0 : C.toLowerCase()
                }
                ),
                m.addCase("game/ROOM_PERMISSIONS_CHANGED", (m,R)=>{
                    m.roomSettings.permissions = R.payload
                }
                ),
                m.addCase("game/ROOM_GUILD_CHANGED", (m,R)=>{
                    m.roomSettings.guild = R.payload
                }
                ),
                m.addCase("game/ROOM_RESTRICTIONS_CHANGED", (m,R)=>{
                    m.roomSettings.restrictions = R.payload
                }
                ),
                m.addCase("game/ROOM_OWNERSHIP_CHANGED", (m,R)=>{
                    m.roomSettings.ownership = R.payload
                }
                ),
                m.addCase("game/ROOM_MEMBERS_CHANGED", (m,R)=>{
                    m.roomSettings.members = R.payload
                }
                ),
                m.addCase("game/ROOM_LEAVE", m=>{
                    m.roomSettings = {
                        ...W.roomSettings
                    },
                    m.isActive = !1,
                    m.mode = "off",
                    m.selectedItem = void 0,
                    m.updateVersion += 1
                }
                )
            }
        })
          , {setMode: G, setCategory: Z, paintObject: Y, selectObject: K, paintEntity: J, selectEntity: X, patchObjectConfig: Q, updateObject: ee, selectTile: et, updateRoomSettings: er} = q.actions;
        R.ZP = q.reducer;
        let isMapEditorActiveSelector = m=>m.mapEditor.isActive
          , isModeSelector = m=>R=>R === m.mapEditor.mode
          , editorCategory = m=>m.mapEditor.category
          , isEditorCategory = m=>R=>R === m.mapEditor.category
          , selectedBuilderElementSelector = m=>{
            let {selectedItem: R} = m.mapEditor;
            return {
                selectedItem: R
            }
        }
          , editorUpdated = m=>m.mapEditor.updateVersion
          , canEditMapSelector = m=>{
            var R;
            return !!(null === (R = m.game.player) || void 0 === R ? void 0 : R.full.godmode)
        }
        ;
        function checkRole(m, R) {
            return !!m && !!R && 0 !== R.length && m.some(m=>R.includes(m.toUpperCase()))
        }
        let canEditMapSettings = m=>{
            var R;
            let C = getPlayerRoles(m);
            return checkRole(null === (R = m.mapEditor.roomSettings.permissions) || void 0 === R ? void 0 : R.editFarmConfig, C)
        }
          , canEditMapMembers = m=>{
            var R;
            let C = getPlayerRoles(m);
            return checkRole(null === (R = m.mapEditor.roomSettings.permissions) || void 0 === R ? void 0 : R.editMapMembers, C)
        }
          , hasPermissionToBuild = m=>{
            var R;
            let C = getPlayerRoles(m);
            return checkRole(null === (R = m.mapEditor.roomSettings.permissions) || void 0 === R ? void 0 : R.build, C)
        }
          , canOpenMapStorage = m=>{
            var R;
            let C = getPlayerRoles(m);
            return !!C && 0 !== C.length && (!!C.includes("OWNER") || checkRole(null === (R = m.mapEditor.roomSettings.permissions) || void 0 === R ? void 0 : R.surplusAccess, C))
        }
          , canAccessStorage = m=>{
            var R;
            let C = getPlayerRoles(m);
            return !!C && 0 !== C.length && (!!C.includes("OWNER") || checkRole(null === (R = m.mapEditor.roomSettings.permissions) || void 0 === R ? void 0 : R.storageAccess, C))
        }
          , isOwnerSelector = m=>{
            var R, C, T;
            if (!$()(m.mapEditor.roomSettings.ownerAddress)) {
                let R = !!(null === (T = m.game.player) || void 0 === T ? void 0 : T.full.cryptoWallets.find(R=>{
                    var C;
                    return R.address.toLowerCase() === (null === (C = m.mapEditor.roomSettings.ownerAddress) || void 0 === C ? void 0 : C.toLowerCase())
                }
                ));
                if (R)
                    return R
            }
            return !!((null === (R = m.game.room) || void 0 === R ? void 0 : R.mapId) && (null === (C = m.game.player) || void 0 === C ? void 0 : C.full.farms) && m.game.player.full.farms.includes(m.game.room.mapId))
        }
          , getPlayerRoles = m=>{
            var R, C, T;
            if (null === (R = m.game.player) || void 0 === R ? void 0 : R.full.godmode)
                return ["GOD", "OWNER", "MANAGER", "ANY"];
            if (isOwnerSelector(m))
                return ["OWNER", "MANAGER", "ANY"];
            if (m.mapEditor.roomSettings.members && m.mapEditor.roomSettings.members.length > 0) {
                let R = null === (T = m.game.player) || void 0 === T ? void 0 : null === (C = T.core.mid) || void 0 === C ? void 0 : C.toLowerCase()
                  , L = m.mapEditor.roomSettings.members.find(C=>{
                    var T, L;
                    return (null === (T = m.game.player) || void 0 === T ? void 0 : T.core.mid) && (null === (L = C.member) || void 0 === L ? void 0 : L.toLowerCase()) === R
                }
                );
                if (null == L ? void 0 : L.roles)
                    return [...L.roles.map(m=>m.toUpperCase()), "ANY"]
            }
            return ["ANY"]
        }
          , selectedObjectSelector = m=>{
            var R, C;
            return (null === (R = m.mapEditor.selectedItem) || void 0 === R ? void 0 : R.type) === "object" ? null === (C = m.mapEditor.selectedItem) || void 0 === C ? void 0 : C.object : void 0
        }
          , selectedTileSelector = m=>{
            var R, C;
            return (null === (R = m.mapEditor.selectedItem) || void 0 === R ? void 0 : R.type) === "tile" ? null === (C = m.mapEditor.selectedItem) || void 0 === C ? void 0 : C.tile : void 0
        }
          , selectedEntitySelector = m=>{
            var R, C;
            return (null === (R = m.mapEditor.selectedItem) || void 0 === R ? void 0 : R.type) === "entity" ? null === (C = m.mapEditor.selectedItem) || void 0 === C ? void 0 : C.entity : void 0
        }
          , roomSettingsSelector = m=>m.mapEditor.roomSettings
          , roomRestrictionsSelector = m=>m.mapEditor.roomSettings.restrictions
    },
    71156: function(m, R, C) {
        "use strict";
        C.d(R, {
            SY: function() {
                return marketplaceIniitalCategorySelector
            },
            Uj: function() {
                return H
            },
            eo: function() {
                return V
            },
            ft: function() {
                return $
            },
            j4: function() {
                return B
            },
            oG: function() {
                return isMarketplaceListingsOpenSelector
            },
            ww: function() {
                return isMarketplaceOpenSelector
            },
            yW: function() {
                return marketplacePurchaseSelector
            }
        });
        var T = C(7406)
          , L = C(34377);
        let U = (0,
        T.oM)({
            name: "marketplace",
            initialState: {
                mode: "none"
            },
            reducers: {
                openMarketplace: (m,R)=>{
                    m.mode = "marketplace",
                    m.initialCategory = R.payload.initialCategory
                }
                ,
                openListings: m=>{
                    m.mode = "listings"
                }
                ,
                close: m=>{
                    m.mode = "none"
                }
                ,
                handlePurchaseSuccess: m=>{
                    delete m.purchase
                }
            },
            extraReducers: m=>{
                m.addCase("game/".concat(L.fb.MARKETPLACE_SEND), (m,R)=>{
                    let {payload: C} = R;
                    "purchase" === C.subcommand && (m.purchase = "pending")
                }
                ),
                m.addCase("game/".concat(L.fb.MARKETPLACE_RECEIVE), (m,R)=>{
                    let {payload: C} = R;
                    switch (C.type) {
                    case "purchase-success":
                        {
                            let {...R} = C;
                            m.purchase = R;
                            break
                        }
                    case "purchase-failure":
                        delete m.purchase;
                        break;
                    default:
                        throw Error("Unexpected value ".concat(C))
                    }
                }
                )
            }
        })
          , isMarketplaceOpenSelector = m=>"marketplace" === m.marketplace.mode
          , marketplaceIniitalCategorySelector = m=>m.marketplace.initialCategory
          , isMarketplaceListingsOpenSelector = m=>"listings" === m.marketplace.mode
          , marketplacePurchaseSelector = m=>m.marketplace.purchase
          , {openMarketplace: B, openListings: $, close: V, handlePurchaseSuccess: H} = U.actions;
        R.ZP = U.reducer
    },
    77497: function(m, R, C) {
        "use strict";
        C.d(R, {
            HS: function() {
                return Z
            },
            W_: function() {
                return q
            },
            wm: function() {
                return G
            }
        });
        var T = C(34377)
          , L = C(16562)
          , U = C(46787)
          , B = C(15103)
          , $ = C(80535)
          , V = C(86731);
        let H = (0,
        B.cn)([])
          , W = 1
          , q = (0,
        B.cn)(null, (m,R,C)=>{
            let T = m(H).slice();
            C.forEach(m=>{
                var R, C, L;
                if (m.deduplicationKey) {
                    let R = T.findIndex(R=>{
                        let {deduplicationKey: C} = R;
                        return m.deduplicationKey === C
                    }
                    )
                      , L = T[R];
                    if (L) {
                        T.splice(R, 1, {
                            ...L,
                            duplicates: (null !== (C = L.duplicates) && void 0 !== C ? C : 1) + 1
                        });
                        return
                    }
                }
                if (m.stacking && (null === (R = m.text) || void 0 === R ? void 0 : R[m.stacking.textPropertyName]) !== void 0) {
                    let {key: R, textPropertyName: C} = m.stacking
                      , U = null === (L = m.text) || void 0 === L ? void 0 : L[C];
                    if (void 0 !== U) {
                        let m = T.findIndex(m=>{
                            let {stacking: C} = m;
                            return (null == C ? void 0 : C.key) === R
                        }
                        )
                          , L = T[m];
                        if (null == L ? void 0 : L.text) {
                            let R = {
                                ...L,
                                text: {
                                    ...L.text
                                }
                            };
                            void 0 === R.text[C] ? R.text[C] = U : R.text[C] += U,
                            T.splice(m, 1, R);
                            return
                        }
                    }
                }
                T.push({
                    ...m,
                    reactKey: ++W
                })
            }
            ),
            R(H, T)
        }
        )
          , G = (0,
        B.cn)(m=>m(H).find(R=>"trade" !== R.source || m(U.eH)))
          , Z = (0,
        B.cn)(null, (m,R,C)=>{
            let T = m(H)
              , L = C ? T.findIndex(m=>m.reactKey === C.reactKey) : -1;
            R(H, T.slice(Math.max(L + 1, 1)))
        }
        );
        (0,
        V.H)("game/".concat(T.fb.ROOM_LEAVE), ()=>{
            $.e.set(H, [])
        }
        ),
        (0,
        V.H)("game/".concat(T.fb.TRADE_RECEIVE), m=>{
            if ("request" === m.subcommand) {
                let R = L.l.getInstance()
                  , C = R.getSessionId()
                  , T = Object.keys(m.trade.players).find(m=>m !== C)
                  , U = T ? L.l.getInstance().getPlayerCoreBySessionId(T) : void 0;
                $.e.set(q, [{
                    source: "trade",
                    text: {
                        id: "notifications.trade.request",
                        name: null == U ? void 0 : U.username
                    },
                    deduplicationKey: "notifications.trade.request"
                }])
            }
        }
        )
    },
    69959: function(m, R, C) {
        "use strict";
        C.d(R, {
            Vu: function() {
                return U
            },
            _V: function() {
                return B
            },
            pM: function() {
                return plotOpenSelector
            }
        });
        var T = C(7406);
        let L = (0,
        T.oM)({
            name: "plotSlice",
            initialState: {
                isVisible: !1
            },
            reducers: {
                openPlot: m=>{
                    m.isVisible = !0
                }
                ,
                closePlot: m=>{
                    m.isVisible = !1
                }
            },
            extraReducers: m=>{
                m.addCase("game/ROOM_LEAVE", m=>{
                    m.isVisible = !1
                }
                )
            }
        })
          , plotOpenSelector = m=>m.plot.isVisible
          , {openPlot: U, closePlot: B} = L.actions;
        R.ZP = L.reducer
    },
    87434: function(m, R, C) {
        "use strict";
        C.d(R, {
            Hg: function() {
                return B
            },
            fp: function() {
                return reportTargetMidSelector
            },
            ht: function() {
                return U
            },
            op: function() {
                return reportWindowOpenSelector
            }
        });
        var T = C(7406);
        let L = (0,
        T.oM)({
            name: "reportSlice",
            initialState: {
                open: !1,
                mid: ""
            },
            reducers: {
                openReportPlayerWindow: (m,R)=>{
                    let {payload: C} = R;
                    m.open = !0,
                    m.mid = C.mid
                }
                ,
                closeReportPlayerWindow: m=>{
                    m.open = !1,
                    m.mid = ""
                }
            }
        })
          , reportWindowOpenSelector = m=>m.report.open
          , reportTargetMidSelector = m=>m.report.mid
          , {openReportPlayerWindow: U, closeReportPlayerWindow: B} = L.actions;
        R.ZP = L.reducer
    },
    6354: function(m, R, C) {
        "use strict";
        C.d(R, {
            v: function() {
                return B
            }
        });
        var T = C(15103)
          , L = C(34377)
          , U = C(80535);
        let B = (0,
        T.cn)({}, (m,R,C)=>{
            if ("clear" === C) {
                R(B, {});
                return
            }
            R(B, {
                ...m(B),
                ...C
            })
        }
        );
        L.rV.sellOrders.fill.subscribe(m=>{
            var R;
            let {storeId: C, sellOrderIndex: T} = m
              , {nextReset: L, orders: $} = null !== (R = U.e.get(B)[C]) && void 0 !== R ? R : {
                nextReset: 0,
                orders: []
            }
              , V = $.slice();
            V[T] = {
                ...V[T],
                completedAt: -1
            },
            U.e.set(B, {
                [C]: {
                    nextReset: L,
                    orders: V
                }
            })
        }
        );
        let $ = [];
        L.rV.sellOrders.fetch.subscribe(m=>{
            let {storeId: R} = m;
            U.e.set(B, {
                [R]: {
                    nextReset: 0,
                    orders: $,
                    ...U.e.get(B)[R],
                    fetching: !0
                }
            })
        }
        )
    },
    46787: function(m, R, C) {
        "use strict";
        C.d(R, {
            $6: function() {
                return tradeValueSelector
            },
            KU: function() {
                return tradeIdSelector
            },
            V: function() {
                return H
            },
            eH: function() {
                return $
            },
            gJ: function() {
                return q
            },
            sG: function() {
                return tradeSelector
            },
            sU: function() {
                return W
            }
        });
        var T = C(7406)
          , L = C(34377)
          , U = C(80535)
          , B = C(15103);
        let $ = (0,
        B.cn)(!1)
          , V = (0,
        T.oM)({
            name: "tradeSlice",
            initialState: {
                trade: null,
                tradeId: "",
                tradeValue: null,
                otherTradeValue: null
            },
            reducers: {
                acceptTrade: m=>{
                    U.e.set($, !1)
                }
                ,
                adjustTrade: (m,R)=>{}
                ,
                dropTradeItem: (m,R)=>{}
            },
            extraReducers: m=>{
                m.addCase("game/".concat(L.fb.TRADE_RECEIVE), (m,R)=>{
                    let {payload: C} = R;
                    switch (C.subcommand) {
                    case "request":
                    case "update":
                        var T, L;
                        m.tradeId && m.tradeId !== C.tradeId && console.warn("Server sending new trade while another trade is ongoing", C.tradeId),
                        "request" === C.subcommand && U.e.set($, !0),
                        m.tradeValue = null !== (T = C.tradeValue) && void 0 !== T ? T : 0,
                        m.otherTradeValue = null !== (L = C.otherTradeValue) && void 0 !== L ? L : 0,
                        m.trade = C.trade,
                        m.tradeId = C.tradeId;
                        break;
                    case "close":
                        m.tradeId === C.tradeId && (m.trade = null,
                        m.tradeId = "",
                        U.e.set($, !1));
                        break;
                    default:
                        throw Error("Unexpected value ".concat(C))
                    }
                }
                )
            }
        })
          , tradeSelector = m=>m.trade.trade
          , tradeValueSelector = m=>({
            tradeValue: m.trade.tradeValue,
            otherTradeValue: m.trade.otherTradeValue
        })
          , tradeIdSelector = m=>m.trade.tradeId
          , {acceptTrade: H, adjustTrade: W, dropTradeItem: q} = V.actions;
        R.ZP = V.reducer
    },
    69140: function(m, R, C) {
        "use strict";
        C.d(R, {
            Bd: function() {
                return q
            },
            Dw: function() {
                return B
            },
            Ep: function() {
                return confirmDialogSelector
            },
            JR: function() {
                return entityInputSelector
            },
            OH: function() {
                return popupSelector
            },
            VG: function() {
                return Z
            },
            aA: function() {
                return $
            },
            aP: function() {
                return G
            },
            e4: function() {
                return V
            },
            ex: function() {
                return Y
            },
            gs: function() {
                return hiddenHUD
            },
            j2: function() {
                return portalSelector
            },
            rg: function() {
                return screenSize
            },
            tD: function() {
                return U
            },
            vV: function() {
                return H
            },
            wR: function() {
                return W
            }
        });
        var T = C(7406);
        let L = (0,
        T.oM)({
            name: "ui",
            initialState: {
                portalDialog: {
                    isVisible: !1,
                    mid_portal: "",
                    tenant: "pixels"
                },
                entityInput: {
                    isVisible: !1
                },
                imageDialog: {
                    isVisible: !1,
                    isIframe: !1
                },
                confirmDialog: {
                    isVisible: !1
                },
                hideHUD: !1
            },
            reducers: {
                gameDimension: (m,R)=>{
                    m.dimension = R.payload
                }
                ,
                portalConfig: (m,R)=>{
                    m.portalDialog = {
                        isVisible: !0,
                        mid_portal: R.payload.source,
                        tenant: R.payload.tenant,
                        mode: R.payload.mode || "infiniportal"
                    }
                }
                ,
                showHUD: (m,R)=>{
                    m.hideHUD = !R.payload
                }
                ,
                portalClose: m=>{
                    m.portalDialog = {
                        isVisible: !1,
                        mid_portal: "",
                        tenant: "pixels"
                    }
                }
                ,
                entityInput: (m,R)=>{
                    m.entityInput = {
                        isVisible: !0,
                        mid_portal: R.payload.source,
                        prompt: R.payload.prompt,
                        config: R.payload.config
                    }
                }
                ,
                entityInputClose: m=>{
                    m.entityInput = {
                        isVisible: !1
                    }
                }
                ,
                confirmDialog: (m,R)=>{
                    m.confirmDialog = {
                        isVisible: !0,
                        ...R.payload
                    }
                }
                ,
                confirmDialogClose: m=>{
                    m.confirmDialog = {
                        isVisible: !1
                    }
                }
                ,
                imagePopup: (m,R)=>{
                    m.imageDialog = {
                        isVisible: !0,
                        url: R.payload.url,
                        isIframe: R.payload.isIframe || !1,
                        modeless: !0 === R.payload.modeless,
                        vertical: !0 === R.payload.vertical
                    }
                }
                ,
                imagePopupClose: m=>{
                    m.imageDialog = {
                        isVisible: !1,
                        isIframe: !1
                    }
                }
            },
            extraReducers: m=>{
                m.addCase("game/ROOM_LOADED", m=>{
                    m.portalDialog = {
                        isVisible: !1,
                        mid_portal: "",
                        tenant: "pixels"
                    },
                    m.entityInput.isVisible = !1,
                    m.imageDialog.isVisible = !1,
                    m.imageDialog.isIframe = !1,
                    m.hideHUD = !1
                }
                )
            }
        })
          , {gameDimension: U, showHUD: B, portalConfig: $, portalClose: V, imagePopup: H, imagePopupClose: W, entityInput: q, entityInputClose: G, confirmDialog: Z, confirmDialogClose: Y} = L.actions
          , portalSelector = m=>m.ui.portalDialog
          , popupSelector = m=>m.ui.imageDialog
          , entityInputSelector = m=>m.ui.entityInput
          , confirmDialogSelector = m=>m.ui.confirmDialog
          , hiddenHUD = m=>m.ui.hideHUD
          , screenSize = m=>m.ui.dimension;
        R.ZP = L.reducer
    },
    80535: function(m, R, C) {
        "use strict";
        let T, L, U;
        C.d(R, {
            e: function() {
                return eT
            },
            h: function() {
                return eC
            }
        });
        var B = C(7406)
          , $ = C(86731)
          , V = C(34377)
          , H = C(69140)
          , W = C(97761)
          , q = C(76873);
        let G = {
            [H.tD.type]: {
                event: V.Vh.RESIZE
            },
            [W.NN.type]: {
                event: V.Yi.BUY_STORE_ITEM
            },
            [W.IT.type]: {
                event: V.Yi.SELL_STORE_ITEM
            },
            [q.PM.type]: {
                event: V.qM.SET_MODE
            },
            [q.PR.type]: {
                event: V.qM.SET_CATEGORY
            },
            [q.v4.type]: {
                event: V.qM.BUILD_OBJECT
            }
        };
        Object.entries(G).forEach(m=>{
            let[R,C] = m;
            (0,
            $.H)(R, m=>{
                V.ZP.sendEvent(C.event, C.adapter ? C.adapter(m) : m)
            }
            )
        }
        );
        var Z = C(34256)
          , Y = C(92217)
          , K = C(89733)
          , J = C(16562);
        (0,
        $.H)(Z.uy.type, (m,R)=>{
            (async()=>{
                await V.ZP.init(),
                await K.Z.initGame(),
                await K.Z.initRoom({
                    ...m,
                    transition: m.snap ? "snap" : "intro"
                })
            }
            )()
        }
        ),
        (0,
        $.H)(Z.Hi.type, (m,R)=>{
            (async()=>{
                try {
                    let C = await K.Z.loadLibraries(m.mapId);
                    R.dispatch({
                        type: "game/LIBRARY",
                        payload: !!C
                    })
                } catch (m) {
                    R.dispatch({
                        type: "game/SVR_CANNOTCONNECT",
                        payload: {
                            message: ["mapLoadFailed", "Error Loading Map"]
                        }
                    })
                }
            }
            )()
        }
        ),
        (0,
        $.H)(Y.iM.type, (m,R)=>{
            m.mapId && R.dispatch((0,
            Z.Hi)({
                mapId: m.mapId,
                lastSavedAt: m.lastSavedAt
            }))
        }
        ),
        (0,
        $.H)(Y.z1.type, (m,R)=>{
            m.mapId && R.dispatch((0,
            Z.Hi)({
                mapId: m.mapId,
                lastSavedAt: m.lastSavedAt
            }))
        }
        ),
        (0,
        $.H)(Z.ni.type, ()=>{
            (async()=>{
                await K.Z.killScene();
                let m = J.l.getInstance();
                await m.disconnect()
            }
            )()
        }
        );
        var X = C(83171)
          , Q = C(83928)
          , ee = C(79750)
          , et = C(70247)
          , er = C(39135);
        let navigateRoad = m=>"left" === m ? J.l.getInstance().peekLeftMap() : "right" === m ? J.l.getInstance().peekRightMap() : m
          , getTransition = (m,R,C)=>{
            let T = null == m ? void 0 : m.match(/\d+$/)
              , L = null == R ? void 0 : R.match(/\d+$/);
            if (!T && !L)
                return "quick";
            let U = "quick";
            if (C) {
                let m = C.split(",");
                "right" === m[0] ? U = "roadleft" : "left" === m[0] && (U = "roadright")
            }
            return T && L && T[0] === L[0] ? "quick" : U
        }
          , updateMapName = (m,R)=>{
            let C = null == m ? void 0 : m.match(/\d+$/);
            return (null == R ? void 0 : R.indexOf("*")) !== -1 ? R = R.replace("*", C ? C[0] : "") : ["left", "right"].includes(R) && (R = navigateRoad(R)),
            (0,
            Q.En)(R)
        }
          , loadTenant = async m=>{
            (0,
            ee.q4)(m) && (await (0,
            er.W)(!0),
            et.Z.clearGameLibrary(),
            await et.Z.loadLibraries())
        }
          , checkMapTenant = async(m,R)=>{
            var C, T, L;
            let U = (0,
            ee.GU)()
              , B = null !== (T = null == m ? void 0 : null === (C = m.tenants) || void 0 === C ? void 0 : C[0]) && void 0 !== T ? T : "pixels";
            if (B !== U.name && (await loadTenant(B),
            (U = (0,
            ee.GU)()).tutorialQuest && U.tutorialMap)) {
                let m = null === (L = R.full.quests) || void 0 === L ? void 0 : L[U.tutorialQuest];
                if (!(null == m ? void 0 : m.isComplete))
                    return U.tutorialMap
            }
            return m.id
        }
          , backupWarp = (m,R)=>{
            clearTimeout(T),
            m.dispatch((0,
            Z.tD)({
                abort: !0
            })),
            K.Z.unfreezeRoom(R)
        }
        ;
        (0,
        $.H)("game/ROOM_WARP", (m,R)=>{
            let C = R.getState()
              , U = (0,
            X.Xt)(C)
              , B = (0,
            X.Od)(C)
              , $ = (0,
            X.K7)(C)
              , H = updateMapName(B, m.mapId)
              , W = getTransition(B, H, m.spawn)
              , q = (0,
            X.lA)(C);
            if (q) {
                if (!$ && !m.abort && m.mapId && U) {
                    R.dispatch((0,
                    Z.tD)({})),
                    V.rV.editor.off.emit(),
                    console.log("warp to ".concat(H)),
                    K.Z.freezeRoom(W),
                    L = m.source;
                    let C = et.Z.loadMap(H);
                    T = setTimeout(async()=>{
                        let B;
                        T = void 0,
                        L = void 0;
                        try {
                            B = await C
                        } catch (m) {
                            backupWarp(R, W);
                            return
                        }
                        if (!B) {
                            backupWarp(R, W);
                            return
                        }
                        K.Z.pauseRoom(),
                        R.dispatch((0,
                        Z.Fd)({
                            ...m,
                            mapId: H
                        }));
                        try {
                            let R = J.l.getInstance()
                              , C = await R.disconnect();
                            if (-1 !== C) {
                                let R = await checkMapTenant(B, q);
                                await K.Z.initRoom({
                                    mapId: R,
                                    spawn: m.spawn,
                                    worldId: U,
                                    transition: W
                                })
                            } else
                                await K.Z.initRoom({
                                    mapId: (0,
                                    ee.lf)(),
                                    worldId: U,
                                    transition: "quick"
                                })
                        } catch (m) {
                            console.log("this is what happened, dude", m),
                            R.dispatch({
                                type: "game/SVR_CANNOTCONNECT",
                                payload: {
                                    message: ["mapNotFound", "The there there is not there. Try again. Message ID: mapNotFound"]
                                }
                            })
                        }
                    }
                    , "quick" !== W ? 1500 : 1e3)
                } else
                    $ && m.abort && ("quick" === W || "portal" === W) && T && L && m.source === L && backupWarp(R, W)
            }
        }
        );
        var en = C(19445)
          , eo = C(60604)
          , ei = C(82485)
          , ea = C(71343)
          , es = C(61036);
        let el = 0;
        (0,
        $.H)("game/GAME_OBJECT_CLICKED", (m,R)=>{
            var C, T, L, U, B, $;
            let H = Date.now();
            if (H - el < 150)
                return;
            el = H;
            let W = R.getState()
              , G = (0,
            q.pT)(W)
              , Y = (0,
            en.NS)(W);
            if (G || (null == Y ? void 0 : Y.isOpen))
                return;
            let {selfPlayer: K, world: X} = m;
            if (!K)
                return;
            let ee = (0,
            Q.pp)(m)
              , er = J.l.getInstance()
              , ec = null === (C = er.currentPlayer) || void 0 === C ? void 0 : C.full.pet
              , eu = eo.ZD;
            ec && ec.happiness > 50 && (null !== (L = null === (T = ec.traits) || void 0 === T ? void 0 : T.Speed) && void 0 !== L ? L : 0) > 1 && (eu += 32 + (ec.traits.Speed - 1));
            let ef = ee > eu * eu;
            if (ef) {
                R.dispatch((0,
                Z.io)({
                    mouse: m.mouse,
                    text: "hover.toofar"
                }));
                return
            }
            m.animation && (null === (U = er.scene) || void 0 === U || U.playOneTimeAnimation(m.animation));
            let ed = (0,
            en.xM)(W)
              , ep = (0,
            en.B6)(W);
            if (ep && !(null == Y ? void 0 : Y.isOpen)) {
                let R = null === (B = ep.onUse) || void 0 === B ? void 0 : B.types.includes("move");
                if (R && (0,
                ei.ZP)(ep, m.key, m.type || m.entityType, m.cropState)) {
                    let R = m.useType || "unknown"
                      , C = "object" === R ? et.Z.getGameObject(m.key) : et.Z.getGameEntity(m.key);
                    V.rV.attachToCursor.emit({
                        type: R,
                        mid: m.targetId,
                        moving: !0,
                        config: {
                            [R]: C
                        }
                    })
                } else
                    "npc" !== m.entityType || (0,
                    ei.ZP)(ep, m.npcId, "npc") ? V.ZP.sendEvent(V.qM.PLAYER_USED_ITEM, {
                        item: {
                            id: ep.id,
                            inventorySlot: ed.slot
                        },
                        target: {
                            id: m.targetId,
                            mid: m.targetId,
                            type: m.useType || "unknown"
                        },
                        client: {
                            key: m.key,
                            entityType: m.entityType,
                            cropState: m.cropState
                        }
                    }) : V.ZP.sendEvent(V.qM.PLAYER_CLICKED_NPC, {
                        npcId: m.npcId,
                        mid: m.targetId
                    });
                return
            }
            if ("npc" === m.entityType) {
                V.ZP.sendEvent(V.qM.PLAYER_CLICKED_NPC, {
                    npcId: m.npcId,
                    mid: m.targetId
                });
                return
            }
            if ("storage" === m.entityType) {
                let C = m.targetId
                  , T = er.getEntityByUniqueId(C);
                if (T) {
                    let m = et.Z.getGameEntity(T.entity);
                    ((null == m ? void 0 : null === ($ = m.storage) || void 0 === $ ? void 0 : $.transient) || (0,
                    q.T)(R.getState())) && V.ZP.sendEvent(V.fb.PLAYER_OPEN_STORAGE, {
                        storageId: C
                    })
                }
                return
            }
            if ("generic" === m.entityType && m.clickable) {
                V.ZP.sendEvent(ea.m.clickEntity, {
                    mid: m.targetId,
                    entity: m.entityId,
                    impact: "click",
                    inputs: [null == X ? void 0 : X.x, null == X ? void 0 : X.y]
                });
                return
            }
            if (m.action) {
                let C = m.action;
                if (C.room) {
                    let m = C.room;
                    V.ZP.sendEvent(V.fb.ROOM_WARP, {
                        mapId: m,
                        spawn: C.spawn
                    })
                }
                C.link && ("https://play.pixels.online/terravilla101" === C.link.toLowerCase() ? V.ZP.sendEvent(V.fb.ROOM_WARP, {
                    mapId: "terravilla"
                }) : /^[^./:]*$/.test(m.action.link) ? V.ZP.sendEvent(V.fb.ROOM_WARP, {
                    mapId: C.link.trim()
                }) : V.ZP.sendEvent(V.fb.LINK_OPEN, {
                    link: C.link.trim(),
                    msgKey: C.confirm
                })),
                C.dialog && R.dispatch({
                    type: "game/PRESENT_UI",
                    payload: {
                        ui: C.dialog,
                        params: [C.spawn],
                        source: m.targetId
                    }
                }),
                C.sound && V.rV.playSound.emit(C.sound),
                C.sharelink && (0,
                es.Bf)(C.sharelink, "Play Pixels.xyz")
            } else
                "self" === m.useType || ("pet" === m.useType ? R.dispatch((0,
                Z.zR)({})) : "otherPlayer" === m.useType ? R.dispatch((0,
                Z.ol)({
                    mid: m.mid,
                    username: m.username
                })) : console.log("nothing to do", m))
        }
        );
        var ec = C(27361)
          , eu = C.n(ec);
        let ef = 0;
        (0,
        $.H)("game/PLAYER_CLICKED", (m,R)=>{
            let C = Date.now();
            if (C - ef < 150)
                return;
            ef = C;
            let T = R.getState()
              , L = (0,
            q.pT)(T)
              , U = (0,
            en.NS)(T);
            if (!L && !(null == U ? void 0 : U.isOpen)) {
                let R = (0,
                en.B6)(T)
                  , C = (0,
                en.xM)(T);
                if (R) {
                    var B, $, H, W, G;
                    let T = (null === (B = R.onUse) || void 0 === B ? void 0 : B.placeEntity) || (null === ($ = R.onUse) || void 0 === $ ? void 0 : $.placeObject)
                      , L = eu()(m, "context.tempNode.isBuildAreaFree", !1);
                    if (T && !L)
                        return;
                    let U = {
                        type: "ground",
                        x: eu()(m, "context.tempNode.position.x") || eu()(m, "world.x"),
                        y: eu()(m, "context.tempNode.position.y") || eu()(m, "world.y")
                    };
                    if (null == R ? void 0 : null === (H = R.onUse) || void 0 === H ? void 0 : H.types.includes("move")) {
                        if (U.type = eu()(m, "context.tempNode.type"),
                        U.mid = eu()(m, "context.tempNode.mid"),
                        !U.type || !U.mid || !L)
                            return;
                        V.rV.attachToCursor.emit({
                            type: "item",
                            config: {
                                item: R
                            }
                        })
                    } else if ((null === (W = R.onUse) || void 0 === W ? void 0 : W.types.includes("placeTile")) || (null === (G = R.onUse) || void 0 === G ? void 0 : G.types.includes("removeTile"))) {
                        if (!L)
                            return;
                        U.tiles = eu()(m, "context.tiles")
                    }
                    V.ZP.sendEvent(V.qM.PLAYER_USED_ITEM, {
                        item: {
                            id: R.id,
                            inventorySlot: C.slot
                        },
                        target: U,
                        client: {
                            key: "ground",
                            entityType: "ground"
                        }
                    })
                }
            }
        }
        );
        var ed = C(36968)
          , ep = C.n(ed);
        (0,
        $.H)(q.r5.type, (m,R)=>{
            switch (m.path) {
            case "restrictions.allowedAddresses":
            case "restrictions.allowedNFTs":
                let C = {
                    restrictions: {
                        ...(0,
                        q.zl)(R.getState())
                    }
                };
                ep()(C, m.path, m.value),
                V.ZP.sendEvent(V.qM.ROOM_RESTRICTIONS, {
                    ...C.restrictions
                });
                break;
            case "permissions.use":
                V.ZP.sendEvent(V.qM.ROOM_PERMISSIONS, {
                    permissions: {
                        use: m.value
                    }
                });
                break;
            case "guild":
                console.log("sending ROOM_PERMISSIONS", m),
                V.ZP.sendEvent(V.qM.ROOM_PERMISSIONS, {
                    guild: m.value
                });
                break;
            case "name":
                V.ZP.sendEvent(V.qM.ROOM_NAME, m.value);
                break;
            case "ownership.forSale":
                V.ZP.sendEvent(V.qM.ROOM_OWNERSHIP, {
                    forSale: m.value
                })
            }
        }
        ),
        (0,
        $.H)("mapEditor/addMember", m=>{
            V.ZP.sendEvent(V.qM.ROOM_MEMBERS, m)
        }
        ),
        (0,
        $.H)("game/PLAYER_COLLIDED_WITH_OBJECT", m=>{
            if (null == m ? void 0 : m.onCollide) {
                let R = m.onCollide;
                R.teleport && V.ZP.sendEvent(V.fb.ROOM_WARP, {
                    mapId: R.teleport,
                    spawn: R.spawn,
                    source: m.key
                }),
                R.sound && V.rV.playSound.emit(R.sound),
                R.trigger && V.ZP.sendEvent(V.Yi.TRIGGER_EVENT, {
                    trigger: m.onCollide.trigger,
                    targetId: m.targetId
                }),
                R.link && V.ZP.sendEvent(V.fb.LINK_OPEN, {
                    link: R.link.trim(),
                    msgKey: R.confirm
                })
            }
        }
        ),
        (0,
        $.H)("game/PLAYER_UNCOLLIDED_WITH_OBJECT", m=>{
            if (null == m ? void 0 : m.onCollide) {
                let R = m.onCollide;
                R.teleport && V.ZP.sendEvent(V.fb.ROOM_WARP, {
                    mapId: R.teleport,
                    spawn: R.spawn,
                    source: m.key,
                    abort: !0
                })
            }
        }
        );
        var eh = C(77341)
          , eg = C(79274)
          , em = C(69959)
          , ey = C(71156)
          , ev = C(95767);
        function registerWorker() {
            if (navigator.serviceWorker && "PushManager"in window)
                return navigator.serviceWorker.register("/workers/push-worker.js?v=1").then(function(m) {
                    return U = m
                }).catch(()=>{
                    U = void 0
                }
                )
        }
        async function isSubscriptionPossible() {
            return await registerWorker(),
            U && "denied" !== Notification.permission
        }
        async function isUserSubscribedToPush() {
            if (await registerWorker(),
            !U)
                return !1;
            let m = await U.pushManager.getSubscription();
            return !(!m || m.expirationTime && Date.now() > m.expirationTime)
        }
        async function subscribeUserToPush() {
            if (await registerWorker(),
            !U)
                return;
            await new Promise(function(m, R) {
                if ("granted" === Notification.permission)
                    m(Notification.permission);
                else {
                    let C = Notification.requestPermission(function(R) {
                        m(R)
                    });
                    C && C.then(m, R)
                }
            }
            ).then(function(m) {
                if ("granted" !== m)
                    throw Error("We weren't granted permission.")
            });
            let m = {
                userVisibleOnly: !0,
                applicationServerKey: function(m) {
                    let R = "=".repeat((4 - m.length % 4) % 4)
                      , C = (m + R).replace(/-/g, "+").replace(/_/g, "/")
                      , T = window.atob(C)
                      , L = new Uint8Array(T.length);
                    for (let m = 0; m < T.length; ++m)
                        L[m] = T.charCodeAt(m);
                    return L
                }("BFOtTI6ukP9_JEyYf0Kxuk9JZnL4okcSVnztjI8Scflrq0Wx38XctJ1UtKbpNoK-LnGDYPYB-fkXP8U1Y4epKcw")
            };
            return U.pushManager.subscribe(m).then(function(m) {
                return console.log("Received PushSubscription: ", JSON.stringify(m)),
                m
            })
        }
        async function shouldAskAboutSubscription() {
            return !await isUserSubscribedToPush() && !!await isSubscriptionPossible()
        }
        let eb = "craft:"
          , eE = !1;
        (0,
        $.H)("game/PRESENT_UI", (m,R)=>{
            var C, T, L, U, B, $, G, Y, K, X, Q, ee, er, eo, ei, ea;
            let {ui: es, source: el} = m
              , ec = m.params;
            if (ec || (ec = [m.param]),
            console.log("got presentui ".concat(es)),
            es.includes("marketplace-") && "marketplace-listings" !== es) {
                R.dispatch((0,
                ey.j4)({
                    initialCategory: es.split("marketplace-")[1]
                }));
                return
            }
            switch (es) {
            case "farmDetails":
                R.dispatch({
                    type: "game/PRESENT_FARM_DETAILS"
                });
                break;
            case "farmPicker":
            case "plotDialog":
                R.dispatch((0,
                em.Vu)());
                break;
            case "portalConfig":
                R.dispatch((0,
                en.aq)()),
                R.dispatch((0,
                H.aA)({
                    source: el,
                    tenant: "pixels",
                    mode: null == ec ? void 0 : ec[0]
                }));
                break;
            case "entityInput":
                R.dispatch((0,
                en.aq)()),
                R.dispatch((0,
                H.Bd)({
                    source: el,
                    prompt: null == ec ? void 0 : ec[0],
                    config: ec.slice(1)
                }));
                break;
            case "marketplace":
                R.dispatch((0,
                en.aq)()),
                R.dispatch((0,
                ey.j4)({}));
                break;
            case "marketplace-listings":
                R.dispatch((0,
                en.aq)()),
                R.dispatch((0,
                ey.ft)());
                break;
            case "portalConfigTenant":
                R.dispatch((0,
                en.aq)()),
                R.dispatch((0,
                H.aA)({
                    source: el,
                    mode: null == ec ? void 0 : ec[0]
                }));
                break;
            case "hideHUD":
                R.dispatch((0,
                H.Dw)(!1));
                break;
            case "showHUD":
                R.dispatch((0,
                H.Dw)(!0));
                break;
            case "link":
                "string" == typeof (null == ec ? void 0 : ec[0]) && V.ZP.sendEvent(V.fb.LINK_OPEN, {
                    link: null == ec ? void 0 : ec[0],
                    msgKey: null == ec ? void 0 : ec[1]
                });
                break;
            case "petStorage":
                {
                    let m = null === (C = J.l.getInstance().selfPlayer) || void 0 === C ? void 0 : C.pet;
                    m && V.ZP.sendEvent(V.fb.PLAYER_OPEN_STORAGE, {
                        storageId: m.mid
                    })
                }
                break;
            case "petPicker":
                R.dispatch((0,
                Z.lW)({
                    mode: "hatched",
                    entity: el
                }));
                break;
            case "petCapsule":
                R.dispatch((0,
                Z.lW)({
                    mode: "capsule",
                    entity: el
                }));
                break;
            case "petDetails":
                R.dispatch((0,
                Z.zR)({
                    petId: null == ec ? void 0 : ec[0]
                }));
                break;
            case "mapStorage":
                (0,
                q.LB)(R.getState()) && V.ZP.sendEvent(V.fb.PLAYER_OPEN_STORAGE, {
                    storageId: J.l.getInstance().mapStorageId
                });
                break;
            case "entityStorage":
                {
                    let m = J.l.getInstance()
                      , C = m.getEntityByUniqueId(el);
                    if (C) {
                        let m = et.Z.getGameEntity(C.entity);
                        ((null == m ? void 0 : null === (T = m.storage) || void 0 === T ? void 0 : T.transient) || (0,
                        q.T)(R.getState())) && V.ZP.sendEvent(V.fb.PLAYER_OPEN_STORAGE, {
                            storageId: el
                        })
                    }
                }
                break;
            case "popupMap":
                let eu = null !== (U = null == ec ? void 0 : ec[0]) && void 0 !== U ? U : "obj_mapTerravilla"
                  , ef = et.Z.getGameObject(eu);
                (null == ef ? void 0 : null === (L = ef.sprite) || void 0 === L ? void 0 : L.image) && (ef.sprite.size && ef.sprite.size.height > ef.sprite.size.width ? R.dispatch((0,
                H.vV)({
                    url: null == ef ? void 0 : null === (B = ef.sprite) || void 0 === B ? void 0 : B.image,
                    vertical: !0
                })) : R.dispatch((0,
                H.vV)({
                    url: null == ef ? void 0 : null === ($ = ef.sprite) || void 0 === $ ? void 0 : $.image
                })));
                break;
            case "popupFrame":
                R.dispatch((0,
                H.vV)({
                    url: (null == ec ? void 0 : ec[0]) || "https://www.pixels.xyz",
                    isIframe: !0
                }));
                break;
            case "theatreFrame":
                (null == ec ? void 0 : ec[0]) === "close" ? R.dispatch((0,
                H.wR)()) : R.dispatch((0,
                H.vV)({
                    url: (null == ec ? void 0 : ec[0]) || "https://www.pixels.xyz",
                    isIframe: !0,
                    modeless: !0
                }));
                break;
            case "closeCrafting":
                R.dispatch((0,
                eh.F0)());
                break;
            case "openMailbox":
                R.dispatch((0,
                en.aq)()),
                R.dispatch((0,
                ev.e4)());
                break;
            case "closeMailbox":
                R.dispatch((0,
                ev.I_)());
                break;
            case "webpush":
                if (eE)
                    break;
                shouldAskAboutSubscription().then(m=>{
                    m && R.dispatch((0,
                    H.VG)({
                        prompt: null == ec ? void 0 : ec[0],
                        yesno: !0,
                        callback: m=>{
                            "yes" === m ? subscribeUserToPush().then(m=>{
                                if (m) {
                                    let R = JSON.parse(JSON.stringify(m));
                                    V.ZP.sendEvent(V.Yi.PUSH_SUBSCRIBE, {
                                        endpoint: R.endpoint,
                                        expiration: R.expirationTime,
                                        extra: {
                                            ...R,
                                            endpoint: void 0,
                                            expirationTime: void 0
                                        }
                                    })
                                }
                            }
                            ).catch(m=>{
                                console.log(m)
                            }
                            ) : "no" === m && (eE = !0)
                        }
                    }))
                }
                );
                break;
            default:
                es.startsWith(eb) ? (R.dispatch((0,
                en.aq)()),
                R.dispatch((0,
                eh.Uf)({
                    source: null != el ? el : "",
                    craftType: es.substring(eb.length),
                    tableTier: null !== (G = null == ec ? void 0 : ec[0]) && void 0 !== G ? G : 1,
                    state: null !== (Y = null == ec ? void 0 : ec[1]) && void 0 !== Y ? Y : "",
                    achievement: null !== (K = null == ec ? void 0 : ec[2]) && void 0 !== K ? K : "",
                    finish: null !== (X = null == ec ? void 0 : ec[3]) && void 0 !== X ? X : 1,
                    quantity: null !== (Q = null == ec ? void 0 : ec[4]) && void 0 !== Q ? Q : 1
                }))) : eg.h3.includes(es) ? R.dispatch((0,
                eh.Uf)({
                    source: null != el ? el : "",
                    craftType: es,
                    tableTier: null !== (ee = null == ec ? void 0 : ec[0]) && void 0 !== ee ? ee : 1,
                    state: null !== (er = null == ec ? void 0 : ec[1]) && void 0 !== er ? er : "",
                    achievement: null !== (eo = null == ec ? void 0 : ec[2]) && void 0 !== eo ? eo : "",
                    finish: null !== (ei = null == ec ? void 0 : ec[3]) && void 0 !== ei ? ei : 1,
                    quantity: null !== (ea = null == ec ? void 0 : ec[4]) && void 0 !== ea ? ea : 1
                })) : et.Z.getStore(es) ? R.dispatch((0,
                W.WU)(es)) : console.log("unknown dialog ".concat(es))
            }
        }
        ),
        (0,
        $.H)(en.oi.type, m=>{
            let {sourceIndex: R, targetIndex: C, sourceContainer: T, targetContainer: L} = m;
            (R !== C || T !== L) && V.rV.inventory.swapItems.emit(m)
        }
        );
        var e_ = C(77497);
        (0,
        $.H)("game/".concat(V.fb.PLAYER_EXP_CHANGE), (m,R)=>{
            var C, T, L;
            let U = R.getState()
              , B = null === (C = U.game.player) || void 0 === C ? void 0 : C.full;
            if (!B)
                return;
            let $ = B.levels
              , V = m.levels
              , H = []
              , W = B.quests
              , q = eg.nA.every(m=>{
                var R, C;
                let T = (null === (R = $[m]) || void 0 === R ? void 0 : R.level) || 0
                  , L = (null === (C = V[m]) || void 0 === C ? void 0 : C.level) || 0;
                return T === L
            }
            );
            !q && (null === (T = Object.values(et.Z.getGameItems() || {}).filter(m=>{
                var R, C;
                return null == m ? void 0 : null === (C = m.requirements) || void 0 === C ? void 0 : null === (R = C.levels) || void 0 === R ? void 0 : R.some(m=>{
                    let {levelType: R, level: C} = m;
                    return !!eg.nA.includes(R) && C >= 0
                }
                )
            }
            )) || void 0 === T || T.filter(m=>{
                var R, C;
                return (null === (R = m.requirements.levels) || void 0 === R ? void 0 : R.some(m=>{
                    var R;
                    return m.level > ((null === (R = $[m.levelType]) || void 0 === R ? void 0 : R.level) || 0)
                }
                )) && m.requirements.levels.every(m=>{
                    var R;
                    return ((null === (R = V[m.levelType]) || void 0 === R ? void 0 : R.level) || 0) >= m.level
                }
                ) && (!(null === (C = m.requirements) || void 0 === C ? void 0 : C.quests) || m.requirements.quests.every(m=>{
                    var R;
                    return null === (R = W[m]) || void 0 === R ? void 0 : R.isComplete
                }
                ))
            }
            ).forEach(m=>H.push({
                source: "item",
                icon: m.image,
                text: {
                    id: "notifications.itemUnlocked",
                    name: "".concat(m.id, "_name")
                },
                deduplicationKey: "notifications.itemUnlocked-".concat(m.id)
            })),
            null === (L = Object.values(et.Z.getGameAchievements() || {}).filter(m=>{
                var R;
                return (null === (R = m.craftable) || void 0 === R ? void 0 : R.autoGrant) && m.craftable.requiredLevel > 0
            }
            )) || void 0 === L || L.filter(m=>{
                var R, C;
                if (!m.craftable)
                    return !1;
                let T = m.craftable.requiredLevel || 0
                  , L = m.craftable.requiredSkill || eg.oi[m.craftable.type]
                  , U = (null === (R = $[L]) || void 0 === R ? void 0 : R.level) || 0
                  , B = (null === (C = V[L]) || void 0 === C ? void 0 : C.level) || 0;
                return B >= T && U < T
            }
            ).forEach(m=>{
                let R = m.craftable.requiredSkill || eg.oi[m.craftable.type];
                H.push({
                    source: "achievement",
                    icon: "".concat(eo.fd).concat(R, ".png"),
                    text: {
                        id: "notifications.globalAchievementUnlocked",
                        name: "".concat(m.id, "_name")
                    },
                    deduplicationKey: "notifications.globalAchievementUnlocked-".concat(m.id)
                })
            }
            ),
            H.length && eT.set(e_.W_, H))
        }
        ),
        C(86193);
        let eS = ["placeEntity", "placeObject", "move", "removeEntity", "removeObject"];
        (0,
        $.H)(en.$Z.type, (m,R)=>{
            let {mid: C, item: T} = m;
            if (!C && T) {
                let m = (0,
                q.Vb)(R.getState());
                !function(m, R) {
                    if (m) {
                        var C, T, L, U, B, $, H, W, q, G, Z, Y, K;
                        let X;
                        X = (null == m ? void 0 : null === (C = m.onUse) || void 0 === C ? void 0 : C.placeObject) ? {
                            type: "object",
                            config: {
                                object: et.Z.getGameObject(null == m ? void 0 : null === (H = m.onUse) || void 0 === H ? void 0 : H.placeObject)
                            },
                            placing: !0
                        } : (null == m ? void 0 : null === (L = m.onUse) || void 0 === L ? void 0 : null === (T = L.placeEntity) || void 0 === T ? void 0 : T.entity) ? {
                            type: "entity",
                            config: {
                                entity: et.Z.getGameEntity(m.onUse.placeEntity.entity)
                            },
                            placing: !0
                        } : (null === (B = m.onUse) || void 0 === B ? void 0 : null === (U = B.placeTile) || void 0 === U ? void 0 : U.tileset) ? {
                            type: "tile",
                            config: {
                                tile: {
                                    tilesetId: null === (q = m.onUse) || void 0 === q ? void 0 : null === (W = q.placeTile) || void 0 === W ? void 0 : W.tileset
                                }
                            }
                        } : (null === ($ = m.onUse) || void 0 === $ ? void 0 : $.types.includes("removeTile")) ? {
                            type: "tile",
                            config: {
                                tile: {}
                            }
                        } : {
                            type: "item",
                            config: {
                                item: m
                            }
                        },
                        V.rV.attachToCursor.emit({
                            ...X,
                            editingWithoutPermissions: (null == m ? void 0 : null === (Z = m.onUse) || void 0 === Z ? void 0 : null === (G = Z.types) || void 0 === G ? void 0 : G.some(m=>eS.includes(m))) && !R || !function(m) {
                                var R;
                                if (!(null == m ? void 0 : null === (R = m.useTargets) || void 0 === R ? void 0 : R.types.includes("mapLabels")) || !m.useTargets.mapLabels)
                                    return !0;
                                let C = J.l.getInstance().mapLabels;
                                return m.useTargets.mapLabels.every(m=>C.includes(m))
                            }(m),
                            removing: null == m ? void 0 : null === (K = m.onUse) || void 0 === K ? void 0 : null === (Y = K.types) || void 0 === Y ? void 0 : Y.some(m=>["removeEntity", "removeObject"].includes(m))
                        })
                    }
                }(T, m)
            }
        }
        );
        var eA = C(95047);
        (0,
        $.H)("game/CLIENT_CMD", m=>{
            console.log("got client command", m);
            let {detail: R, source: C, params: T} = m;
            "petHatch" === R && C && eA.Z.hatchPet(C).then(m=>{
                var R, L;
                "success" === m ? V.ZP.postEvent(ea.m.clickEntity, {
                    mid: C,
                    impact: "hatched",
                    entity: null !== (R = null == T ? void 0 : T[0]) && void 0 !== R ? R : "ent_growthlab"
                }) : V.ZP.postEvent(ea.m.clickEntity, {
                    mid: C,
                    impact: "failed",
                    entity: null !== (L = null == T ? void 0 : T[0]) && void 0 !== L ? L : "ent_growthlab"
                })
            }
            )
        }
        );
        var eO = C(18496)
          , ew = C(22181)
          , eI = C(54698)
          , eP = C(87434)
          , ek = C(46787)
          , eR = C(15103);
        let eC = (0,
        B.xC)({
            reducer: {
                auth: Y.Co,
                game: Z.ZP,
                ui: H.ZP,
                mailbox: ev.ZP,
                generalStore: W.ZP,
                marketplace: ey.ZP,
                chat: eI.ZP,
                plot: em.ZP,
                report: eP.ZP,
                storage: en.ZP,
                trade: ek.ZP,
                mapEditor: q.ZP,
                crafting: eh.ZP
            },
            middleware: m=>m().concat(m=>R=>C=>{
                if (C.type === Y.Kx.type)
                    (async()=>{
                        try {
                            var R, T, L, U;
                            let B = null !== (L = (0,
                            Q.Ul)("wallet-provider")) && void 0 !== L ? L : "unknown"
                              , $ = await eO.Z.initialize(null !== (U = (0,
                            Q.En)(null === (R = C.payload) || void 0 === R ? void 0 : R.mapId)) && void 0 !== U ? U : "", B)
                              , V = null == $ ? void 0 : $.player
                              , H = (0,
                            ee.F5)()
                              , W = null == V ? void 0 : null === (T = V.location) || void 0 === T ? void 0 : T.mapId
                              , q = null == $ ? void 0 : $.targetTenant;
                            if (q && q !== H) {
                                window.open("/".concat(q, "/").concat(W), "_self");
                                return
                            }
                            $ && eO.Z.sessionToken && (m.dispatch((0,
                            ew.R)({
                                mapId: W
                            })),
                            m.dispatch((0,
                            Y.iM)({
                                sessionToken: eO.Z.sessionToken,
                                provider: eO.Z.walletProvider,
                                username: V.username,
                                playerId: V._id.toString(),
                                playerAvatar: V.playerAvatar,
                                lastSavedAt: V.lastSavedAt,
                                cryptoWallets: V.cryptoWallets,
                                currentAvatar: V.currentAvatar,
                                mapId: W
                            })))
                        } catch (R) {
                            console.warn(R),
                            (null == R ? void 0 : R.error) && m.dispatch((0,
                            Y.gz)({
                                message: R.message || R.error,
                                allowReload: !0,
                                allowClose: !1
                            }))
                        }
                        m.dispatch((0,
                        Y.RT)())
                    }
                    )();
                else if (C.type === Y.YR.type)
                    ;
                else if (C.type === Y.MD.type) {
                    let {username: R, avatarPieces: T} = C.payload;
                    (async()=>{
                        if (eO.Z.sessionToken) {
                            var C, L, U, B;
                            try {
                                let U = await eO.Z.createPlayer(R, T);
                                (null == U ? void 0 : null === (C = U.player) || void 0 === C ? void 0 : C.username) ? m.dispatch((0,
                                Y.z1)({
                                    username: U.player.username,
                                    playerId: U.player._id,
                                    cryptoWallets: U.player.cryptoWallets,
                                    playerAvatar: T,
                                    mapId: null === (L = U.player.location) || void 0 === L ? void 0 : L.mapId
                                })) : (null == U ? void 0 : U.message) && "username-already-exists" === U.message && m.dispatch((0,
                                Y.cm)({
                                    message: ["nameInUse", "Name in use"]
                                }))
                            } catch (R) {
                                (null == R ? void 0 : null === (B = R.response) || void 0 === B ? void 0 : null === (U = B.data) || void 0 === U ? void 0 : U.message) === "username-already-exists" ? m.dispatch((0,
                                Y.cm)({
                                    message: ["nameInUse", "Name in use"]
                                })) : m.dispatch((0,
                                Y.cm)({
                                    message: ["internalServerError", "Unknown Error Occurred Creating Player"]
                                }))
                            }
                        }
                    }
                    )()
                } else
                    C.type === Z.ni.type && (async()=>{
                        eO.Z.sessionToken && eO.Z.signOut().catch(m=>{
                            console.log("error signing out", m)
                        }
                        ),
                        m.dispatch((0,
                        Y.k4)())
                    }
                    )();
                return R(C)
            }
            ).concat(m=>R=>C=>{
                let T = $.q[C.type];
                return T && T(C.payload, m),
                R(C)
            }
            )
        })
          , eT = (0,
        eR.MT)()
    },
    21876: function(m) {
        !function() {
            var R = {
                675: function(m, R) {
                    "use strict";
                    R.byteLength = function(m) {
                        var R = getLens(m)
                          , C = R[0]
                          , T = R[1];
                        return (C + T) * 3 / 4 - T
                    }
                    ,
                    R.toByteArray = function(m) {
                        var R, C, U = getLens(m), B = U[0], $ = U[1], V = new L((B + $) * 3 / 4 - $), H = 0, W = $ > 0 ? B - 4 : B;
                        for (C = 0; C < W; C += 4)
                            R = T[m.charCodeAt(C)] << 18 | T[m.charCodeAt(C + 1)] << 12 | T[m.charCodeAt(C + 2)] << 6 | T[m.charCodeAt(C + 3)],
                            V[H++] = R >> 16 & 255,
                            V[H++] = R >> 8 & 255,
                            V[H++] = 255 & R;
                        return 2 === $ && (R = T[m.charCodeAt(C)] << 2 | T[m.charCodeAt(C + 1)] >> 4,
                        V[H++] = 255 & R),
                        1 === $ && (R = T[m.charCodeAt(C)] << 10 | T[m.charCodeAt(C + 1)] << 4 | T[m.charCodeAt(C + 2)] >> 2,
                        V[H++] = R >> 8 & 255,
                        V[H++] = 255 & R),
                        V
                    }
                    ,
                    R.fromByteArray = function(m) {
                        for (var R, T = m.length, L = T % 3, U = [], B = 0, $ = T - L; B < $; B += 16383)
                            U.push(function(m, R, T) {
                                for (var L, U = [], B = R; B < T; B += 3)
                                    U.push(C[(L = (m[B] << 16 & 16711680) + (m[B + 1] << 8 & 65280) + (255 & m[B + 2])) >> 18 & 63] + C[L >> 12 & 63] + C[L >> 6 & 63] + C[63 & L]);
                                return U.join("")
                            }(m, B, B + 16383 > $ ? $ : B + 16383));
                        return 1 === L ? U.push(C[(R = m[T - 1]) >> 2] + C[R << 4 & 63] + "==") : 2 === L && U.push(C[(R = (m[T - 2] << 8) + m[T - 1]) >> 10] + C[R >> 4 & 63] + C[R << 2 & 63] + "="),
                        U.join("")
                    }
                    ;
                    for (var C = [], T = [], L = "undefined" != typeof Uint8Array ? Uint8Array : Array, U = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", B = 0, $ = U.length; B < $; ++B)
                        C[B] = U[B],
                        T[U.charCodeAt(B)] = B;
                    function getLens(m) {
                        var R = m.length;
                        if (R % 4 > 0)
                            throw Error("Invalid string. Length must be a multiple of 4");
                        var C = m.indexOf("=");
                        -1 === C && (C = R);
                        var T = C === R ? 0 : 4 - C % 4;
                        return [C, T]
                    }
                    T["-".charCodeAt(0)] = 62,
                    T["_".charCodeAt(0)] = 63
                },
                72: function(m, R, C) {
                    "use strict";
                    /*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
                    var T = C(675)
                      , L = C(783)
                      , U = "function" == typeof Symbol && "function" == typeof Symbol.for ? Symbol.for("nodejs.util.inspect.custom") : null;
                    function createBuffer(m) {
                        if (m > 2147483647)
                            throw RangeError('The value "' + m + '" is invalid for option "size"');
                        var R = new Uint8Array(m);
                        return Object.setPrototypeOf(R, Buffer.prototype),
                        R
                    }
                    function Buffer(m, R, C) {
                        if ("number" == typeof m) {
                            if ("string" == typeof R)
                                throw TypeError('The "string" argument must be of type string. Received type number');
                            return allocUnsafe(m)
                        }
                        return from(m, R, C)
                    }
                    function from(m, R, C) {
                        if ("string" == typeof m)
                            return function(m, R) {
                                if (("string" != typeof R || "" === R) && (R = "utf8"),
                                !Buffer.isEncoding(R))
                                    throw TypeError("Unknown encoding: " + R);
                                var C = 0 | byteLength(m, R)
                                  , T = createBuffer(C)
                                  , L = T.write(m, R);
                                return L !== C && (T = T.slice(0, L)),
                                T
                            }(m, R);
                        if (ArrayBuffer.isView(m))
                            return fromArrayLike(m);
                        if (null == m)
                            throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof m);
                        if (isInstance(m, ArrayBuffer) || m && isInstance(m.buffer, ArrayBuffer) || "undefined" != typeof SharedArrayBuffer && (isInstance(m, SharedArrayBuffer) || m && isInstance(m.buffer, SharedArrayBuffer)))
                            return function(m, R, C) {
                                var T;
                                if (R < 0 || m.byteLength < R)
                                    throw RangeError('"offset" is outside of buffer bounds');
                                if (m.byteLength < R + (C || 0))
                                    throw RangeError('"length" is outside of buffer bounds');
                                return Object.setPrototypeOf(T = void 0 === R && void 0 === C ? new Uint8Array(m) : void 0 === C ? new Uint8Array(m,R) : new Uint8Array(m,R,C), Buffer.prototype),
                                T
                            }(m, R, C);
                        if ("number" == typeof m)
                            throw TypeError('The "value" argument must not be of type number. Received type number');
                        var T = m.valueOf && m.valueOf();
                        if (null != T && T !== m)
                            return Buffer.from(T, R, C);
                        var L = function(m) {
                            if (Buffer.isBuffer(m)) {
                                var R, C = 0 | checked(m.length), T = createBuffer(C);
                                return 0 === T.length || m.copy(T, 0, 0, C),
                                T
                            }
                            return void 0 !== m.length ? "number" != typeof m.length || (R = m.length) != R ? createBuffer(0) : fromArrayLike(m) : "Buffer" === m.type && Array.isArray(m.data) ? fromArrayLike(m.data) : void 0
                        }(m);
                        if (L)
                            return L;
                        if ("undefined" != typeof Symbol && null != Symbol.toPrimitive && "function" == typeof m[Symbol.toPrimitive])
                            return Buffer.from(m[Symbol.toPrimitive]("string"), R, C);
                        throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof m)
                    }
                    function assertSize(m) {
                        if ("number" != typeof m)
                            throw TypeError('"size" argument must be of type number');
                        if (m < 0)
                            throw RangeError('The value "' + m + '" is invalid for option "size"')
                    }
                    function allocUnsafe(m) {
                        return assertSize(m),
                        createBuffer(m < 0 ? 0 : 0 | checked(m))
                    }
                    function fromArrayLike(m) {
                        for (var R = m.length < 0 ? 0 : 0 | checked(m.length), C = createBuffer(R), T = 0; T < R; T += 1)
                            C[T] = 255 & m[T];
                        return C
                    }
                    function checked(m) {
                        if (m >= 2147483647)
                            throw RangeError("Attempt to allocate Buffer larger than maximum size: 0x7fffffff bytes");
                        return 0 | m
                    }
                    function byteLength(m, R) {
                        if (Buffer.isBuffer(m))
                            return m.length;
                        if (ArrayBuffer.isView(m) || isInstance(m, ArrayBuffer))
                            return m.byteLength;
                        if ("string" != typeof m)
                            throw TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof m);
                        var C = m.length
                          , T = arguments.length > 2 && !0 === arguments[2];
                        if (!T && 0 === C)
                            return 0;
                        for (var L = !1; ; )
                            switch (R) {
                            case "ascii":
                            case "latin1":
                            case "binary":
                                return C;
                            case "utf8":
                            case "utf-8":
                                return utf8ToBytes(m).length;
                            case "ucs2":
                            case "ucs-2":
                            case "utf16le":
                            case "utf-16le":
                                return 2 * C;
                            case "hex":
                                return C >>> 1;
                            case "base64":
                                return base64ToBytes(m).length;
                            default:
                                if (L)
                                    return T ? -1 : utf8ToBytes(m).length;
                                R = ("" + R).toLowerCase(),
                                L = !0
                            }
                    }
                    function slowToString(m, R, C) {
                        var L, U, B = !1;
                        if ((void 0 === R || R < 0) && (R = 0),
                        R > this.length || ((void 0 === C || C > this.length) && (C = this.length),
                        C <= 0 || (C >>>= 0) <= (R >>>= 0)))
                            return "";
                        for (m || (m = "utf8"); ; )
                            switch (m) {
                            case "hex":
                                return function(m, R, C) {
                                    var T = m.length;
                                    (!R || R < 0) && (R = 0),
                                    (!C || C < 0 || C > T) && (C = T);
                                    for (var L = "", U = R; U < C; ++U)
                                        L += $[m[U]];
                                    return L
                                }(this, R, C);
                            case "utf8":
                            case "utf-8":
                                return utf8Slice(this, R, C);
                            case "ascii":
                                return function(m, R, C) {
                                    var T = "";
                                    C = Math.min(m.length, C);
                                    for (var L = R; L < C; ++L)
                                        T += String.fromCharCode(127 & m[L]);
                                    return T
                                }(this, R, C);
                            case "latin1":
                            case "binary":
                                return function(m, R, C) {
                                    var T = "";
                                    C = Math.min(m.length, C);
                                    for (var L = R; L < C; ++L)
                                        T += String.fromCharCode(m[L]);
                                    return T
                                }(this, R, C);
                            case "base64":
                                return L = R,
                                U = C,
                                0 === L && U === this.length ? T.fromByteArray(this) : T.fromByteArray(this.slice(L, U));
                            case "ucs2":
                            case "ucs-2":
                            case "utf16le":
                            case "utf-16le":
                                return function(m, R, C) {
                                    for (var T = m.slice(R, C), L = "", U = 0; U < T.length; U += 2)
                                        L += String.fromCharCode(T[U] + 256 * T[U + 1]);
                                    return L
                                }(this, R, C);
                            default:
                                if (B)
                                    throw TypeError("Unknown encoding: " + m);
                                m = (m + "").toLowerCase(),
                                B = !0
                            }
                    }
                    function swap(m, R, C) {
                        var T = m[R];
                        m[R] = m[C],
                        m[C] = T
                    }
                    function bidirectionalIndexOf(m, R, C, T, L) {
                        var U;
                        if (0 === m.length)
                            return -1;
                        if ("string" == typeof C ? (T = C,
                        C = 0) : C > 2147483647 ? C = 2147483647 : C < -2147483648 && (C = -2147483648),
                        (U = C = +C) != U && (C = L ? 0 : m.length - 1),
                        C < 0 && (C = m.length + C),
                        C >= m.length) {
                            if (L)
                                return -1;
                            C = m.length - 1
                        } else if (C < 0) {
                            if (!L)
                                return -1;
                            C = 0
                        }
                        if ("string" == typeof R && (R = Buffer.from(R, T)),
                        Buffer.isBuffer(R))
                            return 0 === R.length ? -1 : arrayIndexOf(m, R, C, T, L);
                        if ("number" == typeof R)
                            return (R &= 255,
                            "function" == typeof Uint8Array.prototype.indexOf) ? L ? Uint8Array.prototype.indexOf.call(m, R, C) : Uint8Array.prototype.lastIndexOf.call(m, R, C) : arrayIndexOf(m, [R], C, T, L);
                        throw TypeError("val must be string, number or Buffer")
                    }
                    function arrayIndexOf(m, R, C, T, L) {
                        var U, B = 1, $ = m.length, V = R.length;
                        if (void 0 !== T && ("ucs2" === (T = String(T).toLowerCase()) || "ucs-2" === T || "utf16le" === T || "utf-16le" === T)) {
                            if (m.length < 2 || R.length < 2)
                                return -1;
                            B = 2,
                            $ /= 2,
                            V /= 2,
                            C /= 2
                        }
                        function read(m, R) {
                            return 1 === B ? m[R] : m.readUInt16BE(R * B)
                        }
                        if (L) {
                            var H = -1;
                            for (U = C; U < $; U++)
                                if (read(m, U) === read(R, -1 === H ? 0 : U - H)) {
                                    if (-1 === H && (H = U),
                                    U - H + 1 === V)
                                        return H * B
                                } else
                                    -1 !== H && (U -= U - H),
                                    H = -1
                        } else
                            for (C + V > $ && (C = $ - V),
                            U = C; U >= 0; U--) {
                                for (var W = !0, q = 0; q < V; q++)
                                    if (read(m, U + q) !== read(R, q)) {
                                        W = !1;
                                        break
                                    }
                                if (W)
                                    return U
                            }
                        return -1
                    }
                    function utf8Slice(m, R, C) {
                        C = Math.min(m.length, C);
                        for (var T = [], L = R; L < C; ) {
                            var U, B, $, V, H = m[L], W = null, q = H > 239 ? 4 : H > 223 ? 3 : H > 191 ? 2 : 1;
                            if (L + q <= C)
                                switch (q) {
                                case 1:
                                    H < 128 && (W = H);
                                    break;
                                case 2:
                                    (192 & (U = m[L + 1])) == 128 && (V = (31 & H) << 6 | 63 & U) > 127 && (W = V);
                                    break;
                                case 3:
                                    U = m[L + 1],
                                    B = m[L + 2],
                                    (192 & U) == 128 && (192 & B) == 128 && (V = (15 & H) << 12 | (63 & U) << 6 | 63 & B) > 2047 && (V < 55296 || V > 57343) && (W = V);
                                    break;
                                case 4:
                                    U = m[L + 1],
                                    B = m[L + 2],
                                    $ = m[L + 3],
                                    (192 & U) == 128 && (192 & B) == 128 && (192 & $) == 128 && (V = (15 & H) << 18 | (63 & U) << 12 | (63 & B) << 6 | 63 & $) > 65535 && V < 1114112 && (W = V)
                                }
                            null === W ? (W = 65533,
                            q = 1) : W > 65535 && (W -= 65536,
                            T.push(W >>> 10 & 1023 | 55296),
                            W = 56320 | 1023 & W),
                            T.push(W),
                            L += q
                        }
                        return function(m) {
                            var R = m.length;
                            if (R <= 4096)
                                return String.fromCharCode.apply(String, m);
                            for (var C = "", T = 0; T < R; )
                                C += String.fromCharCode.apply(String, m.slice(T, T += 4096));
                            return C
                        }(T)
                    }
                    function checkOffset(m, R, C) {
                        if (m % 1 != 0 || m < 0)
                            throw RangeError("offset is not uint");
                        if (m + R > C)
                            throw RangeError("Trying to access beyond buffer length")
                    }
                    function checkInt(m, R, C, T, L, U) {
                        if (!Buffer.isBuffer(m))
                            throw TypeError('"buffer" argument must be a Buffer instance');
                        if (R > L || R < U)
                            throw RangeError('"value" argument is out of bounds');
                        if (C + T > m.length)
                            throw RangeError("Index out of range")
                    }
                    function checkIEEE754(m, R, C, T, L, U) {
                        if (C + T > m.length || C < 0)
                            throw RangeError("Index out of range")
                    }
                    function writeFloat(m, R, C, T, U) {
                        return R = +R,
                        C >>>= 0,
                        U || checkIEEE754(m, R, C, 4, 34028234663852886e22, -34028234663852886e22),
                        L.write(m, R, C, T, 23, 4),
                        C + 4
                    }
                    function writeDouble(m, R, C, T, U) {
                        return R = +R,
                        C >>>= 0,
                        U || checkIEEE754(m, R, C, 8, 17976931348623157e292, -17976931348623157e292),
                        L.write(m, R, C, T, 52, 8),
                        C + 8
                    }
                    R.Buffer = Buffer,
                    R.SlowBuffer = function(m) {
                        return +m != m && (m = 0),
                        Buffer.alloc(+m)
                    }
                    ,
                    R.INSPECT_MAX_BYTES = 50,
                    R.kMaxLength = 2147483647,
                    Buffer.TYPED_ARRAY_SUPPORT = function() {
                        try {
                            var m = new Uint8Array(1)
                              , R = {
                                foo: function() {
                                    return 42
                                }
                            };
                            return Object.setPrototypeOf(R, Uint8Array.prototype),
                            Object.setPrototypeOf(m, R),
                            42 === m.foo()
                        } catch (m) {
                            return !1
                        }
                    }(),
                    Buffer.TYPED_ARRAY_SUPPORT || "undefined" == typeof console || "function" != typeof console.error || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),
                    Object.defineProperty(Buffer.prototype, "parent", {
                        enumerable: !0,
                        get: function() {
                            if (Buffer.isBuffer(this))
                                return this.buffer
                        }
                    }),
                    Object.defineProperty(Buffer.prototype, "offset", {
                        enumerable: !0,
                        get: function() {
                            if (Buffer.isBuffer(this))
                                return this.byteOffset
                        }
                    }),
                    Buffer.poolSize = 8192,
                    Buffer.from = function(m, R, C) {
                        return from(m, R, C)
                    }
                    ,
                    Object.setPrototypeOf(Buffer.prototype, Uint8Array.prototype),
                    Object.setPrototypeOf(Buffer, Uint8Array),
                    Buffer.alloc = function(m, R, C) {
                        return (assertSize(m),
                        m <= 0) ? createBuffer(m) : void 0 !== R ? "string" == typeof C ? createBuffer(m).fill(R, C) : createBuffer(m).fill(R) : createBuffer(m)
                    }
                    ,
                    Buffer.allocUnsafe = function(m) {
                        return allocUnsafe(m)
                    }
                    ,
                    Buffer.allocUnsafeSlow = function(m) {
                        return allocUnsafe(m)
                    }
                    ,
                    Buffer.isBuffer = function(m) {
                        return null != m && !0 === m._isBuffer && m !== Buffer.prototype
                    }
                    ,
                    Buffer.compare = function(m, R) {
                        if (isInstance(m, Uint8Array) && (m = Buffer.from(m, m.offset, m.byteLength)),
                        isInstance(R, Uint8Array) && (R = Buffer.from(R, R.offset, R.byteLength)),
                        !Buffer.isBuffer(m) || !Buffer.isBuffer(R))
                            throw TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
                        if (m === R)
                            return 0;
                        for (var C = m.length, T = R.length, L = 0, U = Math.min(C, T); L < U; ++L)
                            if (m[L] !== R[L]) {
                                C = m[L],
                                T = R[L];
                                break
                            }
                        return C < T ? -1 : T < C ? 1 : 0
                    }
                    ,
                    Buffer.isEncoding = function(m) {
                        switch (String(m).toLowerCase()) {
                        case "hex":
                        case "utf8":
                        case "utf-8":
                        case "ascii":
                        case "latin1":
                        case "binary":
                        case "base64":
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return !0;
                        default:
                            return !1
                        }
                    }
                    ,
                    Buffer.concat = function(m, R) {
                        if (!Array.isArray(m))
                            throw TypeError('"list" argument must be an Array of Buffers');
                        if (0 === m.length)
                            return Buffer.alloc(0);
                        if (void 0 === R)
                            for (C = 0,
                            R = 0; C < m.length; ++C)
                                R += m[C].length;
                        var C, T = Buffer.allocUnsafe(R), L = 0;
                        for (C = 0; C < m.length; ++C) {
                            var U = m[C];
                            if (isInstance(U, Uint8Array) && (U = Buffer.from(U)),
                            !Buffer.isBuffer(U))
                                throw TypeError('"list" argument must be an Array of Buffers');
                            U.copy(T, L),
                            L += U.length
                        }
                        return T
                    }
                    ,
                    Buffer.byteLength = byteLength,
                    Buffer.prototype._isBuffer = !0,
                    Buffer.prototype.swap16 = function() {
                        var m = this.length;
                        if (m % 2 != 0)
                            throw RangeError("Buffer size must be a multiple of 16-bits");
                        for (var R = 0; R < m; R += 2)
                            swap(this, R, R + 1);
                        return this
                    }
                    ,
                    Buffer.prototype.swap32 = function() {
                        var m = this.length;
                        if (m % 4 != 0)
                            throw RangeError("Buffer size must be a multiple of 32-bits");
                        for (var R = 0; R < m; R += 4)
                            swap(this, R, R + 3),
                            swap(this, R + 1, R + 2);
                        return this
                    }
                    ,
                    Buffer.prototype.swap64 = function() {
                        var m = this.length;
                        if (m % 8 != 0)
                            throw RangeError("Buffer size must be a multiple of 64-bits");
                        for (var R = 0; R < m; R += 8)
                            swap(this, R, R + 7),
                            swap(this, R + 1, R + 6),
                            swap(this, R + 2, R + 5),
                            swap(this, R + 3, R + 4);
                        return this
                    }
                    ,
                    Buffer.prototype.toString = function() {
                        var m = this.length;
                        return 0 === m ? "" : 0 == arguments.length ? utf8Slice(this, 0, m) : slowToString.apply(this, arguments)
                    }
                    ,
                    Buffer.prototype.toLocaleString = Buffer.prototype.toString,
                    Buffer.prototype.equals = function(m) {
                        if (!Buffer.isBuffer(m))
                            throw TypeError("Argument must be a Buffer");
                        return this === m || 0 === Buffer.compare(this, m)
                    }
                    ,
                    Buffer.prototype.inspect = function() {
                        var m = ""
                          , C = R.INSPECT_MAX_BYTES;
                        return m = this.toString("hex", 0, C).replace(/(.{2})/g, "$1 ").trim(),
                        this.length > C && (m += " ... "),
                        "<Buffer " + m + ">"
                    }
                    ,
                    U && (Buffer.prototype[U] = Buffer.prototype.inspect),
                    Buffer.prototype.compare = function(m, R, C, T, L) {
                        if (isInstance(m, Uint8Array) && (m = Buffer.from(m, m.offset, m.byteLength)),
                        !Buffer.isBuffer(m))
                            throw TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof m);
                        if (void 0 === R && (R = 0),
                        void 0 === C && (C = m ? m.length : 0),
                        void 0 === T && (T = 0),
                        void 0 === L && (L = this.length),
                        R < 0 || C > m.length || T < 0 || L > this.length)
                            throw RangeError("out of range index");
                        if (T >= L && R >= C)
                            return 0;
                        if (T >= L)
                            return -1;
                        if (R >= C)
                            return 1;
                        if (R >>>= 0,
                        C >>>= 0,
                        T >>>= 0,
                        L >>>= 0,
                        this === m)
                            return 0;
                        for (var U = L - T, B = C - R, $ = Math.min(U, B), V = this.slice(T, L), H = m.slice(R, C), W = 0; W < $; ++W)
                            if (V[W] !== H[W]) {
                                U = V[W],
                                B = H[W];
                                break
                            }
                        return U < B ? -1 : B < U ? 1 : 0
                    }
                    ,
                    Buffer.prototype.includes = function(m, R, C) {
                        return -1 !== this.indexOf(m, R, C)
                    }
                    ,
                    Buffer.prototype.indexOf = function(m, R, C) {
                        return bidirectionalIndexOf(this, m, R, C, !0)
                    }
                    ,
                    Buffer.prototype.lastIndexOf = function(m, R, C) {
                        return bidirectionalIndexOf(this, m, R, C, !1)
                    }
                    ,
                    Buffer.prototype.write = function(m, R, C, T) {
                        if (void 0 === R)
                            T = "utf8",
                            C = this.length,
                            R = 0;
                        else if (void 0 === C && "string" == typeof R)
                            T = R,
                            C = this.length,
                            R = 0;
                        else if (isFinite(R))
                            R >>>= 0,
                            isFinite(C) ? (C >>>= 0,
                            void 0 === T && (T = "utf8")) : (T = C,
                            C = void 0);
                        else
                            throw Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                        var L, U, B, $, V, H, W, q, G, Z, Y, K, J = this.length - R;
                        if ((void 0 === C || C > J) && (C = J),
                        m.length > 0 && (C < 0 || R < 0) || R > this.length)
                            throw RangeError("Attempt to write outside buffer bounds");
                        T || (T = "utf8");
                        for (var X = !1; ; )
                            switch (T) {
                            case "hex":
                                return function(m, R, C, T) {
                                    C = Number(C) || 0;
                                    var L = m.length - C;
                                    T ? (T = Number(T)) > L && (T = L) : T = L;
                                    var U = R.length;
                                    T > U / 2 && (T = U / 2);
                                    for (var B = 0; B < T; ++B) {
                                        var $ = parseInt(R.substr(2 * B, 2), 16);
                                        if ($ != $)
                                            break;
                                        m[C + B] = $
                                    }
                                    return B
                                }(this, m, R, C);
                            case "utf8":
                            case "utf-8":
                                return V = R,
                                H = C,
                                blitBuffer(utf8ToBytes(m, this.length - V), this, V, H);
                            case "ascii":
                                return W = R,
                                q = C,
                                blitBuffer(asciiToBytes(m), this, W, q);
                            case "latin1":
                            case "binary":
                                return L = this,
                                U = m,
                                B = R,
                                $ = C,
                                blitBuffer(asciiToBytes(U), L, B, $);
                            case "base64":
                                return G = R,
                                Z = C,
                                blitBuffer(base64ToBytes(m), this, G, Z);
                            case "ucs2":
                            case "ucs-2":
                            case "utf16le":
                            case "utf-16le":
                                return Y = R,
                                K = C,
                                blitBuffer(function(m, R) {
                                    for (var C, T, L = [], U = 0; U < m.length && !((R -= 2) < 0); ++U)
                                        T = (C = m.charCodeAt(U)) >> 8,
                                        L.push(C % 256),
                                        L.push(T);
                                    return L
                                }(m, this.length - Y), this, Y, K);
                            default:
                                if (X)
                                    throw TypeError("Unknown encoding: " + T);
                                T = ("" + T).toLowerCase(),
                                X = !0
                            }
                    }
                    ,
                    Buffer.prototype.toJSON = function() {
                        return {
                            type: "Buffer",
                            data: Array.prototype.slice.call(this._arr || this, 0)
                        }
                    }
                    ,
                    Buffer.prototype.slice = function(m, R) {
                        var C = this.length;
                        m = ~~m,
                        R = void 0 === R ? C : ~~R,
                        m < 0 ? (m += C) < 0 && (m = 0) : m > C && (m = C),
                        R < 0 ? (R += C) < 0 && (R = 0) : R > C && (R = C),
                        R < m && (R = m);
                        var T = this.subarray(m, R);
                        return Object.setPrototypeOf(T, Buffer.prototype),
                        T
                    }
                    ,
                    Buffer.prototype.readUIntLE = function(m, R, C) {
                        m >>>= 0,
                        R >>>= 0,
                        C || checkOffset(m, R, this.length);
                        for (var T = this[m], L = 1, U = 0; ++U < R && (L *= 256); )
                            T += this[m + U] * L;
                        return T
                    }
                    ,
                    Buffer.prototype.readUIntBE = function(m, R, C) {
                        m >>>= 0,
                        R >>>= 0,
                        C || checkOffset(m, R, this.length);
                        for (var T = this[m + --R], L = 1; R > 0 && (L *= 256); )
                            T += this[m + --R] * L;
                        return T
                    }
                    ,
                    Buffer.prototype.readUInt8 = function(m, R) {
                        return m >>>= 0,
                        R || checkOffset(m, 1, this.length),
                        this[m]
                    }
                    ,
                    Buffer.prototype.readUInt16LE = function(m, R) {
                        return m >>>= 0,
                        R || checkOffset(m, 2, this.length),
                        this[m] | this[m + 1] << 8
                    }
                    ,
                    Buffer.prototype.readUInt16BE = function(m, R) {
                        return m >>>= 0,
                        R || checkOffset(m, 2, this.length),
                        this[m] << 8 | this[m + 1]
                    }
                    ,
                    Buffer.prototype.readUInt32LE = function(m, R) {
                        return m >>>= 0,
                        R || checkOffset(m, 4, this.length),
                        (this[m] | this[m + 1] << 8 | this[m + 2] << 16) + 16777216 * this[m + 3]
                    }
                    ,
                    Buffer.prototype.readUInt32BE = function(m, R) {
                        return m >>>= 0,
                        R || checkOffset(m, 4, this.length),
                        16777216 * this[m] + (this[m + 1] << 16 | this[m + 2] << 8 | this[m + 3])
                    }
                    ,
                    Buffer.prototype.readIntLE = function(m, R, C) {
                        m >>>= 0,
                        R >>>= 0,
                        C || checkOffset(m, R, this.length);
                        for (var T = this[m], L = 1, U = 0; ++U < R && (L *= 256); )
                            T += this[m + U] * L;
                        return T >= (L *= 128) && (T -= Math.pow(2, 8 * R)),
                        T
                    }
                    ,
                    Buffer.prototype.readIntBE = function(m, R, C) {
                        m >>>= 0,
                        R >>>= 0,
                        C || checkOffset(m, R, this.length);
                        for (var T = R, L = 1, U = this[m + --T]; T > 0 && (L *= 256); )
                            U += this[m + --T] * L;
                        return U >= (L *= 128) && (U -= Math.pow(2, 8 * R)),
                        U
                    }
                    ,
                    Buffer.prototype.readInt8 = function(m, R) {
                        return (m >>>= 0,
                        R || checkOffset(m, 1, this.length),
                        128 & this[m]) ? -((255 - this[m] + 1) * 1) : this[m]
                    }
                    ,
                    Buffer.prototype.readInt16LE = function(m, R) {
                        m >>>= 0,
                        R || checkOffset(m, 2, this.length);
                        var C = this[m] | this[m + 1] << 8;
                        return 32768 & C ? 4294901760 | C : C
                    }
                    ,
                    Buffer.prototype.readInt16BE = function(m, R) {
                        m >>>= 0,
                        R || checkOffset(m, 2, this.length);
                        var C = this[m + 1] | this[m] << 8;
                        return 32768 & C ? 4294901760 | C : C
                    }
                    ,
                    Buffer.prototype.readInt32LE = function(m, R) {
                        return m >>>= 0,
                        R || checkOffset(m, 4, this.length),
                        this[m] | this[m + 1] << 8 | this[m + 2] << 16 | this[m + 3] << 24
                    }
                    ,
                    Buffer.prototype.readInt32BE = function(m, R) {
                        return m >>>= 0,
                        R || checkOffset(m, 4, this.length),
                        this[m] << 24 | this[m + 1] << 16 | this[m + 2] << 8 | this[m + 3]
                    }
                    ,
                    Buffer.prototype.readFloatLE = function(m, R) {
                        return m >>>= 0,
                        R || checkOffset(m, 4, this.length),
                        L.read(this, m, !0, 23, 4)
                    }
                    ,
                    Buffer.prototype.readFloatBE = function(m, R) {
                        return m >>>= 0,
                        R || checkOffset(m, 4, this.length),
                        L.read(this, m, !1, 23, 4)
                    }
                    ,
                    Buffer.prototype.readDoubleLE = function(m, R) {
                        return m >>>= 0,
                        R || checkOffset(m, 8, this.length),
                        L.read(this, m, !0, 52, 8)
                    }
                    ,
                    Buffer.prototype.readDoubleBE = function(m, R) {
                        return m >>>= 0,
                        R || checkOffset(m, 8, this.length),
                        L.read(this, m, !1, 52, 8)
                    }
                    ,
                    Buffer.prototype.writeUIntLE = function(m, R, C, T) {
                        if (m = +m,
                        R >>>= 0,
                        C >>>= 0,
                        !T) {
                            var L = Math.pow(2, 8 * C) - 1;
                            checkInt(this, m, R, C, L, 0)
                        }
                        var U = 1
                          , B = 0;
                        for (this[R] = 255 & m; ++B < C && (U *= 256); )
                            this[R + B] = m / U & 255;
                        return R + C
                    }
                    ,
                    Buffer.prototype.writeUIntBE = function(m, R, C, T) {
                        if (m = +m,
                        R >>>= 0,
                        C >>>= 0,
                        !T) {
                            var L = Math.pow(2, 8 * C) - 1;
                            checkInt(this, m, R, C, L, 0)
                        }
                        var U = C - 1
                          , B = 1;
                        for (this[R + U] = 255 & m; --U >= 0 && (B *= 256); )
                            this[R + U] = m / B & 255;
                        return R + C
                    }
                    ,
                    Buffer.prototype.writeUInt8 = function(m, R, C) {
                        return m = +m,
                        R >>>= 0,
                        C || checkInt(this, m, R, 1, 255, 0),
                        this[R] = 255 & m,
                        R + 1
                    }
                    ,
                    Buffer.prototype.writeUInt16LE = function(m, R, C) {
                        return m = +m,
                        R >>>= 0,
                        C || checkInt(this, m, R, 2, 65535, 0),
                        this[R] = 255 & m,
                        this[R + 1] = m >>> 8,
                        R + 2
                    }
                    ,
                    Buffer.prototype.writeUInt16BE = function(m, R, C) {
                        return m = +m,
                        R >>>= 0,
                        C || checkInt(this, m, R, 2, 65535, 0),
                        this[R] = m >>> 8,
                        this[R + 1] = 255 & m,
                        R + 2
                    }
                    ,
                    Buffer.prototype.writeUInt32LE = function(m, R, C) {
                        return m = +m,
                        R >>>= 0,
                        C || checkInt(this, m, R, 4, 4294967295, 0),
                        this[R + 3] = m >>> 24,
                        this[R + 2] = m >>> 16,
                        this[R + 1] = m >>> 8,
                        this[R] = 255 & m,
                        R + 4
                    }
                    ,
                    Buffer.prototype.writeUInt32BE = function(m, R, C) {
                        return m = +m,
                        R >>>= 0,
                        C || checkInt(this, m, R, 4, 4294967295, 0),
                        this[R] = m >>> 24,
                        this[R + 1] = m >>> 16,
                        this[R + 2] = m >>> 8,
                        this[R + 3] = 255 & m,
                        R + 4
                    }
                    ,
                    Buffer.prototype.writeIntLE = function(m, R, C, T) {
                        if (m = +m,
                        R >>>= 0,
                        !T) {
                            var L = Math.pow(2, 8 * C - 1);
                            checkInt(this, m, R, C, L - 1, -L)
                        }
                        var U = 0
                          , B = 1
                          , $ = 0;
                        for (this[R] = 255 & m; ++U < C && (B *= 256); )
                            m < 0 && 0 === $ && 0 !== this[R + U - 1] && ($ = 1),
                            this[R + U] = (m / B >> 0) - $ & 255;
                        return R + C
                    }
                    ,
                    Buffer.prototype.writeIntBE = function(m, R, C, T) {
                        if (m = +m,
                        R >>>= 0,
                        !T) {
                            var L = Math.pow(2, 8 * C - 1);
                            checkInt(this, m, R, C, L - 1, -L)
                        }
                        var U = C - 1
                          , B = 1
                          , $ = 0;
                        for (this[R + U] = 255 & m; --U >= 0 && (B *= 256); )
                            m < 0 && 0 === $ && 0 !== this[R + U + 1] && ($ = 1),
                            this[R + U] = (m / B >> 0) - $ & 255;
                        return R + C
                    }
                    ,
                    Buffer.prototype.writeInt8 = function(m, R, C) {
                        return m = +m,
                        R >>>= 0,
                        C || checkInt(this, m, R, 1, 127, -128),
                        m < 0 && (m = 255 + m + 1),
                        this[R] = 255 & m,
                        R + 1
                    }
                    ,
                    Buffer.prototype.writeInt16LE = function(m, R, C) {
                        return m = +m,
                        R >>>= 0,
                        C || checkInt(this, m, R, 2, 32767, -32768),
                        this[R] = 255 & m,
                        this[R + 1] = m >>> 8,
                        R + 2
                    }
                    ,
                    Buffer.prototype.writeInt16BE = function(m, R, C) {
                        return m = +m,
                        R >>>= 0,
                        C || checkInt(this, m, R, 2, 32767, -32768),
                        this[R] = m >>> 8,
                        this[R + 1] = 255 & m,
                        R + 2
                    }
                    ,
                    Buffer.prototype.writeInt32LE = function(m, R, C) {
                        return m = +m,
                        R >>>= 0,
                        C || checkInt(this, m, R, 4, 2147483647, -2147483648),
                        this[R] = 255 & m,
                        this[R + 1] = m >>> 8,
                        this[R + 2] = m >>> 16,
                        this[R + 3] = m >>> 24,
                        R + 4
                    }
                    ,
                    Buffer.prototype.writeInt32BE = function(m, R, C) {
                        return m = +m,
                        R >>>= 0,
                        C || checkInt(this, m, R, 4, 2147483647, -2147483648),
                        m < 0 && (m = 4294967295 + m + 1),
                        this[R] = m >>> 24,
                        this[R + 1] = m >>> 16,
                        this[R + 2] = m >>> 8,
                        this[R + 3] = 255 & m,
                        R + 4
                    }
                    ,
                    Buffer.prototype.writeFloatLE = function(m, R, C) {
                        return writeFloat(this, m, R, !0, C)
                    }
                    ,
                    Buffer.prototype.writeFloatBE = function(m, R, C) {
                        return writeFloat(this, m, R, !1, C)
                    }
                    ,
                    Buffer.prototype.writeDoubleLE = function(m, R, C) {
                        return writeDouble(this, m, R, !0, C)
                    }
                    ,
                    Buffer.prototype.writeDoubleBE = function(m, R, C) {
                        return writeDouble(this, m, R, !1, C)
                    }
                    ,
                    Buffer.prototype.copy = function(m, R, C, T) {
                        if (!Buffer.isBuffer(m))
                            throw TypeError("argument should be a Buffer");
                        if (C || (C = 0),
                        T || 0 === T || (T = this.length),
                        R >= m.length && (R = m.length),
                        R || (R = 0),
                        T > 0 && T < C && (T = C),
                        T === C || 0 === m.length || 0 === this.length)
                            return 0;
                        if (R < 0)
                            throw RangeError("targetStart out of bounds");
                        if (C < 0 || C >= this.length)
                            throw RangeError("Index out of range");
                        if (T < 0)
                            throw RangeError("sourceEnd out of bounds");
                        T > this.length && (T = this.length),
                        m.length - R < T - C && (T = m.length - R + C);
                        var L = T - C;
                        if (this === m && "function" == typeof Uint8Array.prototype.copyWithin)
                            this.copyWithin(R, C, T);
                        else if (this === m && C < R && R < T)
                            for (var U = L - 1; U >= 0; --U)
                                m[U + R] = this[U + C];
                        else
                            Uint8Array.prototype.set.call(m, this.subarray(C, T), R);
                        return L
                    }
                    ,
                    Buffer.prototype.fill = function(m, R, C, T) {
                        if ("string" == typeof m) {
                            if ("string" == typeof R ? (T = R,
                            R = 0,
                            C = this.length) : "string" == typeof C && (T = C,
                            C = this.length),
                            void 0 !== T && "string" != typeof T)
                                throw TypeError("encoding must be a string");
                            if ("string" == typeof T && !Buffer.isEncoding(T))
                                throw TypeError("Unknown encoding: " + T);
                            if (1 === m.length) {
                                var L, U = m.charCodeAt(0);
                                ("utf8" === T && U < 128 || "latin1" === T) && (m = U)
                            }
                        } else
                            "number" == typeof m ? m &= 255 : "boolean" == typeof m && (m = Number(m));
                        if (R < 0 || this.length < R || this.length < C)
                            throw RangeError("Out of range index");
                        if (C <= R)
                            return this;
                        if (R >>>= 0,
                        C = void 0 === C ? this.length : C >>> 0,
                        m || (m = 0),
                        "number" == typeof m)
                            for (L = R; L < C; ++L)
                                this[L] = m;
                        else {
                            var B = Buffer.isBuffer(m) ? m : Buffer.from(m, T)
                              , $ = B.length;
                            if (0 === $)
                                throw TypeError('The value "' + m + '" is invalid for argument "value"');
                            for (L = 0; L < C - R; ++L)
                                this[L + R] = B[L % $]
                        }
                        return this
                    }
                    ;
                    var B = /[^+/0-9A-Za-z-_]/g;
                    function utf8ToBytes(m, R) {
                        R = R || 1 / 0;
                        for (var C, T = m.length, L = null, U = [], B = 0; B < T; ++B) {
                            if ((C = m.charCodeAt(B)) > 55295 && C < 57344) {
                                if (!L) {
                                    if (C > 56319 || B + 1 === T) {
                                        (R -= 3) > -1 && U.push(239, 191, 189);
                                        continue
                                    }
                                    L = C;
                                    continue
                                }
                                if (C < 56320) {
                                    (R -= 3) > -1 && U.push(239, 191, 189),
                                    L = C;
                                    continue
                                }
                                C = (L - 55296 << 10 | C - 56320) + 65536
                            } else
                                L && (R -= 3) > -1 && U.push(239, 191, 189);
                            if (L = null,
                            C < 128) {
                                if ((R -= 1) < 0)
                                    break;
                                U.push(C)
                            } else if (C < 2048) {
                                if ((R -= 2) < 0)
                                    break;
                                U.push(C >> 6 | 192, 63 & C | 128)
                            } else if (C < 65536) {
                                if ((R -= 3) < 0)
                                    break;
                                U.push(C >> 12 | 224, C >> 6 & 63 | 128, 63 & C | 128)
                            } else if (C < 1114112) {
                                if ((R -= 4) < 0)
                                    break;
                                U.push(C >> 18 | 240, C >> 12 & 63 | 128, C >> 6 & 63 | 128, 63 & C | 128)
                            } else
                                throw Error("Invalid code point")
                        }
                        return U
                    }
                    function asciiToBytes(m) {
                        for (var R = [], C = 0; C < m.length; ++C)
                            R.push(255 & m.charCodeAt(C));
                        return R
                    }
                    function base64ToBytes(m) {
                        return T.toByteArray(function(m) {
                            if ((m = (m = m.split("=")[0]).trim().replace(B, "")).length < 2)
                                return "";
                            for (; m.length % 4 != 0; )
                                m += "=";
                            return m
                        }(m))
                    }
                    function blitBuffer(m, R, C, T) {
                        for (var L = 0; L < T && !(L + C >= R.length) && !(L >= m.length); ++L)
                            R[L + C] = m[L];
                        return L
                    }
                    function isInstance(m, R) {
                        return m instanceof R || null != m && null != m.constructor && null != m.constructor.name && m.constructor.name === R.name
                    }
                    var $ = function() {
                        for (var m = "0123456789abcdef", R = Array(256), C = 0; C < 16; ++C)
                            for (var T = 16 * C, L = 0; L < 16; ++L)
                                R[T + L] = m[C] + m[L];
                        return R
                    }()
                },
                783: function(m, R) {
                    /*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
                    R.read = function(m, R, C, T, L) {
                        var U, B, $ = 8 * L - T - 1, V = (1 << $) - 1, H = V >> 1, W = -7, q = C ? L - 1 : 0, G = C ? -1 : 1, Z = m[R + q];
                        for (q += G,
                        U = Z & (1 << -W) - 1,
                        Z >>= -W,
                        W += $; W > 0; U = 256 * U + m[R + q],
                        q += G,
                        W -= 8)
                            ;
                        for (B = U & (1 << -W) - 1,
                        U >>= -W,
                        W += T; W > 0; B = 256 * B + m[R + q],
                        q += G,
                        W -= 8)
                            ;
                        if (0 === U)
                            U = 1 - H;
                        else {
                            if (U === V)
                                return B ? NaN : (Z ? -1 : 1) * (1 / 0);
                            B += Math.pow(2, T),
                            U -= H
                        }
                        return (Z ? -1 : 1) * B * Math.pow(2, U - T)
                    }
                    ,
                    R.write = function(m, R, C, T, L, U) {
                        var B, $, V, H = 8 * U - L - 1, W = (1 << H) - 1, q = W >> 1, G = 23 === L ? 5960464477539062e-23 : 0, Z = T ? 0 : U - 1, Y = T ? 1 : -1, K = R < 0 || 0 === R && 1 / R < 0 ? 1 : 0;
                        for (isNaN(R = Math.abs(R)) || R === 1 / 0 ? ($ = isNaN(R) ? 1 : 0,
                        B = W) : (B = Math.floor(Math.log(R) / Math.LN2),
                        R * (V = Math.pow(2, -B)) < 1 && (B--,
                        V *= 2),
                        B + q >= 1 ? R += G / V : R += G * Math.pow(2, 1 - q),
                        R * V >= 2 && (B++,
                        V /= 2),
                        B + q >= W ? ($ = 0,
                        B = W) : B + q >= 1 ? ($ = (R * V - 1) * Math.pow(2, L),
                        B += q) : ($ = R * Math.pow(2, q - 1) * Math.pow(2, L),
                        B = 0)); L >= 8; m[C + Z] = 255 & $,
                        Z += Y,
                        $ /= 256,
                        L -= 8)
                            ;
                        for (B = B << L | $,
                        H += L; H > 0; m[C + Z] = 255 & B,
                        Z += Y,
                        B /= 256,
                        H -= 8)
                            ;
                        m[C + Z - Y] |= 128 * K
                    }
                }
            }
              , C = {};
            function __nccwpck_require__(m) {
                var T = C[m];
                if (void 0 !== T)
                    return T.exports;
                var L = C[m] = {
                    exports: {}
                }
                  , U = !0;
                try {
                    R[m](L, L.exports, __nccwpck_require__),
                    U = !1
                } finally {
                    U && delete C[m]
                }
                return L.exports
            }
            __nccwpck_require__.ab = "//";
            var T = __nccwpck_require__(72);
            m.exports = T
        }()
    },
    993: function() {},
    46305: function() {},
    17591: function() {},
    77663: function(m) {
        !function() {
            var R = {
                229: function(m) {
                    var R, C, T, L = m.exports = {};
                    function defaultSetTimout() {
                        throw Error("setTimeout has not been defined")
                    }
                    function defaultClearTimeout() {
                        throw Error("clearTimeout has not been defined")
                    }
                    function runTimeout(m) {
                        if (R === setTimeout)
                            return setTimeout(m, 0);
                        if ((R === defaultSetTimout || !R) && setTimeout)
                            return R = setTimeout,
                            setTimeout(m, 0);
                        try {
                            return R(m, 0)
                        } catch (C) {
                            try {
                                return R.call(null, m, 0)
                            } catch (C) {
                                return R.call(this, m, 0)
                            }
                        }
                    }
                    !function() {
                        try {
                            R = "function" == typeof setTimeout ? setTimeout : defaultSetTimout
                        } catch (m) {
                            R = defaultSetTimout
                        }
                        try {
                            C = "function" == typeof clearTimeout ? clearTimeout : defaultClearTimeout
                        } catch (m) {
                            C = defaultClearTimeout
                        }
                    }();
                    var U = []
                      , B = !1
                      , $ = -1;
                    function cleanUpNextTick() {
                        B && T && (B = !1,
                        T.length ? U = T.concat(U) : $ = -1,
                        U.length && drainQueue())
                    }
                    function drainQueue() {
                        if (!B) {
                            var m = runTimeout(cleanUpNextTick);
                            B = !0;
                            for (var R = U.length; R; ) {
                                for (T = U,
                                U = []; ++$ < R; )
                                    T && T[$].run();
                                $ = -1,
                                R = U.length
                            }
                            T = null,
                            B = !1,
                            function(m) {
                                if (C === clearTimeout)
                                    return clearTimeout(m);
                                if ((C === defaultClearTimeout || !C) && clearTimeout)
                                    return C = clearTimeout,
                                    clearTimeout(m);
                                try {
                                    C(m)
                                } catch (R) {
                                    try {
                                        return C.call(null, m)
                                    } catch (R) {
                                        return C.call(this, m)
                                    }
                                }
                            }(m)
                        }
                    }
                    function Item(m, R) {
                        this.fun = m,
                        this.array = R
                    }
                    function noop() {}
                    L.nextTick = function(m) {
                        var R = Array(arguments.length - 1);
                        if (arguments.length > 1)
                            for (var C = 1; C < arguments.length; C++)
                                R[C - 1] = arguments[C];
                        U.push(new Item(m,R)),
                        1 !== U.length || B || runTimeout(drainQueue)
                    }
                    ,
                    Item.prototype.run = function() {
                        this.fun.apply(null, this.array)
                    }
                    ,
                    L.title = "browser",
                    L.browser = !0,
                    L.env = {},
                    L.argv = [],
                    L.version = "",
                    L.versions = {},
                    L.on = noop,
                    L.addListener = noop,
                    L.once = noop,
                    L.off = noop,
                    L.removeListener = noop,
                    L.removeAllListeners = noop,
                    L.emit = noop,
                    L.prependListener = noop,
                    L.prependOnceListener = noop,
                    L.listeners = function(m) {
                        return []
                    }
                    ,
                    L.binding = function(m) {
                        throw Error("process.binding is not supported")
                    }
                    ,
                    L.cwd = function() {
                        return "/"
                    }
                    ,
                    L.chdir = function(m) {
                        throw Error("process.chdir is not supported")
                    }
                    ,
                    L.umask = function() {
                        return 0
                    }
                }
            }
              , C = {};
            function __nccwpck_require__(m) {
                var T = C[m];
                if (void 0 !== T)
                    return T.exports;
                var L = C[m] = {
                    exports: {}
                }
                  , U = !0;
                try {
                    R[m](L, L.exports, __nccwpck_require__),
                    U = !1
                } finally {
                    U && delete C[m]
                }
                return L.exports
            }
            __nccwpck_require__.ab = "//";
            var T = __nccwpck_require__(229);
            m.exports = T
        }()
    },
    11163: function(m, R, C) {
        m.exports = C(24751)
    },
    57715: function(m, R, C) {
        "use strict";
        C.d(R, {
            OO: function() {
                return q
            },
            zv: function() {
                return G
            },
            JP: function() {
                return getDefaults
            },
            nI: function() {
                return getI18n
            },
            Db: function() {
                return Z
            }
        });
        var T, L = C(15671), U = C(43144), B = C(4942), $ = C(67294), V = /&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34|nbsp|#160|copy|#169|reg|#174|hellip|#8230|#x2F|#47);/g, H = {
            "&amp;": "&",
            "&#38;": "&",
            "&lt;": "<",
            "&#60;": "<",
            "&gt;": ">",
            "&#62;": ">",
            "&apos;": "'",
            "&#39;": "'",
            "&quot;": '"',
            "&#34;": '"',
            "&nbsp;": " ",
            "&#160;": " ",
            "&copy;": "\xa9",
            "&#169;": "\xa9",
            "&reg;": "\xae",
            "&#174;": "\xae",
            "&hellip;": "…",
            "&#8230;": "…",
            "&#x2F;": "/",
            "&#47;": "/"
        }, unescapeHtmlEntity = function(m) {
            return H[m]
        };
        function ownKeys(m, R) {
            var C = Object.keys(m);
            if (Object.getOwnPropertySymbols) {
                var T = Object.getOwnPropertySymbols(m);
                R && (T = T.filter(function(R) {
                    return Object.getOwnPropertyDescriptor(m, R).enumerable
                })),
                C.push.apply(C, T)
            }
            return C
        }
        function _objectSpread(m) {
            for (var R = 1; R < arguments.length; R++) {
                var C = null != arguments[R] ? arguments[R] : {};
                R % 2 ? ownKeys(Object(C), !0).forEach(function(R) {
                    (0,
                    B.Z)(m, R, C[R])
                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(m, Object.getOwnPropertyDescriptors(C)) : ownKeys(Object(C)).forEach(function(R) {
                    Object.defineProperty(m, R, Object.getOwnPropertyDescriptor(C, R))
                })
            }
            return m
        }
        var W = {
            bindI18n: "languageChanged",
            bindI18nStore: "",
            transEmptyNodeValue: "",
            transSupportBasicHtmlNodes: !0,
            transWrapTextNodes: "",
            transKeepBasicHtmlNodesFor: ["br", "strong", "i", "p"],
            useSuspense: !0,
            unescape: function(m) {
                return m.replace(V, unescapeHtmlEntity)
            }
        }
          , q = (0,
        $.createContext)();
        function getDefaults() {
            return W
        }
        var G = function() {
            function ReportNamespaces() {
                (0,
                L.Z)(this, ReportNamespaces),
                this.usedNamespaces = {}
            }
            return (0,
            U.Z)(ReportNamespaces, [{
                key: "addUsedNamespaces",
                value: function(m) {
                    var R = this;
                    m.forEach(function(m) {
                        R.usedNamespaces[m] || (R.usedNamespaces[m] = !0)
                    })
                }
            }, {
                key: "getUsedNamespaces",
                value: function() {
                    return Object.keys(this.usedNamespaces)
                }
            }]),
            ReportNamespaces
        }();
        function getI18n() {
            return T
        }
        var Z = {
            type: "3rdParty",
            init: function(m) {
                !function() {
                    var m = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    W = _objectSpread(_objectSpread({}, W), m)
                }(m.options.react),
                T = m
            }
        }
    },
    25617: function(m, R, C) {
        "use strict";
        C.d(R, {
            zt: function() {
                return components_Provider
            },
            I0: function() {
                return G
            },
            v9: function() {
                return Z
            }
        });
        var T, L, U, B, $ = C(67294), V = $.createContext(null), batch = function(m) {
            m()
        }, H = {
            notify: function() {},
            get: function() {
                return []
            }
        };
        function Subscription_createSubscription(m, R) {
            var C, T = H;
            function handleChangeWrapper() {
                L.onStateChange && L.onStateChange()
            }
            function trySubscribe() {
                if (!C) {
                    var L, U, B;
                    C = R ? R.addNestedSub(handleChangeWrapper) : m.subscribe(handleChangeWrapper),
                    L = batch,
                    U = null,
                    B = null,
                    T = {
                        clear: function() {
                            U = null,
                            B = null
                        },
                        notify: function() {
                            L(function() {
                                for (var m = U; m; )
                                    m.callback(),
                                    m = m.next
                            })
                        },
                        get: function() {
                            for (var m = [], R = U; R; )
                                m.push(R),
                                R = R.next;
                            return m
                        },
                        subscribe: function(m) {
                            var R = !0
                              , C = B = {
                                callback: m,
                                next: null,
                                prev: B
                            };
                            return C.prev ? C.prev.next = C : U = C,
                            function() {
                                R && null !== U && (R = !1,
                                C.next ? C.next.prev = C.prev : B = C.prev,
                                C.prev ? C.prev.next = C.next : U = C.next)
                            }
                        }
                    }
                }
            }
            var L = {
                addNestedSub: function(m) {
                    return trySubscribe(),
                    T.subscribe(m)
                },
                notifyNestedSubs: function() {
                    T.notify()
                },
                handleChangeWrapper: handleChangeWrapper,
                isSubscribed: function() {
                    return !!C
                },
                trySubscribe: trySubscribe,
                tryUnsubscribe: function() {
                    C && (C(),
                    C = void 0,
                    T.clear(),
                    T = H)
                },
                getListeners: function() {
                    return T
                }
            };
            return L
        }
        var W = "undefined" != typeof window && void 0 !== window.document && void 0 !== window.document.createElement ? $.useLayoutEffect : $.useEffect
          , components_Provider = function(m) {
            var R = m.store
              , C = m.context
              , T = m.children
              , L = (0,
            $.useMemo)(function() {
                var m = Subscription_createSubscription(R);
                return {
                    store: R,
                    subscription: m
                }
            }, [R])
              , U = (0,
            $.useMemo)(function() {
                return R.getState()
            }, [R]);
            W(function() {
                var m = L.subscription;
                return m.onStateChange = m.notifyNestedSubs,
                m.trySubscribe(),
                U !== R.getState() && m.notifyNestedSubs(),
                function() {
                    m.tryUnsubscribe(),
                    m.onStateChange = null
                }
            }, [L, U]);
            var B = C || V;
            return $.createElement(B.Provider, {
                value: L
            }, T)
        };
        function useReduxContext_useReduxContext() {
            return (0,
            $.useContext)(V)
        }
        function createStoreHook(m) {
            void 0 === m && (m = V);
            var R = m === V ? useReduxContext_useReduxContext : function() {
                return (0,
                $.useContext)(m)
            }
            ;
            return function() {
                return R().store
            }
        }
        C(8679),
        C(72973),
        C(87462);
        var q = createStoreHook()
          , G = (void 0 === T && (T = V),
        L = T === V ? q : createStoreHook(T),
        function() {
            return L().dispatch
        }
        )
          , refEquality = function(m, R) {
            return m === R
        }
          , Z = (void 0 === U && (U = V),
        B = U === V ? useReduxContext_useReduxContext : function() {
            return (0,
            $.useContext)(U)
        }
        ,
        function(m, R) {
            void 0 === R && (R = refEquality);
            var C = B()
              , T = function(m, R, C, T) {
                var L, U = (0,
                $.useReducer)(function(m) {
                    return m + 1
                }, 0)[1], B = (0,
                $.useMemo)(function() {
                    return Subscription_createSubscription(C, T)
                }, [C, T]), V = (0,
                $.useRef)(), H = (0,
                $.useRef)(), q = (0,
                $.useRef)(), G = (0,
                $.useRef)(), Z = C.getState();
                try {
                    if (m !== H.current || Z !== q.current || V.current) {
                        var Y = m(Z);
                        L = void 0 !== G.current && R(Y, G.current) ? G.current : Y
                    } else
                        L = G.current
                } catch (m) {
                    throw V.current && (m.message += "\nThe error may be correlated with this previous error:\n" + V.current.stack + "\n\n"),
                    m
                }
                return W(function() {
                    H.current = m,
                    q.current = Z,
                    G.current = L,
                    V.current = void 0
                }),
                W(function() {
                    function checkForUpdates() {
                        try {
                            var m = C.getState();
                            if (m === q.current)
                                return;
                            var T = H.current(m);
                            if (R(T, G.current))
                                return;
                            G.current = T,
                            q.current = m
                        } catch (m) {
                            V.current = m
                        }
                        U()
                    }
                    return B.onStateChange = checkForUpdates,
                    B.trySubscribe(),
                    checkForUpdates(),
                    function() {
                        return B.tryUnsubscribe()
                    }
                }, [C, B]),
                L
            }(m, R, C.store, C.subscription);
            return (0,
            $.useDebugValue)(T),
            T
        }
        );
        batch = C(73935).unstable_batchedUpdates
    },
    88359: function(m, R) {
        "use strict";
        /** @license React v17.0.2
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
        var C = 60103
          , T = 60106
          , L = 60107
          , U = 60108
          , B = 60114
          , $ = 60109
          , V = 60110
          , H = 60112
          , W = 60113
          , q = 60120
          , G = 60115
          , Z = 60116;
        if ("function" == typeof Symbol && Symbol.for) {
            var Y = Symbol.for;
            Y("react.element"),
            Y("react.portal"),
            Y("react.fragment"),
            Y("react.strict_mode"),
            Y("react.profiler"),
            Y("react.provider"),
            Y("react.context"),
            Y("react.forward_ref"),
            Y("react.suspense"),
            Y("react.suspense_list"),
            Y("react.memo"),
            Y("react.lazy"),
            Y("react.block"),
            Y("react.server.block"),
            Y("react.fundamental"),
            Y("react.debug_trace_mode"),
            Y("react.legacy_hidden")
        }
    },
    72973: function(m, R, C) {
        "use strict";
        C(88359)
    },
    68697: function(m, R, C) {
        "use strict";
        C.d(R, {
            P1: function() {
                return L
            }
        });
        var T = "NOT_FOUND"
          , defaultEqualityCheck = function(m, R) {
            return m === R
        }
          , L = function(m) {
            for (var R = arguments.length, C = Array(R > 1 ? R - 1 : 0), T = 1; T < R; T++)
                C[T - 1] = arguments[T];
            return function() {
                for (var R, T = arguments.length, L = Array(T), U = 0; U < T; U++)
                    L[U] = arguments[U];
                var B = 0
                  , $ = {
                    memoizeOptions: void 0
                }
                  , V = L.pop();
                if ("object" == typeof V && ($ = V,
                V = L.pop()),
                "function" != typeof V)
                    throw Error("createSelector expects an output function after the inputs, but received: [" + typeof V + "]");
                var H = $.memoizeOptions
                  , W = void 0 === H ? C : H
                  , q = Array.isArray(W) ? W : [W]
                  , G = function(m) {
                    var R = Array.isArray(m[0]) ? m[0] : m;
                    if (!R.every(function(m) {
                        return "function" == typeof m
                    }))
                        throw Error("createSelector expects all input-selectors to be functions, but received the following types: [" + R.map(function(m) {
                            return "function" == typeof m ? "function " + (m.name || "unnamed") + "()" : typeof m
                        }).join(", ") + "]");
                    return R
                }(L)
                  , Z = m.apply(void 0, [function() {
                    return B++,
                    V.apply(null, arguments)
                }
                ].concat(q))
                  , Y = m(function() {
                    for (var m = [], C = G.length, T = 0; T < C; T++)
                        m.push(G[T].apply(null, arguments));
                    return R = Z.apply(null, m)
                });
                return Object.assign(Y, {
                    resultFunc: V,
                    memoizedResultFunc: Z,
                    dependencies: G,
                    lastResult: function() {
                        return R
                    },
                    recomputations: function() {
                        return B
                    },
                    resetRecomputations: function() {
                        return B = 0
                    }
                }),
                Y
            }
        }(function(m, R) {
            var C, L, U = "object" == typeof R ? R : {
                equalityCheck: R
            }, B = U.equalityCheck, $ = U.maxSize, V = void 0 === $ ? 1 : $, H = U.resultEqualityCheck, W = (C = void 0 === B ? defaultEqualityCheck : B,
            function(m, R) {
                if (null === m || null === R || m.length !== R.length)
                    return !1;
                for (var T = m.length, L = 0; L < T; L++)
                    if (!C(m[L], R[L]))
                        return !1;
                return !0
            }
            ), q = 1 === V ? {
                get: function(m) {
                    return L && W(L.key, m) ? L.value : T
                },
                put: function(m, R) {
                    L = {
                        key: m,
                        value: R
                    }
                },
                getEntries: function() {
                    return L ? [L] : []
                },
                clear: function() {
                    L = void 0
                }
            } : function(m, R) {
                var C = [];
                function get(m) {
                    var L = C.findIndex(function(C) {
                        return R(m, C.key)
                    });
                    if (L > -1) {
                        var U = C[L];
                        return L > 0 && (C.splice(L, 1),
                        C.unshift(U)),
                        U.value
                    }
                    return T
                }
                return {
                    get: get,
                    put: function(R, L) {
                        get(R) === T && (C.unshift({
                            key: R,
                            value: L
                        }),
                        C.length > m && C.pop())
                    },
                    getEntries: function() {
                        return C
                    },
                    clear: function() {
                        C = []
                    }
                }
            }(V, W);
            function memoized() {
                var R = q.get(arguments);
                if (R === T) {
                    if (R = m.apply(null, arguments),
                    H) {
                        var C = q.getEntries().find(function(m) {
                            return H(m.value, R)
                        });
                        C && (R = C.value)
                    }
                    q.put(arguments, R)
                }
                return R
            }
            return memoized.clearCache = function() {
                return q.clear()
            }
            ,
            memoized
        })
    },
    83154: function(m, R, C) {
        var T;
        if ("function" == typeof fetch && (T = void 0 !== C.g && C.g.fetch ? C.g.fetch : "undefined" != typeof window && window.fetch ? window.fetch : fetch),
        "undefined" == typeof window || void 0 === window.document) {
            var L = T || C(68203);
            L.default && (L = L.default),
            R.default = L,
            m.exports = R.default
        }
    },
    83878: function(m, R, C) {
        "use strict";
        function _arrayWithHoles(m) {
            if (Array.isArray(m))
                return m
        }
        C.d(R, {
            Z: function() {
                return _arrayWithHoles
            }
        })
    },
    97326: function(m, R, C) {
        "use strict";
        function _assertThisInitialized(m) {
            if (void 0 === m)
                throw ReferenceError("this hasn't been initialised - super() hasn't been called");
            return m
        }
        C.d(R, {
            Z: function() {
                return _assertThisInitialized
            }
        })
    },
    15671: function(m, R, C) {
        "use strict";
        function _classCallCheck(m, R) {
            if (!(m instanceof R))
                throw TypeError("Cannot call a class as a function")
        }
        C.d(R, {
            Z: function() {
                return _classCallCheck
            }
        })
    },
    43144: function(m, R, C) {
        "use strict";
        C.d(R, {
            Z: function() {
                return _createClass
            }
        });
        var T = C(83997);
        function _defineProperties(m, R) {
            for (var C = 0; C < R.length; C++) {
                var L = R[C];
                L.enumerable = L.enumerable || !1,
                L.configurable = !0,
                "value"in L && (L.writable = !0),
                Object.defineProperty(m, (0,
                T.Z)(L.key), L)
            }
        }
        function _createClass(m, R, C) {
            return R && _defineProperties(m.prototype, R),
            C && _defineProperties(m, C),
            Object.defineProperty(m, "prototype", {
                writable: !1
            }),
            m
        }
    },
    4942: function(m, R, C) {
        "use strict";
        C.d(R, {
            Z: function() {
                return _defineProperty
            }
        });
        var T = C(83997);
        function _defineProperty(m, R, C) {
            return (R = (0,
            T.Z)(R))in m ? Object.defineProperty(m, R, {
                value: C,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : m[R] = C,
            m
        }
    },
    87462: function(m, R, C) {
        "use strict";
        function _extends() {
            return (_extends = Object.assign ? Object.assign.bind() : function(m) {
                for (var R = 1; R < arguments.length; R++) {
                    var C = arguments[R];
                    for (var T in C)
                        Object.prototype.hasOwnProperty.call(C, T) && (m[T] = C[T])
                }
                return m
            }
            ).apply(this, arguments)
        }
        C.d(R, {
            Z: function() {
                return _extends
            }
        })
    },
    25267: function(m, R, C) {
        "use strict";
        function _nonIterableRest() {
            throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }
        C.d(R, {
            Z: function() {
                return _nonIterableRest
            }
        })
    },
    89611: function(m, R, C) {
        "use strict";
        function _setPrototypeOf(m, R) {
            return (_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(m, R) {
                return m.__proto__ = R,
                m
            }
            )(m, R)
        }
        C.d(R, {
            Z: function() {
                return _setPrototypeOf
            }
        })
    },
    83997: function(m, R, C) {
        "use strict";
        C.d(R, {
            Z: function() {
                return _toPropertyKey
            }
        });
        var T = C(71002);
        function _toPropertyKey(m) {
            var R = function(m, R) {
                if ("object" !== (0,
                T.Z)(m) || null === m)
                    return m;
                var C = m[Symbol.toPrimitive];
                if (void 0 !== C) {
                    var L = C.call(m, R || "default");
                    if ("object" !== (0,
                    T.Z)(L))
                        return L;
                    throw TypeError("@@toPrimitive must return a primitive value.")
                }
                return ("string" === R ? String : Number)(m)
            }(m, "string");
            return "symbol" === (0,
            T.Z)(R) ? R : String(R)
        }
    },
    71002: function(m, R, C) {
        "use strict";
        function _typeof(m) {
            return (_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(m) {
                return typeof m
            }
            : function(m) {
                return m && "function" == typeof Symbol && m.constructor === Symbol && m !== Symbol.prototype ? "symbol" : typeof m
            }
            )(m)
        }
        C.d(R, {
            Z: function() {
                return _typeof
            }
        })
    },
    81563: function(m, R, C) {
        "use strict";
        function _arrayLikeToArray(m, R) {
            (null == R || R > m.length) && (R = m.length);
            for (var C = 0, T = Array(R); C < R; C++)
                T[C] = m[C];
            return T
        }
        function _unsupportedIterableToArray(m, R) {
            if (m) {
                if ("string" == typeof m)
                    return _arrayLikeToArray(m, R);
                var C = Object.prototype.toString.call(m).slice(8, -1);
                if ("Object" === C && m.constructor && (C = m.constructor.name),
                "Map" === C || "Set" === C)
                    return Array.from(m);
                if ("Arguments" === C || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(C))
                    return _arrayLikeToArray(m, R)
            }
        }
        C.d(R, {
            Z: function() {
                return _unsupportedIterableToArray
            }
        })
    },
    76629: function(m, R, C) {
        "use strict";
        function apply(m, R) {
            R.headers = m.headers || {},
            R.statusMessage = m.statusText,
            R.statusCode = m.status,
            R.data = m.response
        }
        function send(m, R, C) {
            return new Promise(function(T, L) {
                C = C || {};
                var U, B, $, V = new XMLHttpRequest, H = C.body, W = C.headers || {};
                for (U in C.timeout && (V.timeout = C.timeout),
                V.ontimeout = V.onerror = function(m) {
                    m.timeout = "timeout" == m.type,
                    L(m)
                }
                ,
                V.open(m, R.href || R),
                V.onload = function() {
                    for ($ = V.getAllResponseHeaders().trim().split(/[\r\n]+/),
                    apply(V, V); B = $.shift(); )
                        B = B.split(": "),
                        V.headers[B.shift().toLowerCase()] = B.join(": ");
                    if ((B = V.headers["content-type"]) && ~B.indexOf("application/json"))
                        try {
                            V.data = JSON.parse(V.data, C.reviver)
                        } catch (m) {
                            return apply(V, m),
                            L(m)
                        }
                    (V.status >= 400 ? L : T)(V)
                }
                ,
                "u" > typeof FormData && H instanceof FormData || H && "object" == typeof H && (W["content-type"] = "application/json",
                H = JSON.stringify(H)),
                V.withCredentials = !!C.withCredentials,
                W)
                    V.setRequestHeader(U, W[U]);
                V.send(H)
            }
            )
        }
        C.r(R),
        C.d(R, {
            del: function() {
                return B
            },
            get: function() {
                return T
            },
            patch: function() {
                return U
            },
            post: function() {
                return L
            },
            put: function() {
                return $
            },
            send: function() {
                return send
            }
        });
        var T = send.bind(send, "GET")
          , L = send.bind(send, "POST")
          , U = send.bind(send, "PATCH")
          , B = send.bind(send, "DELETE")
          , $ = send.bind(send, "PUT")
    },
    34853: function(m, R, C) {
        "use strict";
        C.d(R, {
            ZP: function() {
                return eh
            }
        });
        var T = C(71002)
          , L = C(15671)
          , U = C(43144)
          , B = C(97326)
          , $ = C(89611);
        function _inherits(m, R) {
            if ("function" != typeof R && null !== R)
                throw TypeError("Super expression must either be null or a function");
            m.prototype = Object.create(R && R.prototype, {
                constructor: {
                    value: m,
                    writable: !0,
                    configurable: !0
                }
            }),
            Object.defineProperty(m, "prototype", {
                writable: !1
            }),
            R && (0,
            $.Z)(m, R)
        }
        function _possibleConstructorReturn(m, R) {
            if (R && ("object" === (0,
            T.Z)(R) || "function" == typeof R))
                return R;
            if (void 0 !== R)
                throw TypeError("Derived constructors may only return object or undefined");
            return (0,
            B.Z)(m)
        }
        function _getPrototypeOf(m) {
            return (_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(m) {
                return m.__proto__ || Object.getPrototypeOf(m)
            }
            )(m)
        }
        var V = C(4942)
          , H = C(83878)
          , W = C(81563)
          , q = C(25267);
        function ownKeys(m, R) {
            var C = Object.keys(m);
            if (Object.getOwnPropertySymbols) {
                var T = Object.getOwnPropertySymbols(m);
                R && (T = T.filter(function(R) {
                    return Object.getOwnPropertyDescriptor(m, R).enumerable
                })),
                C.push.apply(C, T)
            }
            return C
        }
        function _objectSpread(m) {
            for (var R = 1; R < arguments.length; R++) {
                var C = null != arguments[R] ? arguments[R] : {};
                R % 2 ? ownKeys(Object(C), !0).forEach(function(R) {
                    (0,
                    V.Z)(m, R, C[R])
                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(m, Object.getOwnPropertyDescriptors(C)) : ownKeys(Object(C)).forEach(function(R) {
                    Object.defineProperty(m, R, Object.getOwnPropertyDescriptor(C, R))
                })
            }
            return m
        }
        var G = {
            type: "logger",
            log: function(m) {
                this.output("log", m)
            },
            warn: function(m) {
                this.output("warn", m)
            },
            error: function(m) {
                this.output("error", m)
            },
            output: function(m, R) {
                console && console[m] && console[m].apply(console, R)
            }
        }
          , Z = new (function() {
            function Logger(m) {
                var R = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                (0,
                L.Z)(this, Logger),
                this.init(m, R)
            }
            return (0,
            U.Z)(Logger, [{
                key: "init",
                value: function(m) {
                    var R = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                    this.prefix = R.prefix || "i18next:",
                    this.logger = m || G,
                    this.options = R,
                    this.debug = R.debug
                }
            }, {
                key: "setDebug",
                value: function(m) {
                    this.debug = m
                }
            }, {
                key: "log",
                value: function() {
                    for (var m = arguments.length, R = Array(m), C = 0; C < m; C++)
                        R[C] = arguments[C];
                    return this.forward(R, "log", "", !0)
                }
            }, {
                key: "warn",
                value: function() {
                    for (var m = arguments.length, R = Array(m), C = 0; C < m; C++)
                        R[C] = arguments[C];
                    return this.forward(R, "warn", "", !0)
                }
            }, {
                key: "error",
                value: function() {
                    for (var m = arguments.length, R = Array(m), C = 0; C < m; C++)
                        R[C] = arguments[C];
                    return this.forward(R, "error", "")
                }
            }, {
                key: "deprecate",
                value: function() {
                    for (var m = arguments.length, R = Array(m), C = 0; C < m; C++)
                        R[C] = arguments[C];
                    return this.forward(R, "warn", "WARNING DEPRECATED: ", !0)
                }
            }, {
                key: "forward",
                value: function(m, R, C, T) {
                    return T && !this.debug ? null : ("string" == typeof m[0] && (m[0] = "".concat(C).concat(this.prefix, " ").concat(m[0])),
                    this.logger[R](m))
                }
            }, {
                key: "create",
                value: function(m) {
                    return new Logger(this.logger,_objectSpread(_objectSpread({}, {
                        prefix: "".concat(this.prefix, ":").concat(m, ":")
                    }), this.options))
                }
            }, {
                key: "clone",
                value: function(m) {
                    return (m = m || this.options).prefix = m.prefix || this.prefix,
                    new Logger(this.logger,m)
                }
            }]),
            Logger
        }())
          , Y = function() {
            function EventEmitter() {
                (0,
                L.Z)(this, EventEmitter),
                this.observers = {}
            }
            return (0,
            U.Z)(EventEmitter, [{
                key: "on",
                value: function(m, R) {
                    var C = this;
                    return m.split(" ").forEach(function(m) {
                        C.observers[m] = C.observers[m] || [],
                        C.observers[m].push(R)
                    }),
                    this
                }
            }, {
                key: "off",
                value: function(m, R) {
                    if (this.observers[m]) {
                        if (!R) {
                            delete this.observers[m];
                            return
                        }
                        this.observers[m] = this.observers[m].filter(function(m) {
                            return m !== R
                        })
                    }
                }
            }, {
                key: "emit",
                value: function(m) {
                    for (var R = arguments.length, C = Array(R > 1 ? R - 1 : 0), T = 1; T < R; T++)
                        C[T - 1] = arguments[T];
                    this.observers[m] && [].concat(this.observers[m]).forEach(function(m) {
                        m.apply(void 0, C)
                    }),
                    this.observers["*"] && [].concat(this.observers["*"]).forEach(function(R) {
                        R.apply(R, [m].concat(C))
                    })
                }
            }]),
            EventEmitter
        }();
        function defer() {
            var m, R, C = new Promise(function(C, T) {
                m = C,
                R = T
            }
            );
            return C.resolve = m,
            C.reject = R,
            C
        }
        function makeString(m) {
            return null == m ? "" : "" + m
        }
        function getLastOfPath(m, R, C) {
            function cleanKey(m) {
                return m && m.indexOf("###") > -1 ? m.replace(/###/g, ".") : m
            }
            function canNotTraverseDeeper() {
                return !m || "string" == typeof m
            }
            for (var T = "string" != typeof R ? [].concat(R) : R.split("."); T.length > 1; ) {
                if (canNotTraverseDeeper())
                    return {};
                var L = cleanKey(T.shift());
                !m[L] && C && (m[L] = new C),
                m = Object.prototype.hasOwnProperty.call(m, L) ? m[L] : {}
            }
            return canNotTraverseDeeper() ? {} : {
                obj: m,
                k: cleanKey(T.shift())
            }
        }
        function setPath(m, R, C) {
            var T = getLastOfPath(m, R, Object);
            T.obj[T.k] = C
        }
        function getPath(m, R) {
            var C = getLastOfPath(m, R)
              , T = C.obj
              , L = C.k;
            if (T)
                return T[L]
        }
        function getPathWithDefaults(m, R, C) {
            var T = getPath(m, C);
            return void 0 !== T ? T : getPath(R, C)
        }
        function regexEscape(m) {
            return m.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&")
        }
        var K = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&quot;",
            "'": "&#39;",
            "/": "&#x2F;"
        };
        function i18next_escape(m) {
            return "string" == typeof m ? m.replace(/[&<>"'\/]/g, function(m) {
                return K[m]
            }) : m
        }
        var J = "undefined" != typeof window && window.navigator && void 0 === window.navigator.userAgentData && window.navigator.userAgent && window.navigator.userAgent.indexOf("MSIE") > -1
          , X = [" ", ",", "?", "!", ";"];
        function ownKeys$1(m, R) {
            var C = Object.keys(m);
            if (Object.getOwnPropertySymbols) {
                var T = Object.getOwnPropertySymbols(m);
                R && (T = T.filter(function(R) {
                    return Object.getOwnPropertyDescriptor(m, R).enumerable
                })),
                C.push.apply(C, T)
            }
            return C
        }
        function _objectSpread$1(m) {
            for (var R = 1; R < arguments.length; R++) {
                var C = null != arguments[R] ? arguments[R] : {};
                R % 2 ? ownKeys$1(Object(C), !0).forEach(function(R) {
                    (0,
                    V.Z)(m, R, C[R])
                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(m, Object.getOwnPropertyDescriptors(C)) : ownKeys$1(Object(C)).forEach(function(R) {
                    Object.defineProperty(m, R, Object.getOwnPropertyDescriptor(C, R))
                })
            }
            return m
        }
        var Q = function(m) {
            _inherits(ResourceStore, m);
            var R, C = (R = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct || Reflect.construct.sham)
                    return !1;
                if ("function" == typeof Proxy)
                    return !0;
                try {
                    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})),
                    !0
                } catch (m) {
                    return !1
                }
            }(),
            function() {
                var m, C = _getPrototypeOf(ResourceStore);
                if (R) {
                    var T = _getPrototypeOf(this).constructor;
                    m = Reflect.construct(C, arguments, T)
                } else
                    m = C.apply(this, arguments);
                return _possibleConstructorReturn(this, m)
            }
            );
            function ResourceStore(m) {
                var R, T = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
                    ns: ["translation"],
                    defaultNS: "translation"
                };
                return (0,
                L.Z)(this, ResourceStore),
                R = C.call(this),
                J && Y.call((0,
                B.Z)(R)),
                R.data = m || {},
                R.options = T,
                void 0 === R.options.keySeparator && (R.options.keySeparator = "."),
                void 0 === R.options.ignoreJSONStructure && (R.options.ignoreJSONStructure = !0),
                R
            }
            return (0,
            U.Z)(ResourceStore, [{
                key: "addNamespaces",
                value: function(m) {
                    0 > this.options.ns.indexOf(m) && this.options.ns.push(m)
                }
            }, {
                key: "removeNamespaces",
                value: function(m) {
                    var R = this.options.ns.indexOf(m);
                    R > -1 && this.options.ns.splice(R, 1)
                }
            }, {
                key: "getResource",
                value: function(m, R, C) {
                    var T = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {}
                      , L = void 0 !== T.keySeparator ? T.keySeparator : this.options.keySeparator
                      , U = void 0 !== T.ignoreJSONStructure ? T.ignoreJSONStructure : this.options.ignoreJSONStructure
                      , B = [m, R];
                    C && "string" != typeof C && (B = B.concat(C)),
                    C && "string" == typeof C && (B = B.concat(L ? C.split(L) : C)),
                    m.indexOf(".") > -1 && (B = m.split("."));
                    var $ = getPath(this.data, B);
                    return $ || !U || "string" != typeof C ? $ : function deepFind(m, R) {
                        var C = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : ".";
                        if (m) {
                            if (m[R])
                                return m[R];
                            for (var T = R.split(C), L = m, U = 0; U < T.length; ++U) {
                                if (!L || "string" == typeof L[T[U]] && U + 1 < T.length)
                                    return;
                                if (void 0 === L[T[U]]) {
                                    for (var B = 2, $ = T.slice(U, U + B).join(C), V = L[$]; void 0 === V && T.length > U + B; )
                                        B++,
                                        V = L[$ = T.slice(U, U + B).join(C)];
                                    if (void 0 === V)
                                        return;
                                    if (null === V)
                                        return null;
                                    if (R.endsWith($)) {
                                        if ("string" == typeof V)
                                            return V;
                                        if ($ && "string" == typeof V[$])
                                            return V[$]
                                    }
                                    var H = T.slice(U + B).join(C);
                                    if (H)
                                        return deepFind(V, H, C);
                                    return
                                }
                                L = L[T[U]]
                            }
                            return L
                        }
                    }(this.data && this.data[m] && this.data[m][R], C, L)
                }
            }, {
                key: "addResource",
                value: function(m, R, C, T) {
                    var L = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : {
                        silent: !1
                    }
                      , U = this.options.keySeparator;
                    void 0 === U && (U = ".");
                    var B = [m, R];
                    C && (B = B.concat(U ? C.split(U) : C)),
                    m.indexOf(".") > -1 && (B = m.split("."),
                    T = R,
                    R = B[1]),
                    this.addNamespaces(R),
                    setPath(this.data, B, T),
                    L.silent || this.emit("added", m, R, C, T)
                }
            }, {
                key: "addResources",
                value: function(m, R, C) {
                    var T = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {
                        silent: !1
                    };
                    for (var L in C)
                        ("string" == typeof C[L] || "[object Array]" === Object.prototype.toString.apply(C[L])) && this.addResource(m, R, L, C[L], {
                            silent: !0
                        });
                    T.silent || this.emit("added", m, R, C)
                }
            }, {
                key: "addResourceBundle",
                value: function(m, R, C, T, L) {
                    var U = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : {
                        silent: !1
                    }
                      , B = [m, R];
                    m.indexOf(".") > -1 && (B = m.split("."),
                    T = C,
                    C = R,
                    R = B[1]),
                    this.addNamespaces(R);
                    var $ = getPath(this.data, B) || {};
                    T ? function deepExtend(m, R, C) {
                        for (var T in R)
                            "__proto__" !== T && "constructor" !== T && (T in m ? "string" == typeof m[T] || m[T]instanceof String || "string" == typeof R[T] || R[T]instanceof String ? C && (m[T] = R[T]) : deepExtend(m[T], R[T], C) : m[T] = R[T]);
                        return m
                    }($, C, L) : $ = _objectSpread$1(_objectSpread$1({}, $), C),
                    setPath(this.data, B, $),
                    U.silent || this.emit("added", m, R, C)
                }
            }, {
                key: "removeResourceBundle",
                value: function(m, R) {
                    this.hasResourceBundle(m, R) && delete this.data[m][R],
                    this.removeNamespaces(R),
                    this.emit("removed", m, R)
                }
            }, {
                key: "hasResourceBundle",
                value: function(m, R) {
                    return void 0 !== this.getResource(m, R)
                }
            }, {
                key: "getResourceBundle",
                value: function(m, R) {
                    return (R || (R = this.options.defaultNS),
                    "v1" === this.options.compatibilityAPI) ? _objectSpread$1(_objectSpread$1({}, {}), this.getResource(m, R)) : this.getResource(m, R)
                }
            }, {
                key: "getDataByLanguage",
                value: function(m) {
                    return this.data[m]
                }
            }, {
                key: "hasLanguageSomeTranslations",
                value: function(m) {
                    var R = this.getDataByLanguage(m);
                    return !!(R && Object.keys(R) || []).find(function(m) {
                        return R[m] && Object.keys(R[m]).length > 0
                    })
                }
            }, {
                key: "toJSON",
                value: function() {
                    return this.data
                }
            }]),
            ResourceStore
        }(Y)
          , ee = {
            processors: {},
            addPostProcessor: function(m) {
                this.processors[m.name] = m
            },
            handle: function(m, R, C, T, L) {
                var U = this;
                return m.forEach(function(m) {
                    U.processors[m] && (R = U.processors[m].process(R, C, T, L))
                }),
                R
            }
        };
        function ownKeys$2(m, R) {
            var C = Object.keys(m);
            if (Object.getOwnPropertySymbols) {
                var T = Object.getOwnPropertySymbols(m);
                R && (T = T.filter(function(R) {
                    return Object.getOwnPropertyDescriptor(m, R).enumerable
                })),
                C.push.apply(C, T)
            }
            return C
        }
        function _objectSpread$2(m) {
            for (var R = 1; R < arguments.length; R++) {
                var C = null != arguments[R] ? arguments[R] : {};
                R % 2 ? ownKeys$2(Object(C), !0).forEach(function(R) {
                    (0,
                    V.Z)(m, R, C[R])
                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(m, Object.getOwnPropertyDescriptors(C)) : ownKeys$2(Object(C)).forEach(function(R) {
                    Object.defineProperty(m, R, Object.getOwnPropertyDescriptor(C, R))
                })
            }
            return m
        }
        var et = {}
          , er = function(m) {
            _inherits(Translator, m);
            var R, C = (R = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct || Reflect.construct.sham)
                    return !1;
                if ("function" == typeof Proxy)
                    return !0;
                try {
                    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})),
                    !0
                } catch (m) {
                    return !1
                }
            }(),
            function() {
                var m, C = _getPrototypeOf(Translator);
                if (R) {
                    var T = _getPrototypeOf(this).constructor;
                    m = Reflect.construct(C, arguments, T)
                } else
                    m = C.apply(this, arguments);
                return _possibleConstructorReturn(this, m)
            }
            );
            function Translator(m) {
                var R, T = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                return (0,
                L.Z)(this, Translator),
                R = C.call(this),
                J && Y.call((0,
                B.Z)(R)),
                !function(m, R, C) {
                    m.forEach(function(m) {
                        R[m] && (C[m] = R[m])
                    })
                }(["resourceStore", "languageUtils", "pluralResolver", "interpolator", "backendConnector", "i18nFormat", "utils"], m, (0,
                B.Z)(R)),
                R.options = T,
                void 0 === R.options.keySeparator && (R.options.keySeparator = "."),
                R.logger = Z.create("translator"),
                R
            }
            return (0,
            U.Z)(Translator, [{
                key: "changeLanguage",
                value: function(m) {
                    m && (this.language = m)
                }
            }, {
                key: "exists",
                value: function(m) {
                    var R = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
                        interpolation: {}
                    };
                    if (null == m)
                        return !1;
                    var C = this.resolve(m, R);
                    return C && void 0 !== C.res
                }
            }, {
                key: "extractFromKey",
                value: function(m, R) {
                    var C = void 0 !== R.nsSeparator ? R.nsSeparator : this.options.nsSeparator;
                    void 0 === C && (C = ":");
                    var T = void 0 !== R.keySeparator ? R.keySeparator : this.options.keySeparator
                      , L = R.ns || this.options.defaultNS || []
                      , U = C && m.indexOf(C) > -1
                      , B = !this.options.userDefinedKeySeparator && !R.keySeparator && !this.options.userDefinedNsSeparator && !R.nsSeparator && !function(m, R, C) {
                        R = R || "",
                        C = C || "";
                        var T = X.filter(function(m) {
                            return 0 > R.indexOf(m) && 0 > C.indexOf(m)
                        });
                        if (0 === T.length)
                            return !0;
                        var L = new RegExp("(".concat(T.map(function(m) {
                            return "?" === m ? "\\?" : m
                        }).join("|"), ")"))
                          , U = !L.test(m);
                        if (!U) {
                            var B = m.indexOf(C);
                            B > 0 && !L.test(m.substring(0, B)) && (U = !0)
                        }
                        return U
                    }(m, C, T);
                    if (U && !B) {
                        var $ = m.match(this.interpolator.nestingRegexp);
                        if ($ && $.length > 0)
                            return {
                                key: m,
                                namespaces: L
                            };
                        var V = m.split(C);
                        (C !== T || C === T && this.options.ns.indexOf(V[0]) > -1) && (L = V.shift()),
                        m = V.join(T)
                    }
                    return "string" == typeof L && (L = [L]),
                    {
                        key: m,
                        namespaces: L
                    }
                }
            }, {
                key: "translate",
                value: function(m, R, C) {
                    var L = this;
                    if ("object" !== (0,
                    T.Z)(R) && this.options.overloadTranslationOptionHandler && (R = this.options.overloadTranslationOptionHandler(arguments)),
                    R || (R = {}),
                    null == m)
                        return "";
                    Array.isArray(m) || (m = [String(m)]);
                    var U = void 0 !== R.returnDetails ? R.returnDetails : this.options.returnDetails
                      , B = void 0 !== R.keySeparator ? R.keySeparator : this.options.keySeparator
                      , $ = this.extractFromKey(m[m.length - 1], R)
                      , V = $.key
                      , H = $.namespaces
                      , W = H[H.length - 1]
                      , q = R.lng || this.language
                      , G = R.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;
                    if (q && "cimode" === q.toLowerCase()) {
                        if (G) {
                            var Z = R.nsSeparator || this.options.nsSeparator;
                            return U ? (Y.res = "".concat(W).concat(Z).concat(V),
                            Y) : "".concat(W).concat(Z).concat(V)
                        }
                        return U ? (Y.res = V,
                        Y) : V
                    }
                    var Y = this.resolve(m, R)
                      , K = Y && Y.res
                      , J = Y && Y.usedKey || V
                      , X = Y && Y.exactUsedKey || V
                      , Q = Object.prototype.toString.apply(K)
                      , ee = void 0 !== R.joinArrays ? R.joinArrays : this.options.joinArrays
                      , et = !this.i18nFormat || this.i18nFormat.handleAsObject
                      , er = "string" != typeof K && "boolean" != typeof K && "number" != typeof K;
                    if (et && K && er && 0 > ["[object Number]", "[object Function]", "[object RegExp]"].indexOf(Q) && !("string" == typeof ee && "[object Array]" === Q)) {
                        if (!R.returnObjects && !this.options.returnObjects) {
                            this.options.returnedObjectHandler || this.logger.warn("accessing an object - but returnObjects options is not enabled!");
                            var en = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(J, K, _objectSpread$2(_objectSpread$2({}, R), {}, {
                                ns: H
                            })) : "key '".concat(V, " (").concat(this.language, ")' returned an object instead of string.");
                            return U ? (Y.res = en,
                            Y) : en
                        }
                        if (B) {
                            var eo = "[object Array]" === Q
                              , ei = eo ? [] : {}
                              , ea = eo ? X : J;
                            for (var es in K)
                                if (Object.prototype.hasOwnProperty.call(K, es)) {
                                    var el = "".concat(ea).concat(B).concat(es);
                                    ei[es] = this.translate(el, _objectSpread$2(_objectSpread$2({}, R), {
                                        joinArrays: !1,
                                        ns: H
                                    })),
                                    ei[es] === el && (ei[es] = K[es])
                                }
                            K = ei
                        }
                    } else if (et && "string" == typeof ee && "[object Array]" === Q)
                        (K = K.join(ee)) && (K = this.extendTranslation(K, m, R, C));
                    else {
                        var ec = !1
                          , eu = !1
                          , ef = void 0 !== R.count && "string" != typeof R.count
                          , ed = Translator.hasDefaultValue(R)
                          , ep = ef ? this.pluralResolver.getSuffix(q, R.count, R) : ""
                          , eh = R["defaultValue".concat(ep)] || R.defaultValue;
                        !this.isValidLookup(K) && ed && (ec = !0,
                        K = eh),
                        this.isValidLookup(K) || (eu = !0,
                        K = V);
                        var eg = (R.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey) && eu ? void 0 : K
                          , em = ed && eh !== K && this.options.updateMissing;
                        if (eu || ec || em) {
                            if (this.logger.log(em ? "updateKey" : "missingKey", q, W, V, em ? eh : K),
                            B) {
                                var ey = this.resolve(V, _objectSpread$2(_objectSpread$2({}, R), {}, {
                                    keySeparator: !1
                                }));
                                ey && ey.res && this.logger.warn("Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.")
                            }
                            var ev = []
                              , eb = this.languageUtils.getFallbackCodes(this.options.fallbackLng, R.lng || this.language);
                            if ("fallback" === this.options.saveMissingTo && eb && eb[0])
                                for (var eE = 0; eE < eb.length; eE++)
                                    ev.push(eb[eE]);
                            else
                                "all" === this.options.saveMissingTo ? ev = this.languageUtils.toResolveHierarchy(R.lng || this.language) : ev.push(R.lng || this.language);
                            var send = function(m, C, T) {
                                var U = ed && T !== K ? T : eg;
                                L.options.missingKeyHandler ? L.options.missingKeyHandler(m, W, C, U, em, R) : L.backendConnector && L.backendConnector.saveMissing && L.backendConnector.saveMissing(m, W, C, U, em, R),
                                L.emit("missingKey", m, W, C, K)
                            };
                            this.options.saveMissing && (this.options.saveMissingPlurals && ef ? ev.forEach(function(m) {
                                L.pluralResolver.getSuffixes(m, R).forEach(function(C) {
                                    send([m], V + C, R["defaultValue".concat(C)] || eh)
                                })
                            }) : send(ev, V, eh))
                        }
                        K = this.extendTranslation(K, m, R, Y, C),
                        eu && K === V && this.options.appendNamespaceToMissingKey && (K = "".concat(W, ":").concat(V)),
                        (eu || ec) && this.options.parseMissingKeyHandler && (K = "v1" !== this.options.compatibilityAPI ? this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? "".concat(W, ":").concat(V) : V, ec ? K : void 0) : this.options.parseMissingKeyHandler(K))
                    }
                    return U ? (Y.res = K,
                    Y) : K
                }
            }, {
                key: "extendTranslation",
                value: function(m, R, C, T, L) {
                    var U = this;
                    if (this.i18nFormat && this.i18nFormat.parse)
                        m = this.i18nFormat.parse(m, _objectSpread$2(_objectSpread$2({}, this.options.interpolation.defaultVariables), C), T.usedLng, T.usedNS, T.usedKey, {
                            resolved: T
                        });
                    else if (!C.skipInterpolation) {
                        C.interpolation && this.interpolator.init(_objectSpread$2(_objectSpread$2({}, C), {
                            interpolation: _objectSpread$2(_objectSpread$2({}, this.options.interpolation), C.interpolation)
                        }));
                        var B, $ = "string" == typeof m && (C && C.interpolation && void 0 !== C.interpolation.skipOnVariables ? C.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);
                        if ($) {
                            var V = m.match(this.interpolator.nestingRegexp);
                            B = V && V.length
                        }
                        var H = C.replace && "string" != typeof C.replace ? C.replace : C;
                        if (this.options.interpolation.defaultVariables && (H = _objectSpread$2(_objectSpread$2({}, this.options.interpolation.defaultVariables), H)),
                        m = this.interpolator.interpolate(m, H, C.lng || this.language, C),
                        $) {
                            var W = m.match(this.interpolator.nestingRegexp);
                            B < (W && W.length) && (C.nest = !1)
                        }
                        !1 !== C.nest && (m = this.interpolator.nest(m, function() {
                            for (var m = arguments.length, T = Array(m), B = 0; B < m; B++)
                                T[B] = arguments[B];
                            return L && L[0] === T[0] && !C.context ? (U.logger.warn("It seems you are nesting recursively key: ".concat(T[0], " in key: ").concat(R[0])),
                            null) : U.translate.apply(U, T.concat([R]))
                        }, C)),
                        C.interpolation && this.interpolator.reset()
                    }
                    var q = C.postProcess || this.options.postProcess
                      , G = "string" == typeof q ? [q] : q;
                    return null != m && G && G.length && !1 !== C.applyPostProcessor && (m = ee.handle(G, m, R, this.options && this.options.postProcessPassResolved ? _objectSpread$2({
                        i18nResolved: T
                    }, C) : C, this)),
                    m
                }
            }, {
                key: "resolve",
                value: function(m) {
                    var R, C, T, L, U, B = this, $ = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                    return "string" == typeof m && (m = [m]),
                    m.forEach(function(m) {
                        if (!B.isValidLookup(R)) {
                            var V = B.extractFromKey(m, $)
                              , H = V.key;
                            C = H;
                            var W = V.namespaces;
                            B.options.fallbackNS && (W = W.concat(B.options.fallbackNS));
                            var q = void 0 !== $.count && "string" != typeof $.count
                              , G = q && !$.ordinal && 0 === $.count && B.pluralResolver.shouldUseIntlApi()
                              , Z = void 0 !== $.context && ("string" == typeof $.context || "number" == typeof $.context) && "" !== $.context
                              , Y = $.lngs ? $.lngs : B.languageUtils.toResolveHierarchy($.lng || B.language, $.fallbackLng);
                            W.forEach(function(m) {
                                B.isValidLookup(R) || (U = m,
                                !et["".concat(Y[0], "-").concat(m)] && B.utils && B.utils.hasLoadedNamespace && !B.utils.hasLoadedNamespace(U) && (et["".concat(Y[0], "-").concat(m)] = !0,
                                B.logger.warn('key "'.concat(C, '" for languages "').concat(Y.join(", "), '" won\'t get resolved as namespace "').concat(U, '" was not yet loaded'), "This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!")),
                                Y.forEach(function(C) {
                                    if (!B.isValidLookup(R)) {
                                        L = C;
                                        var U, V = [H];
                                        if (B.i18nFormat && B.i18nFormat.addLookupKeys)
                                            B.i18nFormat.addLookupKeys(V, H, C, m, $);
                                        else {
                                            q && (W = B.pluralResolver.getSuffix(C, $.count, $));
                                            var W, Y = "".concat(B.options.pluralSeparator, "zero");
                                            if (q && (V.push(H + W),
                                            G && V.push(H + Y)),
                                            Z) {
                                                var K = "".concat(H).concat(B.options.contextSeparator).concat($.context);
                                                V.push(K),
                                                q && (V.push(K + W),
                                                G && V.push(K + Y))
                                            }
                                        }
                                        for (; U = V.pop(); )
                                            B.isValidLookup(R) || (T = U,
                                            R = B.getResource(C, m, U, $))
                                    }
                                }))
                            })
                        }
                    }),
                    {
                        res: R,
                        usedKey: C,
                        exactUsedKey: T,
                        usedLng: L,
                        usedNS: U
                    }
                }
            }, {
                key: "isValidLookup",
                value: function(m) {
                    return void 0 !== m && !(!this.options.returnNull && null === m) && !(!this.options.returnEmptyString && "" === m)
                }
            }, {
                key: "getResource",
                value: function(m, R, C) {
                    var T = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};
                    return this.i18nFormat && this.i18nFormat.getResource ? this.i18nFormat.getResource(m, R, C, T) : this.resourceStore.getResource(m, R, C, T)
                }
            }], [{
                key: "hasDefaultValue",
                value: function(m) {
                    var R = "defaultValue";
                    for (var C in m)
                        if (Object.prototype.hasOwnProperty.call(m, C) && R === C.substring(0, R.length) && void 0 !== m[C])
                            return !0;
                    return !1
                }
            }]),
            Translator
        }(Y);
        function capitalize(m) {
            return m.charAt(0).toUpperCase() + m.slice(1)
        }
        var en = function() {
            function LanguageUtil(m) {
                (0,
                L.Z)(this, LanguageUtil),
                this.options = m,
                this.supportedLngs = this.options.supportedLngs || !1,
                this.logger = Z.create("languageUtils")
            }
            return (0,
            U.Z)(LanguageUtil, [{
                key: "getScriptPartFromCode",
                value: function(m) {
                    if (!m || 0 > m.indexOf("-"))
                        return null;
                    var R = m.split("-");
                    return 2 === R.length ? null : (R.pop(),
                    "x" === R[R.length - 1].toLowerCase()) ? null : this.formatLanguageCode(R.join("-"))
                }
            }, {
                key: "getLanguagePartFromCode",
                value: function(m) {
                    if (!m || 0 > m.indexOf("-"))
                        return m;
                    var R = m.split("-");
                    return this.formatLanguageCode(R[0])
                }
            }, {
                key: "formatLanguageCode",
                value: function(m) {
                    if ("string" == typeof m && m.indexOf("-") > -1) {
                        var R = ["hans", "hant", "latn", "cyrl", "cans", "mong", "arab"]
                          , C = m.split("-");
                        return this.options.lowerCaseLng ? C = C.map(function(m) {
                            return m.toLowerCase()
                        }) : 2 === C.length ? (C[0] = C[0].toLowerCase(),
                        C[1] = C[1].toUpperCase(),
                        R.indexOf(C[1].toLowerCase()) > -1 && (C[1] = capitalize(C[1].toLowerCase()))) : 3 === C.length && (C[0] = C[0].toLowerCase(),
                        2 === C[1].length && (C[1] = C[1].toUpperCase()),
                        "sgn" !== C[0] && 2 === C[2].length && (C[2] = C[2].toUpperCase()),
                        R.indexOf(C[1].toLowerCase()) > -1 && (C[1] = capitalize(C[1].toLowerCase())),
                        R.indexOf(C[2].toLowerCase()) > -1 && (C[2] = capitalize(C[2].toLowerCase()))),
                        C.join("-")
                    }
                    return this.options.cleanCode || this.options.lowerCaseLng ? m.toLowerCase() : m
                }
            }, {
                key: "isSupportedCode",
                value: function(m) {
                    return ("languageOnly" === this.options.load || this.options.nonExplicitSupportedLngs) && (m = this.getLanguagePartFromCode(m)),
                    !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(m) > -1
                }
            }, {
                key: "getBestMatchFromCodes",
                value: function(m) {
                    var R, C = this;
                    return m ? (m.forEach(function(m) {
                        if (!R) {
                            var T = C.formatLanguageCode(m);
                            (!C.options.supportedLngs || C.isSupportedCode(T)) && (R = T)
                        }
                    }),
                    !R && this.options.supportedLngs && m.forEach(function(m) {
                        if (!R) {
                            var T = C.getLanguagePartFromCode(m);
                            if (C.isSupportedCode(T))
                                return R = T;
                            R = C.options.supportedLngs.find(function(m) {
                                if (0 === m.indexOf(T))
                                    return m
                            })
                        }
                    }),
                    R || (R = this.getFallbackCodes(this.options.fallbackLng)[0]),
                    R) : null
                }
            }, {
                key: "getFallbackCodes",
                value: function(m, R) {
                    if (!m)
                        return [];
                    if ("function" == typeof m && (m = m(R)),
                    "string" == typeof m && (m = [m]),
                    "[object Array]" === Object.prototype.toString.apply(m))
                        return m;
                    if (!R)
                        return m.default || [];
                    var C = m[R];
                    return C || (C = m[this.getScriptPartFromCode(R)]),
                    C || (C = m[this.formatLanguageCode(R)]),
                    C || (C = m[this.getLanguagePartFromCode(R)]),
                    C || (C = m.default),
                    C || []
                }
            }, {
                key: "toResolveHierarchy",
                value: function(m, R) {
                    var C = this
                      , T = this.getFallbackCodes(R || this.options.fallbackLng || [], m)
                      , L = []
                      , addCode = function(m) {
                        m && (C.isSupportedCode(m) ? L.push(m) : C.logger.warn("rejecting language code not found in supportedLngs: ".concat(m)))
                    };
                    return "string" == typeof m && m.indexOf("-") > -1 ? ("languageOnly" !== this.options.load && addCode(this.formatLanguageCode(m)),
                    "languageOnly" !== this.options.load && "currentOnly" !== this.options.load && addCode(this.getScriptPartFromCode(m)),
                    "currentOnly" !== this.options.load && addCode(this.getLanguagePartFromCode(m))) : "string" == typeof m && addCode(this.formatLanguageCode(m)),
                    T.forEach(function(m) {
                        0 > L.indexOf(m) && addCode(C.formatLanguageCode(m))
                    }),
                    L
                }
            }]),
            LanguageUtil
        }()
          , eo = [{
            lngs: ["ach", "ak", "am", "arn", "br", "fil", "gun", "ln", "mfe", "mg", "mi", "oc", "pt", "pt-BR", "tg", "tl", "ti", "tr", "uz", "wa"],
            nr: [1, 2],
            fc: 1
        }, {
            lngs: ["af", "an", "ast", "az", "bg", "bn", "ca", "da", "de", "dev", "el", "en", "eo", "es", "et", "eu", "fi", "fo", "fur", "fy", "gl", "gu", "ha", "hi", "hu", "hy", "ia", "it", "kk", "kn", "ku", "lb", "mai", "ml", "mn", "mr", "nah", "nap", "nb", "ne", "nl", "nn", "no", "nso", "pa", "pap", "pms", "ps", "pt-PT", "rm", "sco", "se", "si", "so", "son", "sq", "sv", "sw", "ta", "te", "tk", "ur", "yo"],
            nr: [1, 2],
            fc: 2
        }, {
            lngs: ["ay", "bo", "cgg", "fa", "ht", "id", "ja", "jbo", "ka", "km", "ko", "ky", "lo", "ms", "sah", "su", "th", "tt", "ug", "vi", "wo", "zh"],
            nr: [1],
            fc: 3
        }, {
            lngs: ["be", "bs", "cnr", "dz", "hr", "ru", "sr", "uk"],
            nr: [1, 2, 5],
            fc: 4
        }, {
            lngs: ["ar"],
            nr: [0, 1, 2, 3, 11, 100],
            fc: 5
        }, {
            lngs: ["cs", "sk"],
            nr: [1, 2, 5],
            fc: 6
        }, {
            lngs: ["csb", "pl"],
            nr: [1, 2, 5],
            fc: 7
        }, {
            lngs: ["cy"],
            nr: [1, 2, 3, 8],
            fc: 8
        }, {
            lngs: ["fr"],
            nr: [1, 2],
            fc: 9
        }, {
            lngs: ["ga"],
            nr: [1, 2, 3, 7, 11],
            fc: 10
        }, {
            lngs: ["gd"],
            nr: [1, 2, 3, 20],
            fc: 11
        }, {
            lngs: ["is"],
            nr: [1, 2],
            fc: 12
        }, {
            lngs: ["jv"],
            nr: [0, 1],
            fc: 13
        }, {
            lngs: ["kw"],
            nr: [1, 2, 3, 4],
            fc: 14
        }, {
            lngs: ["lt"],
            nr: [1, 2, 10],
            fc: 15
        }, {
            lngs: ["lv"],
            nr: [1, 2, 0],
            fc: 16
        }, {
            lngs: ["mk"],
            nr: [1, 2],
            fc: 17
        }, {
            lngs: ["mnk"],
            nr: [0, 1, 2],
            fc: 18
        }, {
            lngs: ["mt"],
            nr: [1, 2, 11, 20],
            fc: 19
        }, {
            lngs: ["or"],
            nr: [2, 1],
            fc: 2
        }, {
            lngs: ["ro"],
            nr: [1, 2, 20],
            fc: 20
        }, {
            lngs: ["sl"],
            nr: [5, 1, 2, 3],
            fc: 21
        }, {
            lngs: ["he", "iw"],
            nr: [1, 2, 20, 21],
            fc: 22
        }]
          , ei = {
            1: function(m) {
                return Number(m > 1)
            },
            2: function(m) {
                return Number(1 != m)
            },
            3: function(m) {
                return 0
            },
            4: function(m) {
                return Number(m % 10 == 1 && m % 100 != 11 ? 0 : m % 10 >= 2 && m % 10 <= 4 && (m % 100 < 10 || m % 100 >= 20) ? 1 : 2)
            },
            5: function(m) {
                return Number(0 == m ? 0 : 1 == m ? 1 : 2 == m ? 2 : m % 100 >= 3 && m % 100 <= 10 ? 3 : m % 100 >= 11 ? 4 : 5)
            },
            6: function(m) {
                return Number(1 == m ? 0 : m >= 2 && m <= 4 ? 1 : 2)
            },
            7: function(m) {
                return Number(1 == m ? 0 : m % 10 >= 2 && m % 10 <= 4 && (m % 100 < 10 || m % 100 >= 20) ? 1 : 2)
            },
            8: function(m) {
                return Number(1 == m ? 0 : 2 == m ? 1 : 8 != m && 11 != m ? 2 : 3)
            },
            9: function(m) {
                return Number(m >= 2)
            },
            10: function(m) {
                return Number(1 == m ? 0 : 2 == m ? 1 : m < 7 ? 2 : m < 11 ? 3 : 4)
            },
            11: function(m) {
                return Number(1 == m || 11 == m ? 0 : 2 == m || 12 == m ? 1 : m > 2 && m < 20 ? 2 : 3)
            },
            12: function(m) {
                return Number(m % 10 != 1 || m % 100 == 11)
            },
            13: function(m) {
                return Number(0 !== m)
            },
            14: function(m) {
                return Number(1 == m ? 0 : 2 == m ? 1 : 3 == m ? 2 : 3)
            },
            15: function(m) {
                return Number(m % 10 == 1 && m % 100 != 11 ? 0 : m % 10 >= 2 && (m % 100 < 10 || m % 100 >= 20) ? 1 : 2)
            },
            16: function(m) {
                return Number(m % 10 == 1 && m % 100 != 11 ? 0 : 0 !== m ? 1 : 2)
            },
            17: function(m) {
                return Number(1 == m || m % 10 == 1 && m % 100 != 11 ? 0 : 1)
            },
            18: function(m) {
                return Number(0 == m ? 0 : 1 == m ? 1 : 2)
            },
            19: function(m) {
                return Number(1 == m ? 0 : 0 == m || m % 100 > 1 && m % 100 < 11 ? 1 : m % 100 > 10 && m % 100 < 20 ? 2 : 3)
            },
            20: function(m) {
                return Number(1 == m ? 0 : 0 == m || m % 100 > 0 && m % 100 < 20 ? 1 : 2)
            },
            21: function(m) {
                return Number(m % 100 == 1 ? 1 : m % 100 == 2 ? 2 : m % 100 == 3 || m % 100 == 4 ? 3 : 0)
            },
            22: function(m) {
                return Number(1 == m ? 0 : 2 == m ? 1 : (m < 0 || m > 10) && m % 10 == 0 ? 2 : 3)
            }
        }
          , ea = ["v1", "v2", "v3"]
          , es = {
            zero: 0,
            one: 1,
            two: 2,
            few: 3,
            many: 4,
            other: 5
        }
          , el = function() {
            function PluralResolver(m) {
                var R, C = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                (0,
                L.Z)(this, PluralResolver),
                this.languageUtils = m,
                this.options = C,
                this.logger = Z.create("pluralResolver"),
                this.options.compatibilityJSON && "v4" !== this.options.compatibilityJSON || "undefined" != typeof Intl && Intl.PluralRules || (this.options.compatibilityJSON = "v3",
                this.logger.error("Your environment seems not to be Intl API compatible, use an Intl.PluralRules polyfill. Will fallback to the compatibilityJSON v3 format handling.")),
                this.rules = (R = {},
                eo.forEach(function(m) {
                    m.lngs.forEach(function(C) {
                        R[C] = {
                            numbers: m.nr,
                            plurals: ei[m.fc]
                        }
                    })
                }),
                R)
            }
            return (0,
            U.Z)(PluralResolver, [{
                key: "addRule",
                value: function(m, R) {
                    this.rules[m] = R
                }
            }, {
                key: "getRule",
                value: function(m) {
                    var R = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                    if (this.shouldUseIntlApi())
                        try {
                            return new Intl.PluralRules(m,{
                                type: R.ordinal ? "ordinal" : "cardinal"
                            })
                        } catch (m) {
                            return
                        }
                    return this.rules[m] || this.rules[this.languageUtils.getLanguagePartFromCode(m)]
                }
            }, {
                key: "needsPlural",
                value: function(m) {
                    var R = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
                      , C = this.getRule(m, R);
                    return this.shouldUseIntlApi() ? C && C.resolvedOptions().pluralCategories.length > 1 : C && C.numbers.length > 1
                }
            }, {
                key: "getPluralFormsOfKey",
                value: function(m, R) {
                    var C = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                    return this.getSuffixes(m, C).map(function(m) {
                        return "".concat(R).concat(m)
                    })
                }
            }, {
                key: "getSuffixes",
                value: function(m) {
                    var R = this
                      , C = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
                      , T = this.getRule(m, C);
                    return T ? this.shouldUseIntlApi() ? T.resolvedOptions().pluralCategories.sort(function(m, R) {
                        return es[m] - es[R]
                    }).map(function(m) {
                        return "".concat(R.options.prepend).concat(m)
                    }) : T.numbers.map(function(T) {
                        return R.getSuffix(m, T, C)
                    }) : []
                }
            }, {
                key: "getSuffix",
                value: function(m, R) {
                    var C = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}
                      , T = this.getRule(m, C);
                    return T ? this.shouldUseIntlApi() ? "".concat(this.options.prepend).concat(T.select(R)) : this.getSuffixRetroCompatible(T, R) : (this.logger.warn("no plural rule found for: ".concat(m)),
                    "")
                }
            }, {
                key: "getSuffixRetroCompatible",
                value: function(m, R) {
                    var C = this
                      , T = m.noAbs ? m.plurals(R) : m.plurals(Math.abs(R))
                      , L = m.numbers[T];
                    this.options.simplifyPluralSuffix && 2 === m.numbers.length && 1 === m.numbers[0] && (2 === L ? L = "plural" : 1 === L && (L = ""));
                    var returnSuffix = function() {
                        return C.options.prepend && L.toString() ? C.options.prepend + L.toString() : L.toString()
                    };
                    return "v1" === this.options.compatibilityJSON ? 1 === L ? "" : "number" == typeof L ? "_plural_".concat(L.toString()) : returnSuffix() : "v2" === this.options.compatibilityJSON || this.options.simplifyPluralSuffix && 2 === m.numbers.length && 1 === m.numbers[0] ? returnSuffix() : this.options.prepend && T.toString() ? this.options.prepend + T.toString() : T.toString()
                }
            }, {
                key: "shouldUseIntlApi",
                value: function() {
                    return !ea.includes(this.options.compatibilityJSON)
                }
            }]),
            PluralResolver
        }();
        function ownKeys$3(m, R) {
            var C = Object.keys(m);
            if (Object.getOwnPropertySymbols) {
                var T = Object.getOwnPropertySymbols(m);
                R && (T = T.filter(function(R) {
                    return Object.getOwnPropertyDescriptor(m, R).enumerable
                })),
                C.push.apply(C, T)
            }
            return C
        }
        function _objectSpread$3(m) {
            for (var R = 1; R < arguments.length; R++) {
                var C = null != arguments[R] ? arguments[R] : {};
                R % 2 ? ownKeys$3(Object(C), !0).forEach(function(R) {
                    (0,
                    V.Z)(m, R, C[R])
                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(m, Object.getOwnPropertyDescriptors(C)) : ownKeys$3(Object(C)).forEach(function(R) {
                    Object.defineProperty(m, R, Object.getOwnPropertyDescriptor(C, R))
                })
            }
            return m
        }
        var ec = function() {
            function Interpolator() {
                var m = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                (0,
                L.Z)(this, Interpolator),
                this.logger = Z.create("interpolator"),
                this.options = m,
                this.format = m.interpolation && m.interpolation.format || function(m) {
                    return m
                }
                ,
                this.init(m)
            }
            return (0,
            U.Z)(Interpolator, [{
                key: "init",
                value: function() {
                    var m = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    m.interpolation || (m.interpolation = {
                        escapeValue: !0
                    });
                    var R = m.interpolation;
                    this.escape = void 0 !== R.escape ? R.escape : i18next_escape,
                    this.escapeValue = void 0 === R.escapeValue || R.escapeValue,
                    this.useRawValueToEscape = void 0 !== R.useRawValueToEscape && R.useRawValueToEscape,
                    this.prefix = R.prefix ? regexEscape(R.prefix) : R.prefixEscaped || "{{",
                    this.suffix = R.suffix ? regexEscape(R.suffix) : R.suffixEscaped || "}}",
                    this.formatSeparator = R.formatSeparator ? R.formatSeparator : R.formatSeparator || ",",
                    this.unescapePrefix = R.unescapeSuffix ? "" : R.unescapePrefix || "-",
                    this.unescapeSuffix = this.unescapePrefix ? "" : R.unescapeSuffix || "",
                    this.nestingPrefix = R.nestingPrefix ? regexEscape(R.nestingPrefix) : R.nestingPrefixEscaped || regexEscape("$t("),
                    this.nestingSuffix = R.nestingSuffix ? regexEscape(R.nestingSuffix) : R.nestingSuffixEscaped || regexEscape(")"),
                    this.nestingOptionsSeparator = R.nestingOptionsSeparator ? R.nestingOptionsSeparator : R.nestingOptionsSeparator || ",",
                    this.maxReplaces = R.maxReplaces ? R.maxReplaces : 1e3,
                    this.alwaysFormat = void 0 !== R.alwaysFormat && R.alwaysFormat,
                    this.resetRegExp()
                }
            }, {
                key: "reset",
                value: function() {
                    this.options && this.init(this.options)
                }
            }, {
                key: "resetRegExp",
                value: function() {
                    var m = "".concat(this.prefix, "(.+?)").concat(this.suffix);
                    this.regexp = RegExp(m, "g");
                    var R = "".concat(this.prefix).concat(this.unescapePrefix, "(.+?)").concat(this.unescapeSuffix).concat(this.suffix);
                    this.regexpUnescape = RegExp(R, "g");
                    var C = "".concat(this.nestingPrefix, "(.+?)").concat(this.nestingSuffix);
                    this.nestingRegexp = RegExp(C, "g")
                }
            }, {
                key: "interpolate",
                value: function(m, R, C, T) {
                    var L, U, B, $ = this, V = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};
                    function regexSafe(m) {
                        return m.replace(/\$/g, "$$$$")
                    }
                    var handleFormat = function(m) {
                        if (0 > m.indexOf($.formatSeparator)) {
                            var L = getPathWithDefaults(R, V, m);
                            return $.alwaysFormat ? $.format(L, void 0, C, _objectSpread$3(_objectSpread$3(_objectSpread$3({}, T), R), {}, {
                                interpolationkey: m
                            })) : L
                        }
                        var U = m.split($.formatSeparator)
                          , B = U.shift().trim()
                          , H = U.join($.formatSeparator).trim();
                        return $.format(getPathWithDefaults(R, V, B), H, C, _objectSpread$3(_objectSpread$3(_objectSpread$3({}, T), R), {}, {
                            interpolationkey: B
                        }))
                    };
                    this.resetRegExp();
                    var H = T && T.missingInterpolationHandler || this.options.missingInterpolationHandler
                      , W = T && T.interpolation && void 0 !== T.interpolation.skipOnVariables ? T.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;
                    return [{
                        regex: this.regexpUnescape,
                        safeValue: function(m) {
                            return regexSafe(m)
                        }
                    }, {
                        regex: this.regexp,
                        safeValue: function(m) {
                            return $.escapeValue ? regexSafe($.escape(m)) : regexSafe(m)
                        }
                    }].forEach(function(R) {
                        for (B = 0; L = R.regex.exec(m); ) {
                            var C = L[1].trim();
                            if (void 0 === (U = handleFormat(C))) {
                                if ("function" == typeof H) {
                                    var V = H(m, L, T);
                                    U = "string" == typeof V ? V : ""
                                } else if (T && T.hasOwnProperty(C))
                                    U = "";
                                else if (W) {
                                    U = L[0];
                                    continue
                                } else
                                    $.logger.warn("missed to pass in variable ".concat(C, " for interpolating ").concat(m)),
                                    U = ""
                            } else
                                "string" == typeof U || $.useRawValueToEscape || (U = makeString(U));
                            var q = R.safeValue(U);
                            if (m = m.replace(L[0], q),
                            W ? (R.regex.lastIndex += U.length,
                            R.regex.lastIndex -= L[0].length) : R.regex.lastIndex = 0,
                            ++B >= $.maxReplaces)
                                break
                        }
                    }),
                    m
                }
            }, {
                key: "nest",
                value: function(m, R) {
                    var C, T, L = this, U = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}, B = _objectSpread$3({}, U);
                    function handleHasOptions(m, R) {
                        var C = this.nestingOptionsSeparator;
                        if (0 > m.indexOf(C))
                            return m;
                        var T = m.split(new RegExp("".concat(C, "[ ]*{")))
                          , L = "{".concat(T[1]);
                        m = T[0];
                        var U = (L = this.interpolate(L, B)).match(/'/g)
                          , $ = L.match(/"/g);
                        (U && U.length % 2 == 0 && !$ || $.length % 2 != 0) && (L = L.replace(/'/g, '"'));
                        try {
                            B = JSON.parse(L),
                            R && (B = _objectSpread$3(_objectSpread$3({}, R), B))
                        } catch (R) {
                            return this.logger.warn("failed parsing options string in nesting for key ".concat(m), R),
                            "".concat(m).concat(C).concat(L)
                        }
                        return delete B.defaultValue,
                        m
                    }
                    for (B.applyPostProcessor = !1,
                    delete B.defaultValue; C = this.nestingRegexp.exec(m); ) {
                        var $ = []
                          , V = !1;
                        if (-1 !== C[0].indexOf(this.formatSeparator) && !/{.*}/.test(C[1])) {
                            var H = C[1].split(this.formatSeparator).map(function(m) {
                                return m.trim()
                            });
                            C[1] = H.shift(),
                            $ = H,
                            V = !0
                        }
                        if ((T = R(handleHasOptions.call(this, C[1].trim(), B), B)) && C[0] === m && "string" != typeof T)
                            return T;
                        "string" != typeof T && (T = makeString(T)),
                        T || (this.logger.warn("missed to resolve ".concat(C[1], " for nesting ").concat(m)),
                        T = ""),
                        V && (T = $.reduce(function(m, R) {
                            return L.format(m, R, U.lng, _objectSpread$3(_objectSpread$3({}, U), {}, {
                                interpolationkey: C[1].trim()
                            }))
                        }, T.trim())),
                        m = m.replace(C[0], T),
                        this.regexp.lastIndex = 0
                    }
                    return m
                }
            }]),
            Interpolator
        }();
        function ownKeys$4(m, R) {
            var C = Object.keys(m);
            if (Object.getOwnPropertySymbols) {
                var T = Object.getOwnPropertySymbols(m);
                R && (T = T.filter(function(R) {
                    return Object.getOwnPropertyDescriptor(m, R).enumerable
                })),
                C.push.apply(C, T)
            }
            return C
        }
        function _objectSpread$4(m) {
            for (var R = 1; R < arguments.length; R++) {
                var C = null != arguments[R] ? arguments[R] : {};
                R % 2 ? ownKeys$4(Object(C), !0).forEach(function(R) {
                    (0,
                    V.Z)(m, R, C[R])
                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(m, Object.getOwnPropertyDescriptors(C)) : ownKeys$4(Object(C)).forEach(function(R) {
                    Object.defineProperty(m, R, Object.getOwnPropertyDescriptor(C, R))
                })
            }
            return m
        }
        function createCachedFormatter(m) {
            var R = {};
            return function(C, T, L) {
                var U = T + JSON.stringify(L)
                  , B = R[U];
                return B || (B = m(T, L),
                R[U] = B),
                B(C)
            }
        }
        var eu = function() {
            function Formatter() {
                var m = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                (0,
                L.Z)(this, Formatter),
                this.logger = Z.create("formatter"),
                this.options = m,
                this.formats = {
                    number: createCachedFormatter(function(m, R) {
                        var C = new Intl.NumberFormat(m,R);
                        return function(m) {
                            return C.format(m)
                        }
                    }),
                    currency: createCachedFormatter(function(m, R) {
                        var C = new Intl.NumberFormat(m,_objectSpread$4(_objectSpread$4({}, R), {}, {
                            style: "currency"
                        }));
                        return function(m) {
                            return C.format(m)
                        }
                    }),
                    datetime: createCachedFormatter(function(m, R) {
                        var C = new Intl.DateTimeFormat(m,_objectSpread$4({}, R));
                        return function(m) {
                            return C.format(m)
                        }
                    }),
                    relativetime: createCachedFormatter(function(m, R) {
                        var C = new Intl.RelativeTimeFormat(m,_objectSpread$4({}, R));
                        return function(m) {
                            return C.format(m, R.range || "day")
                        }
                    }),
                    list: createCachedFormatter(function(m, R) {
                        var C = new Intl.ListFormat(m,_objectSpread$4({}, R));
                        return function(m) {
                            return C.format(m)
                        }
                    })
                },
                this.init(m)
            }
            return (0,
            U.Z)(Formatter, [{
                key: "init",
                value: function(m) {
                    var R = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
                        interpolation: {}
                    }
                      , C = R.interpolation;
                    this.formatSeparator = C.formatSeparator ? C.formatSeparator : C.formatSeparator || ","
                }
            }, {
                key: "add",
                value: function(m, R) {
                    this.formats[m.toLowerCase().trim()] = R
                }
            }, {
                key: "addCached",
                value: function(m, R) {
                    this.formats[m.toLowerCase().trim()] = createCachedFormatter(R)
                }
            }, {
                key: "format",
                value: function(m, R, C, T) {
                    var L = this;
                    return R.split(this.formatSeparator).reduce(function(m, R) {
                        var U = function(m) {
                            var R = m.toLowerCase().trim()
                              , C = {};
                            if (m.indexOf("(") > -1) {
                                var T = m.split("(");
                                R = T[0].toLowerCase().trim();
                                var L = T[1].substring(0, T[1].length - 1);
                                "currency" === R && 0 > L.indexOf(":") ? C.currency || (C.currency = L.trim()) : "relativetime" === R && 0 > L.indexOf(":") ? C.range || (C.range = L.trim()) : L.split(";").forEach(function(m) {
                                    if (m) {
                                        var R, T = (R = m.split(":"),
                                        (0,
                                        H.Z)(R) || function(m) {
                                            if ("undefined" != typeof Symbol && null != m[Symbol.iterator] || null != m["@@iterator"])
                                                return Array.from(m)
                                        }(R) || (0,
                                        W.Z)(R) || (0,
                                        q.Z)()), L = T[0], U = T.slice(1).join(":").trim().replace(/^'+|'+$/g, "");
                                        C[L.trim()] || (C[L.trim()] = U),
                                        "false" === U && (C[L.trim()] = !1),
                                        "true" === U && (C[L.trim()] = !0),
                                        isNaN(U) || (C[L.trim()] = parseInt(U, 10))
                                    }
                                })
                            }
                            return {
                                formatName: R,
                                formatOptions: C
                            }
                        }(R)
                          , B = U.formatName
                          , $ = U.formatOptions;
                        if (L.formats[B]) {
                            var V = m;
                            try {
                                var G = T && T.formatParams && T.formatParams[T.interpolationkey] || {}
                                  , Z = G.locale || G.lng || T.locale || T.lng || C;
                                V = L.formats[B](m, Z, _objectSpread$4(_objectSpread$4(_objectSpread$4({}, $), T), G))
                            } catch (m) {
                                L.logger.warn(m)
                            }
                            return V
                        }
                        return L.logger.warn("there was no format function for ".concat(B)),
                        m
                    }, m)
                }
            }]),
            Formatter
        }();
        function ownKeys$5(m, R) {
            var C = Object.keys(m);
            if (Object.getOwnPropertySymbols) {
                var T = Object.getOwnPropertySymbols(m);
                R && (T = T.filter(function(R) {
                    return Object.getOwnPropertyDescriptor(m, R).enumerable
                })),
                C.push.apply(C, T)
            }
            return C
        }
        function _objectSpread$5(m) {
            for (var R = 1; R < arguments.length; R++) {
                var C = null != arguments[R] ? arguments[R] : {};
                R % 2 ? ownKeys$5(Object(C), !0).forEach(function(R) {
                    (0,
                    V.Z)(m, R, C[R])
                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(m, Object.getOwnPropertyDescriptors(C)) : ownKeys$5(Object(C)).forEach(function(R) {
                    Object.defineProperty(m, R, Object.getOwnPropertyDescriptor(C, R))
                })
            }
            return m
        }
        var ef = function(m) {
            _inherits(Connector, m);
            var R, C = (R = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct || Reflect.construct.sham)
                    return !1;
                if ("function" == typeof Proxy)
                    return !0;
                try {
                    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})),
                    !0
                } catch (m) {
                    return !1
                }
            }(),
            function() {
                var m, C = _getPrototypeOf(Connector);
                if (R) {
                    var T = _getPrototypeOf(this).constructor;
                    m = Reflect.construct(C, arguments, T)
                } else
                    m = C.apply(this, arguments);
                return _possibleConstructorReturn(this, m)
            }
            );
            function Connector(m, R, T) {
                var U, $ = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};
                return (0,
                L.Z)(this, Connector),
                U = C.call(this),
                J && Y.call((0,
                B.Z)(U)),
                U.backend = m,
                U.store = R,
                U.services = T,
                U.languageUtils = T.languageUtils,
                U.options = $,
                U.logger = Z.create("backendConnector"),
                U.waitingReads = [],
                U.maxParallelReads = $.maxParallelReads || 10,
                U.readingCalls = 0,
                U.maxRetries = $.maxRetries >= 0 ? $.maxRetries : 5,
                U.retryTimeout = $.retryTimeout >= 1 ? $.retryTimeout : 350,
                U.state = {},
                U.queue = [],
                U.backend && U.backend.init && U.backend.init(T, $.backend, $),
                U
            }
            return (0,
            U.Z)(Connector, [{
                key: "queueLoad",
                value: function(m, R, C, T) {
                    var L = this
                      , U = {}
                      , B = {}
                      , $ = {}
                      , V = {};
                    return m.forEach(function(m) {
                        var T = !0;
                        R.forEach(function(R) {
                            var $ = "".concat(m, "|").concat(R);
                            !C.reload && L.store.hasResourceBundle(m, R) ? L.state[$] = 2 : L.state[$] < 0 || (1 === L.state[$] ? void 0 === B[$] && (B[$] = !0) : (L.state[$] = 1,
                            T = !1,
                            void 0 === B[$] && (B[$] = !0),
                            void 0 === U[$] && (U[$] = !0),
                            void 0 === V[R] && (V[R] = !0)))
                        }),
                        T || ($[m] = !0)
                    }),
                    (Object.keys(U).length || Object.keys(B).length) && this.queue.push({
                        pending: B,
                        pendingCount: Object.keys(B).length,
                        loaded: {},
                        errors: [],
                        callback: T
                    }),
                    {
                        toLoad: Object.keys(U),
                        pending: Object.keys(B),
                        toLoadLanguages: Object.keys($),
                        toLoadNamespaces: Object.keys(V)
                    }
                }
            }, {
                key: "loaded",
                value: function(m, R, C) {
                    var T = m.split("|")
                      , L = T[0]
                      , U = T[1];
                    R && this.emit("failedLoading", L, U, R),
                    C && this.store.addResourceBundle(L, U, C),
                    this.state[m] = R ? -1 : 2;
                    var B = {};
                    this.queue.forEach(function(C) {
                        var T, $, V, H;
                        (V = ($ = getLastOfPath(C.loaded, [L], Object)).obj)[H = $.k] = V[H] || [],
                        T && (V[H] = V[H].concat(U)),
                        T || V[H].push(U),
                        void 0 !== C.pending[m] && (delete C.pending[m],
                        C.pendingCount--),
                        R && C.errors.push(R),
                        0 !== C.pendingCount || C.done || (Object.keys(C.loaded).forEach(function(m) {
                            B[m] || (B[m] = {});
                            var R = C.loaded[m];
                            R.length && R.forEach(function(R) {
                                void 0 === B[m][R] && (B[m][R] = !0)
                            })
                        }),
                        C.done = !0,
                        C.errors.length ? C.callback(C.errors) : C.callback())
                    }),
                    this.emit("loaded", B),
                    this.queue = this.queue.filter(function(m) {
                        return !m.done
                    })
                }
            }, {
                key: "read",
                value: function(m, R, C) {
                    var T = this
                      , L = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0
                      , U = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : this.retryTimeout
                      , B = arguments.length > 5 ? arguments[5] : void 0;
                    if (!m.length)
                        return B(null, {});
                    if (this.readingCalls >= this.maxParallelReads) {
                        this.waitingReads.push({
                            lng: m,
                            ns: R,
                            fcName: C,
                            tried: L,
                            wait: U,
                            callback: B
                        });
                        return
                    }
                    return this.readingCalls++,
                    this.backend[C](m, R, function($, V) {
                        if (T.readingCalls--,
                        T.waitingReads.length > 0) {
                            var H = T.waitingReads.shift();
                            T.read(H.lng, H.ns, H.fcName, H.tried, H.wait, H.callback)
                        }
                        if ($ && V && L < T.maxRetries) {
                            setTimeout(function() {
                                T.read.call(T, m, R, C, L + 1, 2 * U, B)
                            }, U);
                            return
                        }
                        B($, V)
                    })
                }
            }, {
                key: "prepareLoading",
                value: function(m, R) {
                    var C = this
                      , T = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}
                      , L = arguments.length > 3 ? arguments[3] : void 0;
                    if (!this.backend)
                        return this.logger.warn("No backend was added via i18next.use. Will not load resources."),
                        L && L();
                    "string" == typeof m && (m = this.languageUtils.toResolveHierarchy(m)),
                    "string" == typeof R && (R = [R]);
                    var U = this.queueLoad(m, R, T, L);
                    if (!U.toLoad.length)
                        return U.pending.length || L(),
                        null;
                    U.toLoad.forEach(function(m) {
                        C.loadOne(m)
                    })
                }
            }, {
                key: "load",
                value: function(m, R, C) {
                    this.prepareLoading(m, R, {}, C)
                }
            }, {
                key: "reload",
                value: function(m, R, C) {
                    this.prepareLoading(m, R, {
                        reload: !0
                    }, C)
                }
            }, {
                key: "loadOne",
                value: function(m) {
                    var R = this
                      , C = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : ""
                      , T = m.split("|")
                      , L = T[0]
                      , U = T[1];
                    this.read(L, U, "read", void 0, void 0, function(T, B) {
                        T && R.logger.warn("".concat(C, "loading namespace ").concat(U, " for language ").concat(L, " failed"), T),
                        !T && B && R.logger.log("".concat(C, "loaded namespace ").concat(U, " for language ").concat(L), B),
                        R.loaded(m, T, B)
                    })
                }
            }, {
                key: "saveMissing",
                value: function(m, R, C, T, L) {
                    var U = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : {};
                    if (this.services.utils && this.services.utils.hasLoadedNamespace && !this.services.utils.hasLoadedNamespace(R)) {
                        this.logger.warn('did not save key "'.concat(C, '" as the namespace "').concat(R, '" was not yet loaded'), "This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!");
                        return
                    }
                    null != C && "" !== C && (this.backend && this.backend.create && this.backend.create(m, R, C, T, null, _objectSpread$5(_objectSpread$5({}, U), {}, {
                        isUpdate: L
                    })),
                    m && m[0] && this.store.addResource(m[0], R, C, T))
                }
            }]),
            Connector
        }(Y);
        function transformOptions(m) {
            return "string" == typeof m.ns && (m.ns = [m.ns]),
            "string" == typeof m.fallbackLng && (m.fallbackLng = [m.fallbackLng]),
            "string" == typeof m.fallbackNS && (m.fallbackNS = [m.fallbackNS]),
            m.supportedLngs && 0 > m.supportedLngs.indexOf("cimode") && (m.supportedLngs = m.supportedLngs.concat(["cimode"])),
            m
        }
        function ownKeys$6(m, R) {
            var C = Object.keys(m);
            if (Object.getOwnPropertySymbols) {
                var T = Object.getOwnPropertySymbols(m);
                R && (T = T.filter(function(R) {
                    return Object.getOwnPropertyDescriptor(m, R).enumerable
                })),
                C.push.apply(C, T)
            }
            return C
        }
        function _objectSpread$6(m) {
            for (var R = 1; R < arguments.length; R++) {
                var C = null != arguments[R] ? arguments[R] : {};
                R % 2 ? ownKeys$6(Object(C), !0).forEach(function(R) {
                    (0,
                    V.Z)(m, R, C[R])
                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(m, Object.getOwnPropertyDescriptors(C)) : ownKeys$6(Object(C)).forEach(function(R) {
                    Object.defineProperty(m, R, Object.getOwnPropertyDescriptor(C, R))
                })
            }
            return m
        }
        function noop() {}
        var ed = function(m) {
            _inherits(I18n, m);
            var R, C = (R = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct || Reflect.construct.sham)
                    return !1;
                if ("function" == typeof Proxy)
                    return !0;
                try {
                    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})),
                    !0
                } catch (m) {
                    return !1
                }
            }(),
            function() {
                var m, C = _getPrototypeOf(I18n);
                if (R) {
                    var T = _getPrototypeOf(this).constructor;
                    m = Reflect.construct(C, arguments, T)
                } else
                    m = C.apply(this, arguments);
                return _possibleConstructorReturn(this, m)
            }
            );
            function I18n() {
                var m, R = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, T = arguments.length > 1 ? arguments[1] : void 0;
                if ((0,
                L.Z)(this, I18n),
                m = C.call(this),
                J && Y.call((0,
                B.Z)(m)),
                m.options = transformOptions(R),
                m.services = {},
                m.logger = Z,
                m.modules = {
                    external: []
                },
                !function(m) {
                    Object.getOwnPropertyNames(Object.getPrototypeOf(m)).forEach(function(R) {
                        "function" == typeof m[R] && (m[R] = m[R].bind(m))
                    })
                }((0,
                B.Z)(m)),
                T && !m.isInitialized && !R.isClone) {
                    if (!m.options.initImmediate)
                        return m.init(R, T),
                        _possibleConstructorReturn(m, (0,
                        B.Z)(m));
                    setTimeout(function() {
                        m.init(R, T)
                    }, 0)
                }
                return m
            }
            return (0,
            U.Z)(I18n, [{
                key: "init",
                value: function() {
                    var m = this
                      , R = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
                      , C = arguments.length > 1 ? arguments[1] : void 0;
                    "function" == typeof R && (C = R,
                    R = {}),
                    !R.defaultNS && !1 !== R.defaultNS && R.ns && ("string" == typeof R.ns ? R.defaultNS = R.ns : 0 > R.ns.indexOf("translation") && (R.defaultNS = R.ns[0]));
                    var L = {
                        debug: !1,
                        initImmediate: !0,
                        ns: ["translation"],
                        defaultNS: ["translation"],
                        fallbackLng: ["dev"],
                        fallbackNS: !1,
                        supportedLngs: !1,
                        nonExplicitSupportedLngs: !1,
                        load: "all",
                        preload: !1,
                        simplifyPluralSuffix: !0,
                        keySeparator: ".",
                        nsSeparator: ":",
                        pluralSeparator: "_",
                        contextSeparator: "_",
                        partialBundledLanguages: !1,
                        saveMissing: !1,
                        updateMissing: !1,
                        saveMissingTo: "fallback",
                        saveMissingPlurals: !0,
                        missingKeyHandler: !1,
                        missingInterpolationHandler: !1,
                        postProcess: !1,
                        postProcessPassResolved: !1,
                        returnNull: !0,
                        returnEmptyString: !0,
                        returnObjects: !1,
                        joinArrays: !1,
                        returnedObjectHandler: !1,
                        parseMissingKeyHandler: !1,
                        appendNamespaceToMissingKey: !1,
                        appendNamespaceToCIMode: !1,
                        overloadTranslationOptionHandler: function(m) {
                            var R = {};
                            if ("object" === (0,
                            T.Z)(m[1]) && (R = m[1]),
                            "string" == typeof m[1] && (R.defaultValue = m[1]),
                            "string" == typeof m[2] && (R.tDescription = m[2]),
                            "object" === (0,
                            T.Z)(m[2]) || "object" === (0,
                            T.Z)(m[3])) {
                                var C = m[3] || m[2];
                                Object.keys(C).forEach(function(m) {
                                    R[m] = C[m]
                                })
                            }
                            return R
                        },
                        interpolation: {
                            escapeValue: !0,
                            format: function(m, R, C, T) {
                                return m
                            },
                            prefix: "{{",
                            suffix: "}}",
                            formatSeparator: ",",
                            unescapePrefix: "-",
                            nestingPrefix: "$t(",
                            nestingSuffix: ")",
                            nestingOptionsSeparator: ",",
                            maxReplaces: 1e3,
                            skipOnVariables: !0
                        }
                    };
                    function createClassOnDemand(m) {
                        return m ? "function" == typeof m ? new m : m : null
                    }
                    if (this.options = _objectSpread$6(_objectSpread$6(_objectSpread$6({}, L), this.options), transformOptions(R)),
                    "v1" !== this.options.compatibilityAPI && (this.options.interpolation = _objectSpread$6(_objectSpread$6({}, L.interpolation), this.options.interpolation)),
                    void 0 !== R.keySeparator && (this.options.userDefinedKeySeparator = R.keySeparator),
                    void 0 !== R.nsSeparator && (this.options.userDefinedNsSeparator = R.nsSeparator),
                    !this.options.isClone) {
                        this.modules.logger ? Z.init(createClassOnDemand(this.modules.logger), this.options) : Z.init(null, this.options),
                        this.modules.formatter ? U = this.modules.formatter : "undefined" != typeof Intl && (U = eu);
                        var U, B = new en(this.options);
                        this.store = new Q(this.options.resources,this.options);
                        var $ = this.services;
                        $.logger = Z,
                        $.resourceStore = this.store,
                        $.languageUtils = B,
                        $.pluralResolver = new el(B,{
                            prepend: this.options.pluralSeparator,
                            compatibilityJSON: this.options.compatibilityJSON,
                            simplifyPluralSuffix: this.options.simplifyPluralSuffix
                        }),
                        U && (!this.options.interpolation.format || this.options.interpolation.format === L.interpolation.format) && ($.formatter = createClassOnDemand(U),
                        $.formatter.init($, this.options),
                        this.options.interpolation.format = $.formatter.format.bind($.formatter)),
                        $.interpolator = new ec(this.options),
                        $.utils = {
                            hasLoadedNamespace: this.hasLoadedNamespace.bind(this)
                        },
                        $.backendConnector = new ef(createClassOnDemand(this.modules.backend),$.resourceStore,$,this.options),
                        $.backendConnector.on("*", function(R) {
                            for (var C = arguments.length, T = Array(C > 1 ? C - 1 : 0), L = 1; L < C; L++)
                                T[L - 1] = arguments[L];
                            m.emit.apply(m, [R].concat(T))
                        }),
                        this.modules.languageDetector && ($.languageDetector = createClassOnDemand(this.modules.languageDetector),
                        $.languageDetector.init($, this.options.detection, this.options)),
                        this.modules.i18nFormat && ($.i18nFormat = createClassOnDemand(this.modules.i18nFormat),
                        $.i18nFormat.init && $.i18nFormat.init(this)),
                        this.translator = new er(this.services,this.options),
                        this.translator.on("*", function(R) {
                            for (var C = arguments.length, T = Array(C > 1 ? C - 1 : 0), L = 1; L < C; L++)
                                T[L - 1] = arguments[L];
                            m.emit.apply(m, [R].concat(T))
                        }),
                        this.modules.external.forEach(function(R) {
                            R.init && R.init(m)
                        })
                    }
                    if (this.format = this.options.interpolation.format,
                    C || (C = noop),
                    this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {
                        var V = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);
                        V.length > 0 && "dev" !== V[0] && (this.options.lng = V[0])
                    }
                    this.services.languageDetector || this.options.lng || this.logger.warn("init: no languageDetector is used and no lng is defined"),
                    ["getResource", "hasResourceBundle", "getResourceBundle", "getDataByLanguage"].forEach(function(R) {
                        m[R] = function() {
                            var C;
                            return (C = m.store)[R].apply(C, arguments)
                        }
                    }),
                    ["addResource", "addResources", "addResourceBundle", "removeResourceBundle"].forEach(function(R) {
                        m[R] = function() {
                            var C;
                            return (C = m.store)[R].apply(C, arguments),
                            m
                        }
                    });
                    var H = defer()
                      , load = function() {
                        var finish = function(R, T) {
                            m.isInitialized && !m.initializedStoreOnce && m.logger.warn("init: i18next is already initialized. You should call init just once!"),
                            m.isInitialized = !0,
                            m.options.isClone || m.logger.log("initialized", m.options),
                            m.emit("initialized", m.options),
                            H.resolve(T),
                            C(R, T)
                        };
                        if (m.languages && "v1" !== m.options.compatibilityAPI && !m.isInitialized)
                            return finish(null, m.t.bind(m));
                        m.changeLanguage(m.options.lng, finish)
                    };
                    return this.options.resources || !this.options.initImmediate ? load() : setTimeout(load, 0),
                    H
                }
            }, {
                key: "loadResources",
                value: function(m) {
                    var R = this
                      , C = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : noop
                      , T = C
                      , L = "string" == typeof m ? m : this.language;
                    if ("function" == typeof m && (T = m),
                    !this.options.resources || this.options.partialBundledLanguages) {
                        if (L && "cimode" === L.toLowerCase())
                            return T();
                        var U = []
                          , append = function(m) {
                            m && R.services.languageUtils.toResolveHierarchy(m).forEach(function(m) {
                                0 > U.indexOf(m) && U.push(m)
                            })
                        };
                        L ? append(L) : this.services.languageUtils.getFallbackCodes(this.options.fallbackLng).forEach(function(m) {
                            return append(m)
                        }),
                        this.options.preload && this.options.preload.forEach(function(m) {
                            return append(m)
                        }),
                        this.services.backendConnector.load(U, this.options.ns, function(m) {
                            m || R.resolvedLanguage || !R.language || R.setResolvedLanguage(R.language),
                            T(m)
                        })
                    } else
                        T(null)
                }
            }, {
                key: "reloadResources",
                value: function(m, R, C) {
                    var T = defer();
                    return m || (m = this.languages),
                    R || (R = this.options.ns),
                    C || (C = noop),
                    this.services.backendConnector.reload(m, R, function(m) {
                        T.resolve(),
                        C(m)
                    }),
                    T
                }
            }, {
                key: "use",
                value: function(m) {
                    if (!m)
                        throw Error("You are passing an undefined module! Please check the object you are passing to i18next.use()");
                    if (!m.type)
                        throw Error("You are passing a wrong module! Please check the object you are passing to i18next.use()");
                    return "backend" === m.type && (this.modules.backend = m),
                    ("logger" === m.type || m.log && m.warn && m.error) && (this.modules.logger = m),
                    "languageDetector" === m.type && (this.modules.languageDetector = m),
                    "i18nFormat" === m.type && (this.modules.i18nFormat = m),
                    "postProcessor" === m.type && ee.addPostProcessor(m),
                    "formatter" === m.type && (this.modules.formatter = m),
                    "3rdParty" === m.type && this.modules.external.push(m),
                    this
                }
            }, {
                key: "setResolvedLanguage",
                value: function(m) {
                    if (m && this.languages && !(["cimode", "dev"].indexOf(m) > -1))
                        for (var R = 0; R < this.languages.length; R++) {
                            var C = this.languages[R];
                            if (!(["cimode", "dev"].indexOf(C) > -1) && this.store.hasLanguageSomeTranslations(C)) {
                                this.resolvedLanguage = C;
                                break
                            }
                        }
                }
            }, {
                key: "changeLanguage",
                value: function(m, R) {
                    var C = this;
                    this.isLanguageChangingTo = m;
                    var T = defer();
                    this.emit("languageChanging", m);
                    var setLngProps = function(m) {
                        C.language = m,
                        C.languages = C.services.languageUtils.toResolveHierarchy(m),
                        C.resolvedLanguage = void 0,
                        C.setResolvedLanguage(m)
                    }
                      , done = function(m, L) {
                        L ? (setLngProps(L),
                        C.translator.changeLanguage(L),
                        C.isLanguageChangingTo = void 0,
                        C.emit("languageChanged", L),
                        C.logger.log("languageChanged", L)) : C.isLanguageChangingTo = void 0,
                        T.resolve(function() {
                            return C.t.apply(C, arguments)
                        }),
                        R && R(m, function() {
                            return C.t.apply(C, arguments)
                        })
                    }
                      , setLng = function(R) {
                        m || R || !C.services.languageDetector || (R = []);
                        var T = "string" == typeof R ? R : C.services.languageUtils.getBestMatchFromCodes(R);
                        T && (C.language || setLngProps(T),
                        C.translator.language || C.translator.changeLanguage(T),
                        C.services.languageDetector && C.services.languageDetector.cacheUserLanguage(T)),
                        C.loadResources(T, function(m) {
                            done(m, T)
                        })
                    };
                    return m || !this.services.languageDetector || this.services.languageDetector.async ? !m && this.services.languageDetector && this.services.languageDetector.async ? this.services.languageDetector.detect(setLng) : setLng(m) : setLng(this.services.languageDetector.detect()),
                    T
                }
            }, {
                key: "getFixedT",
                value: function(m, R, C) {
                    var L = this
                      , fixedT = function fixedT(m, R) {
                        if ("object" !== (0,
                        T.Z)(R)) {
                            for (var U, B = arguments.length, $ = Array(B > 2 ? B - 2 : 0), V = 2; V < B; V++)
                                $[V - 2] = arguments[V];
                            U = L.options.overloadTranslationOptionHandler([m, R].concat($))
                        } else
                            U = _objectSpread$6({}, R);
                        U.lng = U.lng || fixedT.lng,
                        U.lngs = U.lngs || fixedT.lngs,
                        U.ns = U.ns || fixedT.ns,
                        U.keyPrefix = U.keyPrefix || C || fixedT.keyPrefix;
                        var H = L.options.keySeparator || "."
                          , W = U.keyPrefix ? "".concat(U.keyPrefix).concat(H).concat(m) : m;
                        return L.t(W, U)
                    };
                    return "string" == typeof m ? fixedT.lng = m : fixedT.lngs = m,
                    fixedT.ns = R,
                    fixedT.keyPrefix = C,
                    fixedT
                }
            }, {
                key: "t",
                value: function() {
                    var m;
                    return this.translator && (m = this.translator).translate.apply(m, arguments)
                }
            }, {
                key: "exists",
                value: function() {
                    var m;
                    return this.translator && (m = this.translator).exists.apply(m, arguments)
                }
            }, {
                key: "setDefaultNamespace",
                value: function(m) {
                    this.options.defaultNS = m
                }
            }, {
                key: "hasLoadedNamespace",
                value: function(m) {
                    var R = this
                      , C = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                    if (!this.isInitialized)
                        return this.logger.warn("hasLoadedNamespace: i18next was not initialized", this.languages),
                        !1;
                    if (!this.languages || !this.languages.length)
                        return this.logger.warn("hasLoadedNamespace: i18n.languages were undefined or empty", this.languages),
                        !1;
                    var T = this.resolvedLanguage || this.languages[0]
                      , L = !!this.options && this.options.fallbackLng
                      , U = this.languages[this.languages.length - 1];
                    if ("cimode" === T.toLowerCase())
                        return !0;
                    var loadNotPending = function(m, C) {
                        var T = R.services.backendConnector.state["".concat(m, "|").concat(C)];
                        return -1 === T || 2 === T
                    };
                    if (C.precheck) {
                        var B = C.precheck(this, loadNotPending);
                        if (void 0 !== B)
                            return B
                    }
                    return !!(this.hasResourceBundle(T, m) || !this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages || loadNotPending(T, m) && (!L || loadNotPending(U, m)))
                }
            }, {
                key: "loadNamespaces",
                value: function(m, R) {
                    var C = this
                      , T = defer();
                    return this.options.ns ? ("string" == typeof m && (m = [m]),
                    m.forEach(function(m) {
                        0 > C.options.ns.indexOf(m) && C.options.ns.push(m)
                    }),
                    this.loadResources(function(m) {
                        T.resolve(),
                        R && R(m)
                    }),
                    T) : (R && R(),
                    Promise.resolve())
                }
            }, {
                key: "loadLanguages",
                value: function(m, R) {
                    var C = defer();
                    "string" == typeof m && (m = [m]);
                    var T = this.options.preload || []
                      , L = m.filter(function(m) {
                        return 0 > T.indexOf(m)
                    });
                    return L.length ? (this.options.preload = T.concat(L),
                    this.loadResources(function(m) {
                        C.resolve(),
                        R && R(m)
                    }),
                    C) : (R && R(),
                    Promise.resolve())
                }
            }, {
                key: "dir",
                value: function(m) {
                    return (m || (m = this.resolvedLanguage || (this.languages && this.languages.length > 0 ? this.languages[0] : this.language)),
                    m) ? ["ar", "shu", "sqr", "ssh", "xaa", "yhd", "yud", "aao", "abh", "abv", "acm", "acq", "acw", "acx", "acy", "adf", "ads", "aeb", "aec", "afb", "ajp", "apc", "apd", "arb", "arq", "ars", "ary", "arz", "auz", "avl", "ayh", "ayl", "ayn", "ayp", "bbz", "pga", "he", "iw", "ps", "pbt", "pbu", "pst", "prp", "prd", "ug", "ur", "ydd", "yds", "yih", "ji", "yi", "hbo", "men", "xmn", "fa", "jpr", "peo", "pes", "prs", "dv", "sam", "ckb"].indexOf(this.services.languageUtils.getLanguagePartFromCode(m)) > -1 || m.toLowerCase().indexOf("-arab") > 1 ? "rtl" : "ltr" : "rtl"
                }
            }, {
                key: "cloneInstance",
                value: function() {
                    var m = this
                      , R = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
                      , C = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : noop
                      , T = _objectSpread$6(_objectSpread$6(_objectSpread$6({}, this.options), R), {
                        isClone: !0
                    })
                      , L = new I18n(T);
                    return (void 0 !== R.debug || void 0 !== R.prefix) && (L.logger = L.logger.clone(R)),
                    ["store", "services", "language"].forEach(function(R) {
                        L[R] = m[R]
                    }),
                    L.services = _objectSpread$6({}, this.services),
                    L.services.utils = {
                        hasLoadedNamespace: L.hasLoadedNamespace.bind(L)
                    },
                    L.translator = new er(L.services,L.options),
                    L.translator.on("*", function(m) {
                        for (var R = arguments.length, C = Array(R > 1 ? R - 1 : 0), T = 1; T < R; T++)
                            C[T - 1] = arguments[T];
                        L.emit.apply(L, [m].concat(C))
                    }),
                    L.init(T, C),
                    L.translator.options = L.options,
                    L.translator.backendConnector.services.utils = {
                        hasLoadedNamespace: L.hasLoadedNamespace.bind(L)
                    },
                    L
                }
            }, {
                key: "toJSON",
                value: function() {
                    return {
                        options: this.options,
                        store: this.store,
                        language: this.language,
                        languages: this.languages,
                        resolvedLanguage: this.resolvedLanguage
                    }
                }
            }]),
            I18n
        }(Y);
        (0,
        V.Z)(ed, "createInstance", function() {
            var m = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
              , R = arguments.length > 1 ? arguments[1] : void 0;
            return new ed(m,R)
        });
        var ep = ed.createInstance();
        ep.createInstance = ed.createInstance,
        ep.createInstance,
        ep.init,
        ep.loadResources,
        ep.reloadResources,
        ep.use,
        ep.changeLanguage,
        ep.getFixedT,
        ep.t,
        ep.exists,
        ep.setDefaultNamespace,
        ep.hasLoadedNamespace,
        ep.loadNamespaces,
        ep.loadLanguages;
        var eh = ep
    },
    48583: function(m, R, C) {
        "use strict";
        C.d(R, {
            KO: function() {
                return useAtom
            },
            zt: function() {
                return Provider
            }
        });
        var T = C(67294)
          , L = C(15103);
        let U = (0,
        T.createContext)(void 0)
          , useStore = m=>{
            let R = (0,
            T.useContext)(U);
            return (null == m ? void 0 : m.store) || R || (0,
            L.K7)()
        }
          , Provider = ({children: m, store: R})=>{
            let C = (0,
            T.useRef)();
            return R || C.current || (C.current = (0,
            L.MT)()),
            (0,
            T.createElement)(U.Provider, {
                value: R || C.current
            }, m)
        }
          , isPromiseLike = m=>"function" == typeof (null == m ? void 0 : m.then)
          , B = T.use || (m=>{
            if ("pending" === m.status)
                throw m;
            if ("fulfilled" === m.status)
                return m.value;
            if ("rejected" === m.status)
                throw m.reason;
            throw m.status = "pending",
            m.then(R=>{
                m.status = "fulfilled",
                m.value = R
            }
            , R=>{
                m.status = "rejected",
                m.reason = R
            }
            ),
            m
        }
        );
        function useAtom(m, R) {
            return [function(m, R) {
                let C = useStore(R)
                  , [[L,U,$],V] = (0,
                T.useReducer)(R=>{
                    let T = C.get(m);
                    return Object.is(R[0], T) && R[1] === C && R[2] === m ? R : [T, C, m]
                }
                , void 0, ()=>[C.get(m), C, m])
                  , H = L;
                (U !== C || $ !== m) && (V(),
                H = C.get(m));
                let W = null == R ? void 0 : R.delay;
                return (0,
                T.useEffect)(()=>{
                    let R = C.sub(m, ()=>{
                        if ("number" == typeof W) {
                            setTimeout(V, W);
                            return
                        }
                        V()
                    }
                    );
                    return V(),
                    R
                }
                , [C, m, W]),
                (0,
                T.useDebugValue)(H),
                isPromiseLike(H) ? B(H) : H
            }(m, R), function(m, R) {
                let C = useStore(R)
                  , L = (0,
                T.useCallback)((...R)=>{
                    if (!("write"in m))
                        throw Error("not writable atom");
                    return C.set(m, ...R)
                }
                , [C, m]);
                return L
            }(m, R)]
        }
    },
    15103: function(m, R, C) {
        "use strict";
        let T;
        C.d(R, {
            K7: function() {
                return getDefaultStore
            },
            MT: function() {
                return createStore
            },
            cn: function() {
                return atom
            }
        });
        let L = 0;
        function atom(m, R) {
            let C = `atom${++L}`
              , T = {
                toString: ()=>C
            };
            return "function" == typeof m ? T.read = m : (T.init = m,
            T.read = m=>m(T),
            T.write = (m,R,C)=>R(T, "function" == typeof C ? C(m(T)) : C)),
            R && (T.write = R),
            T
        }
        let hasInitialValue = m=>"init"in m
          , isActuallyWritableAtom = m=>!!m.write
          , U = new WeakMap
          , registerCancelPromise = (m,R)=>{
            U.set(m, R),
            m.catch(()=>{}
            ).finally(()=>U.delete(m))
        }
          , cancelPromise = (m,R)=>{
            let C = U.get(m);
            C && (U.delete(m),
            C(R))
        }
          , resolvePromise = (m,R)=>{
            m.status = "fulfilled",
            m.value = R
        }
          , rejectPromise = (m,R)=>{
            m.status = "rejected",
            m.reason = R
        }
          , isPromiseLike = m=>"function" == typeof (null == m ? void 0 : m.then)
          , isEqualAtomValue = (m,R)=>"v"in m && "v"in R && Object.is(m.v, R.v)
          , isEqualAtomError = (m,R)=>"e"in m && "e"in R && Object.is(m.e, R.e)
          , hasPromiseAtomValue = m=>"v"in m && m.v instanceof Promise
          , isEqualPromiseAtomValue = (m,R)=>"v"in m && "v"in R && m.v.orig && m.v.orig === R.v.orig
          , returnAtomValue = m=>{
            if ("e"in m)
                throw m.e;
            return m.v
        }
          , createStore = ()=>{
            let m, R;
            let C = new WeakMap
              , T = new WeakMap
              , L = new Map;
            m = new Set,
            R = new Set;
            let getAtomState = m=>C.get(m)
              , setAtomState = (m,R)=>{
                Object.freeze(R);
                let T = C.get(m);
                if (C.set(m, R),
                L.has(m) || L.set(m, T),
                T && hasPromiseAtomValue(T)) {
                    let m = "v"in R ? R.v instanceof Promise ? R.v : Promise.resolve(R.v) : Promise.reject(R.e);
                    cancelPromise(T.v, m)
                }
            }
              , updateDependencies = (m,R,C)=>{
                let T = new Map
                  , L = !1;
                C.forEach((C,U)=>{
                    C || U !== m || (C = R),
                    C ? (T.set(U, C),
                    R.d.get(U) !== C && (L = !0)) : console.warn("[Bug] atom state not found")
                }
                ),
                (L || R.d.size !== T.size) && (R.d = T)
            }
              , setAtomValue = (m,R,C)=>{
                let T = getAtomState(m)
                  , L = {
                    d: (null == T ? void 0 : T.d) || new Map,
                    v: R
                };
                if (C && updateDependencies(m, L, C),
                T && isEqualAtomValue(T, L) && T.d === L.d)
                    return T;
                if (T && hasPromiseAtomValue(T) && hasPromiseAtomValue(L) && isEqualPromiseAtomValue(T, L)) {
                    if (T.d === L.d)
                        return T;
                    L.v = T.v
                }
                return setAtomState(m, L),
                L
            }
              , setAtomValueOrPromise = (m,R,C,L)=>{
                if (isPromiseLike(R)) {
                    let U;
                    let B = new Promise((L,$)=>{
                        let V = !1;
                        R.then(R=>{
                            if (!V) {
                                V = !0;
                                let U = getAtomState(m)
                                  , $ = setAtomValue(m, B, C);
                                resolvePromise(B, R),
                                L(R),
                                T.has(m) && (null == U ? void 0 : U.d) !== $.d && mountDependencies(m, $, null == U ? void 0 : U.d)
                            }
                        }
                        , R=>{
                            if (!V) {
                                V = !0;
                                let L = getAtomState(m)
                                  , U = setAtomValue(m, B, C);
                                rejectPromise(B, R),
                                $(R),
                                T.has(m) && (null == L ? void 0 : L.d) !== U.d && mountDependencies(m, U, null == L ? void 0 : L.d)
                            }
                        }
                        ),
                        U = m=>{
                            V || (V = !0,
                            m.then(m=>resolvePromise(B, m), m=>rejectPromise(B, m)),
                            L(m))
                        }
                    }
                    );
                    return B.orig = R,
                    B.status = "pending",
                    registerCancelPromise(B, m=>{
                        m && U(m),
                        null == L || L()
                    }
                    ),
                    setAtomValue(m, B, C)
                }
                return setAtomValue(m, R, C)
            }
              , setAtomError = (m,R,C)=>{
                let T = getAtomState(m)
                  , L = {
                    d: (null == T ? void 0 : T.d) || new Map,
                    e: R
                };
                return (C && updateDependencies(m, L, C),
                T && isEqualAtomError(T, L) && T.d === L.d) ? T : (setAtomState(m, L),
                L)
            }
              , readAtomState = (m,R)=>{
                let C, L;
                let U = getAtomState(m);
                if (!R && U && (T.has(m) || Array.from(U.d).every(([R,C])=>R === m || readAtomState(R) === C)))
                    return U;
                let B = new Map
                  , $ = !0;
                try {
                    let R = m.read(R=>{
                        if (R === m) {
                            let m = getAtomState(R);
                            if (m)
                                return B.set(R, m),
                                returnAtomValue(m);
                            if (hasInitialValue(R))
                                return B.set(R, void 0),
                                R.init;
                            throw Error("no atom init")
                        }
                        let C = readAtomState(R);
                        return B.set(R, C),
                        returnAtomValue(C)
                    }
                    , {
                        get signal() {
                            return C || (C = new AbortController),
                            C.signal
                        },
                        get setSelf() {
                            return isActuallyWritableAtom(m) || console.warn("setSelf function cannot be used with read-only atom"),
                            !L && isActuallyWritableAtom(m) && (L = (...R)=>{
                                if ($ && console.warn("setSelf function cannot be called in sync"),
                                !$)
                                    return writeAtom(m, ...R)
                            }
                            ),
                            L
                        }
                    });
                    return setAtomValueOrPromise(m, R, B, ()=>null == C ? void 0 : C.abort())
                } catch (R) {
                    return setAtomError(m, R, B)
                } finally {
                    $ = !1
                }
            }
              , addAtom = m=>{
                let R = T.get(m);
                return R || (R = mountAtom(m)),
                R
            }
              , canUnmountAtom = (m,R)=>!R.l.size && (!R.t.size || 1 === R.t.size && R.t.has(m))
              , delAtom = m=>{
                let R = T.get(m);
                R && canUnmountAtom(m, R) && unmountAtom(m)
            }
              , recomputeDependents = m=>{
                let R = new Map
                  , C = new WeakMap
                  , getDependents = m=>{
                    var R;
                    let C = new Set(null == (R = T.get(m)) ? void 0 : R.t);
                    return L.forEach((R,T)=>{
                        var L;
                        (null == (L = getAtomState(T)) ? void 0 : L.d.has(m)) && C.add(T)
                    }
                    ),
                    C
                }
                  , loop1 = m=>{
                    getDependents(m).forEach(T=>{
                        T !== m && (R.set(T, (R.get(T) || new Set).add(m)),
                        C.set(T, (C.get(T) || 0) + 1),
                        loop1(T))
                    }
                    )
                }
                ;
                loop1(m);
                let loop2 = m=>{
                    getDependents(m).forEach(T=>{
                        var L;
                        if (T !== m) {
                            let m = C.get(T);
                            if (m && C.set(T, --m),
                            !m) {
                                let m = !!(null == (L = R.get(T)) ? void 0 : L.size);
                                if (m) {
                                    let R = getAtomState(T)
                                      , C = readAtomState(T, !0);
                                    m = !R || !isEqualAtomValue(R, C)
                                }
                                m || R.forEach(m=>m.delete(T))
                            }
                            loop2(T)
                        }
                    }
                    )
                }
                ;
                loop2(m)
            }
              , writeAtomState = (R,...C)=>{
                let T = !0
                  , L = R.write(m=>returnAtomValue(readAtomState(m)), (C,...L)=>{
                    let U;
                    if (C === R) {
                        if (!hasInitialValue(C))
                            throw Error("atom not writable");
                        let m = getAtomState(C)
                          , R = setAtomValueOrPromise(C, L[0]);
                        m && isEqualAtomValue(m, R) || recomputeDependents(C)
                    } else
                        U = writeAtomState(C, ...L);
                    if (!T) {
                        let R = flushPending();
                        m.forEach(m=>m({
                            type: "async-write",
                            flushed: R
                        }))
                    }
                    return U
                }
                , ...C);
                return T = !1,
                L
            }
              , writeAtom = (R,...C)=>{
                let T = writeAtomState(R, ...C)
                  , L = flushPending();
                return m.forEach(m=>m({
                    type: "write",
                    flushed: L
                })),
                T
            }
              , mountAtom = (m,C,L)=>{
                var U;
                let B = L || [];
                null == (U = getAtomState(m)) || U.d.forEach((R,C)=>{
                    let L = T.get(C);
                    L ? L.t.add(m) : C !== m && mountAtom(C, m, B)
                }
                ),
                readAtomState(m);
                let $ = {
                    t: new Set(C && [C]),
                    l: new Set
                };
                if (T.set(m, $),
                R.add(m),
                isActuallyWritableAtom(m) && m.onMount) {
                    let {onMount: R} = m;
                    B.push(()=>{
                        let C = R((...R)=>writeAtom(m, ...R));
                        C && ($.u = C)
                    }
                    )
                }
                return L || B.forEach(m=>m()),
                $
            }
              , unmountAtom = m=>{
                var C;
                let L = null == (C = T.get(m)) ? void 0 : C.u;
                L && L(),
                T.delete(m),
                R.delete(m);
                let U = getAtomState(m);
                U ? (hasPromiseAtomValue(U) && cancelPromise(U.v),
                U.d.forEach((R,C)=>{
                    if (C !== m) {
                        let R = T.get(C);
                        R && (R.t.delete(m),
                        canUnmountAtom(C, R) && unmountAtom(C))
                    }
                }
                )) : console.warn("[Bug] could not find atom state to unmount", m)
            }
              , mountDependencies = (m,R,C)=>{
                let L = new Set(R.d.keys());
                null == C || C.forEach((R,C)=>{
                    if (L.has(C)) {
                        L.delete(C);
                        return
                    }
                    let U = T.get(C);
                    U && (U.t.delete(m),
                    canUnmountAtom(C, U) && unmountAtom(C))
                }
                ),
                L.forEach(R=>{
                    let C = T.get(R);
                    C ? C.t.add(m) : T.has(m) && mountAtom(R, m)
                }
                )
            }
              , flushPending = ()=>{
                let m;
                for (m = new Set; L.size; ) {
                    let R = Array.from(L);
                    L.clear(),
                    R.forEach(([R,C])=>{
                        let L = getAtomState(R);
                        if (L) {
                            let U = T.get(R);
                            U && L.d !== (null == C ? void 0 : C.d) && mountDependencies(R, L, null == C ? void 0 : C.d),
                            U && !(C && !hasPromiseAtomValue(C) && (isEqualAtomValue(C, L) || isEqualAtomError(C, L))) && (U.l.forEach(m=>m()),
                            m.add(R))
                        } else
                            console.warn("[Bug] no atom state to flush")
                    }
                    )
                }
                return m
            }
            ;
            return {
                get: m=>returnAtomValue(readAtomState(m)),
                set: writeAtom,
                sub: (R,C)=>{
                    let T = addAtom(R)
                      , L = flushPending()
                      , U = T.l;
                    return U.add(C),
                    m.forEach(m=>m({
                        type: "sub",
                        flushed: L
                    })),
                    ()=>{
                        U.delete(C),
                        delAtom(R),
                        m.forEach(m=>m({
                            type: "unsub"
                        }))
                    }
                }
                ,
                dev_subscribe_store: (R,C)=>{
                    if (2 !== C)
                        throw Error("The current StoreListener revision is 2.");
                    return m.add(R),
                    ()=>{
                        m.delete(R)
                    }
                }
                ,
                dev_get_mounted_atoms: ()=>R.values(),
                dev_get_atom_state: m=>C.get(m),
                dev_get_mounted: m=>T.get(m),
                dev_restore_atoms: R=>{
                    for (let[m,C] of R)
                        hasInitialValue(m) && (setAtomValueOrPromise(m, C),
                        recomputeDependents(m));
                    let C = flushPending();
                    m.forEach(m=>m({
                        type: "restore",
                        flushed: C
                    }))
                }
            }
        }
        ;
        "number" == typeof globalThis.__NUMBER_OF_JOTAI_INSTANCES__ ? ++globalThis.__NUMBER_OF_JOTAI_INSTANCES__ : globalThis.__NUMBER_OF_JOTAI_INSTANCES__ = 1;
        let getDefaultStore = ()=>(T || (1 !== globalThis.__NUMBER_OF_JOTAI_INSTANCES__ && console.warn("Detected multiple Jotai instances. It may cause unexpected behavior with the default store. https://github.com/pmndrs/jotai/discussions/2044"),
        T = createStore()),
        T)
    }
}, function(m) {
    var __webpack_exec__ = function(R) {
        return m(m.s = R)
    };
    m.O(0, [774, 179], function() {
        return __webpack_exec__(6840),
        __webpack_exec__(24751)
    }),
    _N_E = m.O()
}
]);
